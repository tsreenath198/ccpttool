{"version":3,"sources":["webpack:///./src/app/layout/message-template/message-template-routing.module.ts","webpack:///./src/app/layout/message-template/message-template.component.html","webpack:///./src/app/layout/message-template/message-template.component.scss","webpack:///./src/app/layout/message-template/message-template.component.ts","webpack:///./src/app/layout/message-template/message-template.model.ts","webpack:///./src/app/layout/message-template/message-template.module.ts"],"names":[],"mappings":"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","file":"message-template-message-template-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { MessageTemplateComponent } from \"./message-template.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: MessageTemplateComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MessageTemplateRoutingModule {}\n","module.exports = \"<div [@routerTransition]>\\n\\n  <app-page-header [icon2]=\\\"'fa-comment'\\\" [heading2]=\\\"'Messages'\\\" [icon1]=\\\"'fa-inbox'\\\" [heading1]=\\\"'Communication'\\\">\\n  </app-page-header>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-7\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\"> <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"search...\\\"\\n            [(ngModel)]=\\\"currSearchTxt\\\" /></div>\\n      </div>\\n      <div class=\\\"table-responsive mt-2 tableFixHead\\\" [style.height.px]=\\\"screenHeight\\\">\\n        <table class=\\\"table table-hover table-striped\\\">\\n          <tbody>\\n            <tr *ngFor=\\\"let mtl of messageTemplateList.list |  paginate: paginateConfig  ; let i = index\\\"\\n              (click)=\\\"setModel(mtl.id)\\\">\\n              <td>\\n                {{mtl.type}}\\n              </td>\\n              <!-- <td width=\\\"100\\\">\\n                <app-action [trashContent]=\\\"trashContent\\\" [id]=\\\"mtl.id\\\" [isTrash]=\\\"trash\\\" (trash)=\\\"open($event)\\\"></app-action>\\n              </td> -->\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div class=\\\"col-12 justify-content-center mb-5\\\" *ngIf=\\\"messageTemplateList.noOfRecords > properties.ITEMSPERPAGE\\\">\\n        <pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls>\\n      </div>\\n    </div>\\n    <div class=\\\" col-md-5\\\">\\n      <form name=\\\"form\\\" id=\\\"messageTemplateForm\\\" (ngSubmit)=\\\"f.form.valid&&create(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">Add</button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\"\\n              (click)=\\\"update(f)\\\">Update</button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\"\\n                (click)=\\\"enableFormEditable()\\\">Edit</button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n\\n            <span class=\\\"pull-right\\\" *ngIf=\\\"showAction && readOnlyForm == 'R'\\\">\\n              <div class=\\\"dropdown theme-dropdown clearfix\\\" placement=\\\"bottom-right\\\" ngbDropdown>\\n                <!-- <button class=\\\"btn btn-secondary\\\" >\\n                              Dropdown\\n                          </button> -->\\n                <i class=\\\"fa fa-bars\\\" ngbDropdownToggle></i>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" ngbDropdownMenu>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"enableFormEditable()\\\">Edit</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"cancelForm(f)\\\">New</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"open(model.id, trashContent)\\\">Delete</a>\\n                </div>\\n              </div>\\n            </span>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Type<span class=\\\"required\\\">*</span></label>\\n              <input class=\\\"form-control\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.type\\\" name=\\\"type\\\"\\n                [ngClass]=\\\"{'is-invalid': f.submitted && type.invalid}\\\" #type=\\\"ngModel\\\" required>\\n              <div class=\\\"invalid-feedback\\\">\\n                type is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Body<span class=\\\"required\\\">*</span></label>\\n              <textarea class=\\\"form-control\\\" cols=\\\"5\\\" rows=\\\"13\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                [(ngModel)]=\\\"model.description\\\" name=\\\"notes\\\" [ngClass]=\\\"{'is-invalid': f.submitted && notes.invalid}\\\"\\n                #notes=\\\"ngModel\\\" required></textarea>\\n              <div class=\\\"invalid-feedback\\\">\\n                Body is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">Add</button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\"\\n              (click)=\\\"update(f)\\\">Update</button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\"\\n              (click)=\\\"enableFormEditable()\\\">Edit</button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<ng-template #trashContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Email Template</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>Are you sure you want to delete ? &hellip;</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"trash()\\\">Ok</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n\"","module.exports = \".required {\\n  color: red; }\\n\\n.my-custom-scrollbar {\\n  position: relative;\\n  height: 31.5em;\\n  overflow: auto; }\\n\\n.table-wrapper-scroll-y {\\n  display: block; }\\n\\n.padding-top {\\n  padding-top: 60px; }\\n\\n.dropdown-toggle::after {\\n  display: none; }\\n\\n.drop-list:hover {\\n  cursor: pointer; }\\n\\n.table-striped tbody tr:nth-of-type(odd) {\\n  background-color: #c1c1c1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L21lc3NhZ2UtdGVtcGxhdGUvRDpcXGNjcHR0b29sLmdpdFxcdHJ1bmtcXGNjcHQtcGFyZW50XFxjY3B0LXdlYlxcc3JjXFxtYWluXFx3ZWIvc3JjXFxhcHBcXGxheW91dFxcbWVzc2FnZS10ZW1wbGF0ZVxcbWVzc2FnZS10ZW1wbGF0ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVUsRUFDWDs7QUFDRDtFQUNFLG1CQUFrQjtFQUNsQixlQUFjO0VBQ2QsZUFBYyxFQUNmOztBQUNEO0VBQ0UsZUFBYyxFQUNmOztBQUNEO0VBQ0Usa0JBQWlCLEVBQ2xCOztBQUNEO0VBQ0UsY0FBYSxFQUNkOztBQUNEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBQ0Q7RUFFSSwwQkFBeUIsRUFDMUIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvbWVzc2FnZS10ZW1wbGF0ZS9tZXNzYWdlLXRlbXBsYXRlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlcXVpcmVkIHtcclxuICBjb2xvcjogcmVkO1xyXG59XHJcbi5teS1jdXN0b20tc2Nyb2xsYmFyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgaGVpZ2h0OiAzMS41ZW07XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuLnRhYmxlLXdyYXBwZXItc2Nyb2xsLXkge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcbi5wYWRkaW5nLXRvcCB7XHJcbiAgcGFkZGluZy10b3A6IDYwcHg7XHJcbn1cclxuLmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXIge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLmRyb3AtbGlzdDpob3ZlciB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi50YWJsZS1zdHJpcGVkIHtcclxuICB0Ym9keSB0cjpudGgtb2YtdHlwZShvZGQpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjMWMxYzE7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { HttpClientService } from 'src/app/shared/services/http.service';\nimport { URLConstants } from '../components/constants/url-constants';\nimport { ToastrCustomService } from 'src/app/shared/services/toastr.service';\nimport { NgbModal, ModalDismissReasons, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { NgForm } from '@angular/forms';\nimport { MessageTemplateModel,ActionsList } from './message-template.model';\nimport { Router } from '@angular/router';\nimport { Properties } from '../components/constants/properties';\n\n@Component({\n    selector: 'app-message-template',\n    templateUrl: './message-template.component.html',\n    styleUrls: ['./message-template.component.scss'],\n    animations: [routerTransition()]\n})\nexport class MessageTemplateComponent implements OnInit {\n\n    public model: MessageTemplateModel = <MessageTemplateModel>{};\n    public messageTemplateList: any = [];\n    public properties = new Properties();\n    private urlConstants = new URLConstants();\n    public readOnlyForm = '';\n    public enableButtonType = '';\n    public currSearchTxt = '';\n    private selectedRecrdToDel = 0;\n    public closeResult = '';\n    private modalRef: NgbModalRef;\n    public isCreate: boolean =false;\n    public showAction: boolean = false;\n    public actionsList = new ActionsList();\n    public action: string = null;\n    public screenHeight: any;\n    public paginateConfig :any={\n        itemsPerPage: this.properties.ITEMSPERPAGE,\n        currentPage: 1,\n        totalItems: 0\n      }\n    constructor(private http: HttpClientService, private router: Router, private toastr: ToastrCustomService, private modalService: NgbModal) {\n        this.getScreenSize();\n    }\n    @HostListener('window:resize', ['$event'])\n    getScreenSize(event?) {\n          this.screenHeight = window.innerHeight;\n    }\n    ngOnInit() {\n        /*Autheticate user with the token */\n    if (!this.http.isAuthenticate()){\n        this.router.navigate(['/login']);\n      }\n        this.init();\n        this.initialGetAll(); \n        //this.spinner(true);\n    }\n    private init() {\n        // this.http.get(this.urlConstants.SMSTemplateGetAll).subscribe(resp => {\n        //     this.messageTemplateList = resp as any;\n        // });\n    }\n    public initialGetAll(){\n        let pageNumber = this.paginateConfig.currentPage-1\n        let temp=this.http.get(this.urlConstants.SMSTemplateGetAll+ pageNumber + \"&pageSize=50&sortBy=id\");\n        temp.subscribe(resp => {\n          this.messageTemplateList = resp as any;\n          //this.pageChange(this.page);\n          this.messageTemplateList.totalItems = this.messageTemplateList.noOfRecords\n        });\n      }\n    public dblSetModel(data) {\n        this.readOnlyForm = 'U';\n        this.enableButtonType = 'U';\n        this.showAction = true;\n        this.action = null;\n    }\n    private enableFormEditable(): void {\n        this.readOnlyForm = 'U';\n        this.enableButtonType = 'U';\n    }\n    public setModel(id) {\n        this.getSMSById(id);\n        this.readOnlyForm = 'R';\n        this.enableButtonType = 'E';\n        this.showAction = true;\n        this.action = null;\n    }\n    private getSMSById(id: number) {\n        const temp = this.http.get(this.urlConstants.SMSTemplateGetById + id);\n        temp.subscribe(resp => {\n            this.model = this.mapToUpdateModel(resp);\n        });\n    }\n    private mapToUpdateModel(response): MessageTemplateModel {\n        const temp = response;\n        this.model = temp;\n        return this.model;\n    }\n    public actions(value, trashContent, form) {\n        console.log(value);\n        switch (value) {\n          case 'Delete': {\n            this.open(this.model.id, trashContent);\n            break;\n          }\n          case 'Edit': {\n            this.enableFormEditable();\n            break;\n          }\n          case 'Close': {\n            this.cancelForm(form);\n          }\n        }\n      }\n    private formReset() {\n        this.model = <MessageTemplateModel>{};\n    }\n    public create(messageTemplateForm: NgForm): void {\n        this.isCreate=true\n        const temp = this.http.post(this.model, this.urlConstants.SMSTemplateCreate);\n        temp.subscribe(resp => {\n            this.toastr.success(this.properties.CREATE, 'Contact');\n            this.init();\n            this.formReset();\n            messageTemplateForm.resetForm();\n            this.paginateConfig.currentPage=1;\n            this.initialGetAll();\n            this.isCreate= false;\n        }, err => {\n            this.toastr.error(err.statusText, 'Contact');\n        });\n    }\n    public update(messageTemplateForm: NgForm) {\n        const temp = this.http.update(this.model, this.urlConstants.SMSTemplateUpdate);\n        temp.subscribe(resp => {\n            this.formReset();\n            this.toastr.success(this.properties.UPDATE, 'Message Template ');\n            this.init();\n            messageTemplateForm.resetForm();\n            this.initialGetAll();\n            this.readOnlyForm = '';\n            this.enableButtonType = '';\n            this.showAction = false;\n            this.isCreate= false;\n        }, err => {\n            this.toastr.error(err.statusText, 'Message Template ');\n        });\n    }\n    public cancelForm(messageTemplateForm: NgForm) {\n        this.formReset();\n        messageTemplateForm.resetForm();\n        this.readOnlyForm = '';\n        this.enableButtonType = '';\n        this.showAction = false;\n    }\n    public trash(): void {\n        const temp = this.http.delete(this.urlConstants.SMSTemplateDelete + this.selectedRecrdToDel);\n        temp.subscribe(resp => {\n            this.toastr.success(this.properties.DELETE, 'Client');\n            this.init();\n            this.close();\n            this.initialGetAll();\n            this.formReset();\n            this.showAction = false;\n        }, err => {\n            if (err.status === 200) {\n                this.init();\n                this.close();\n                this.formReset();\n                return this.toastr.success(this.properties.DELETE, 'Client');\n            }\n            this.toastr.error(err.error.message, 'Client');\n        });\n    }\n    /**\n     * @param\n     * 1) content consists the modal instance\n     * 2) Selected contains the code of selected row\n     */\n    public open(event: any  ,content:any) {\n        if (event) {\n            this.selectedRecrdToDel = event;\n        }\n        this.modalRef = this.modalService.open(content);\n        this.modalRef.result.then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n    public close() {\n        this.modalRef.close();\n    }\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return `with: ${reason}`;\n        }\n    }\n    pageChanged(event){\n        this.paginateConfig.currentPage = event\n        this.initialGetAll();\n      }\n}\n","export interface MessageTemplateModel {\r\n  id: string;\r\n  type: string;\r\n  description: string;\r\n}\r\nexport class ActionsList {\r\n  actions = [\r\n    { key: \"Edit\", value: \"Edit\" },\r\n    { key: \"Delete\", value: \"Delete\" },\r\n    { key: \"Close\", value: \"Close\" }\r\n  ];\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport {\n  PageHeaderModule,\n  SharedPipesModule,\n  ActionListModule\n} from \"../../shared\";\nimport { MessageTemplateRoutingModule } from \"./message-template-routing.module\";\nimport { MessageTemplateComponent } from \"./message-template.component\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\n\n@NgModule({\n  imports: [\n    NgbModule,\n    NgxPaginationModule,\n    CommonModule,\n    MessageTemplateRoutingModule,\n    FormsModule,\n    PageHeaderModule,\n    SharedPipesModule,\n    ActionListModule\n  ],\n  declarations: [MessageTemplateComponent]\n})\nexport class MessageTemplateModule {}\n"],"sourceRoot":""}