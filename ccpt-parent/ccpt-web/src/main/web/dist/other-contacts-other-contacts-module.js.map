{"version":3,"sources":["webpack:///./src/app/layout/other-contacts/other-contacts-routing.module.ts","webpack:///./src/app/layout/other-contacts/other-contacts.component.html","webpack:///./src/app/layout/other-contacts/other-contacts.component.scss","webpack:///./src/app/layout/other-contacts/other-contacts.component.ts","webpack:///./src/app/layout/other-contacts/other-contacts.model.ts","webpack:///./src/app/layout/other-contacts/other-contacts.module.ts"],"names":[],"mappings":"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","file":"other-contacts-other-contacts-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { OtherContactsComponent } from \"./other-contacts.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: OtherContactsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OtherContactsRoutingModule {}\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [icon1]=\\\"'fa-address-book'\\\" [heading1]=\\\"'Other Contacts'\\\"> </app-page-header>\\n\\n  <div class=\\\"spinner padding-top justify-content-md-center \\\" *ngIf=\\\"!listReturned\\\">\\n    <div class=\\\"bounce1\\\"></div>\\n    <div class=\\\"bounce2\\\"></div>\\n    <div class=\\\"bounce3\\\"></div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"listReturned\\\">\\n    <div class=\\\"col-md-7\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"search...\\\"\\n            [(ngModel)]=\\\"currSearchTxt\\\" /></div>\\n      </div>\\n      <div class=\\\"table-responsive mt-2 tableFixHead\\\" [style.height.px]=\\\"screenHeight\\\">\\n        <table class=\\\"table table-hover table-striped\\\">\\n          <thead>\\n            <tr>\\n              <th>\\n                Name\\n              </th>\\n              <th>\\n                Email\\n              </th>\\n              <th>\\n                Phone\\n              </th>\\n              <!-- <th>\\n                      <span class=\\\"pull-right\\\">Action</span>\\n                  </th> -->\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let ocl of OCList.list | paginate: paginateConfig; let i = index\\\"\\n              [ngClass]=\\\"!ocl.isProfileCompleted ? 'bl-red' : 'bl-trans'\\\" (click)=\\\"setModel(ocl.id)\\\">\\n              <td>\\n                {{ ocl.name }}\\n              </td>\\n              <td>\\n                {{ ocl.email }}\\n              </td>\\n              <td>\\n                {{ ocl.phone }}\\n              </td>\\n              <!-- <td width=\\\"100\\\">\\n                <app-action [trashContent]=\\\"trashContent\\\" [id]=\\\"ocl.id\\\" [isTrash]=\\\"trash\\\" (trash)=\\\"open($event)\\\">\\n                </app-action>\\n              </td> -->\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div class=\\\"col-12 justify-content-center mb-5\\\" *ngIf=\\\"OCList.noOfRecords > properties.ITEMSPERPAGE\\\">\\n        <pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls>\\n      </div>\\n    </div>\\n    <div class=\\\" col-md-5\\\">\\n      <form name=\\\"form\\\" id=\\\"otherContactForm\\\" (ngSubmit)=\\\"f.form.valid && create(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12 form-group\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">\\n              Add\\n            </button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\"\\n              (click)=\\\"update(f)\\\">Update</button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\"\\n                  (click)=\\\"enableFormEditable()\\\">\\n                  Edit\\n                </button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n\\n            <span class=\\\"pull-right\\\" *ngIf=\\\"showAction && readOnlyForm == 'U'\\\">\\n              <div class=\\\"dropdown theme-dropdown clearfix\\\" placement=\\\"bottom-right\\\" ngbDropdown>\\n                <!-- <button class=\\\"btn btn-secondary\\\" >\\n                              Dropdown\\n                          </button> -->\\n                <i class=\\\"fa fa-bars\\\" ngbDropdownToggle></i>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" ngbDropdownMenu>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"enableFormEditable()\\\">Edit</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"open(model.id, trashContent)\\\">Delete</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"cancelForm(f)\\\">Close</a>\\n                </div>\\n              </div>\\n            </span>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"readOnlyForm == 'U'; else notRead\\\">\\n          <table class=\\\"table table-borderless\\\">\\n            <tbody>\\n              <tr>\\n                <th>Name</th>\\n                <td>{{ model.name }}</td>\\n              </tr>\\n              <tr>\\n                <th>Phone</th>\\n                <td>{{ model.phone }}</td>\\n              </tr>\\n              <tr>\\n                <th>Email</th>\\n                <td>{{ model.email }}</td>\\n              </tr>\\n              <tr>\\n                <th>Notes</th>\\n                <td>{{ model.description }}</td>\\n              </tr>\\n              <tr *ngFor=\\\"let ap of model.properties; let i = index\\\">\\n                <th>{{ap.name}}</th>\\n                <td>{{ap.value}}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <ng-template #notRead>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Name<span class=\\\"required\\\">*</span></label>\\n                <input class=\\\"form-control capi form-control-sm\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && name.invalid }\\\"\\n                  #name=\\\"ngModel\\\" #ocName (keyup)=\\\"transformTitleCase(ocName)\\\" required />\\n                <div class=\\\"invalid-feedback\\\">\\n                  name is mandatory\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Phone</label>\\n                <input class=\\\"form-control\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.phone\\\" name=\\\"phone\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': f.submitted && name.invalid }\\\" #phone=\\\"ngModel\\\" />\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group \\\">\\n                <label>E-Mail</label>\\n                <input class=\\\"form-control\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\"\\n                  #email=\\\"ngModel\\\" />\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"model.properties.length > 0\\\">\\n              <div class=\\\"col-md-12 ml-3\\\" *ngIf=\\\"model.properties.length > 0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Additional Properties</label>\\n                  <div class=\\\"row\\\" *ngFor=\\\"let ap of model.properties; let i = index\\\">\\n                    <div class=\\\"col-md-5\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"ap.name\\\" class=\\\"form-control\\\" name=\\\"addPropName{{ i }}\\\"\\n                        [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                    </div>\\n                    <div class=\\\"col-md-5\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"ap.value\\\" class=\\\"form-control\\\" name=\\\"addPropValue{{ i }}\\\"\\n                        [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                      <i class=\\\"fa fa-minus\\\" aria-hidden=\\\"true\\\" id=\\\"decrease\\\" *ngIf=\\\"enableButtonType != 'E'\\\"\\n                        (click)=\\\"propertiesListIncrement($event.target, i)\\\"></i>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Notes</label>\\n                <textarea class=\\\"form-control\\\" cols=\\\"5\\\" rows=\\\"5\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.description\\\" name=\\\"notes\\\" #notes=\\\"ngModel\\\"></textarea>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Additional Properties</label>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-5\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"apName\\\" class=\\\"form-control\\\" name=\\\"apName\\\"\\n                      [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                  </div>\\n                  <div class=\\\"col-md-5\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"apValue\\\" class=\\\"form-control\\\" name=\\\"apValue\\\"\\n                      [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\" id=\\\"increase\\\" *ngIf=\\\"enableButtonType != 'E'\\\"\\n                      (click)=\\\"propertiesListIncrement($event.target, 0)\\\"></i>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </ng-template>\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">\\n              Add\\n            </button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\"\\n              (click)=\\\"update(f)\\\">Update</button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\"\\n              (click)=\\\"enableFormEditable()\\\">\\n              Edit\\n            </button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #trashContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Contact</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>Are you sure you want to delete ? &hellip;</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"trash()\\\">Ok</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n\"","module.exports = \".required {\\n  color: red; }\\n\\n.my-custom-scrollbar {\\n  position: relative;\\n  height: 31.5em;\\n  overflow: auto; }\\n\\n.table-wrapper-scroll-y {\\n  display: block; }\\n\\n.padding-top {\\n  padding-top: 60px; }\\n\\n.dropdown-toggle::after {\\n  display: none; }\\n\\n.drop-list:hover {\\n  cursor: pointer; }\\n\\n.table-striped tbody tr:nth-of-type(odd) {\\n  background-color: #c1c1c1; }\\n\\n.shrinkBody {\\n  flex-shrink: 3; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L290aGVyLWNvbnRhY3RzL0Q6XFxDQ1BUIE1BSU5cXHRydW5rXFxjY3B0LXBhcmVudFxcY2NwdC13ZWJcXHNyY1xcbWFpblxcd2ViL3NyY1xcYXBwXFxsYXlvdXRcXG90aGVyLWNvbnRhY3RzXFxvdGhlci1jb250YWN0cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVUsRUFDWDs7QUFDRDtFQUNFLG1CQUFrQjtFQUNsQixlQUFjO0VBQ2QsZUFBYyxFQUNmOztBQUNEO0VBQ0UsZUFBYyxFQUNmOztBQUNEO0VBQ0Usa0JBQWlCLEVBQ2xCOztBQUNEO0VBQ0UsY0FBYSxFQUNkOztBQUNEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBQ0Q7RUFFSSwwQkFBeUIsRUFDMUI7O0FBR0g7RUFDRSxlQUFjLEVBQ2YiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvb3RoZXItY29udGFjdHMvb3RoZXItY29udGFjdHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVxdWlyZWQge1xyXG4gIGNvbG9yOiByZWQ7XHJcbn1cclxuLm15LWN1c3RvbS1zY3JvbGxiYXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBoZWlnaHQ6IDMxLjVlbTtcclxuICBvdmVyZmxvdzogYXV0bztcclxufVxyXG4udGFibGUtd3JhcHBlci1zY3JvbGwteSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuLnBhZGRpbmctdG9wIHtcclxuICBwYWRkaW5nLXRvcDogNjBweDtcclxufVxyXG4uZHJvcGRvd24tdG9nZ2xlOjphZnRlciB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG4uZHJvcC1saXN0OmhvdmVyIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuLnRhYmxlLXN0cmlwZWQge1xyXG4gIHRib2R5IHRyOm50aC1vZi10eXBlKG9kZCkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2MxYzFjMTtcclxuICB9XHJcbn1cclxuXHJcbi5zaHJpbmtCb2R5IHtcclxuICBmbGV4LXNocmluazogMztcclxufVxyXG4iXX0= */\"","import { Component, OnInit, HostListener } from \"@angular/core\";\nimport { routerTransition } from \"../../router.animations\";\nimport { OtherContactsModel } from \"./other-contacts.model\";\nimport { HttpClientService } from \"src/app/shared/services/http.service\";\nimport { URLConstants } from \"../components/constants/url-constants\";\nimport { ToastrCustomService } from \"src/app/shared/services/toastr.service\";\nimport {\n  NgbModal,\n  ModalDismissReasons,\n  NgbModalRef\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgForm } from \"@angular/forms\";\nimport { AdditionalPropertiesModel } from \"src/app/additional-properties.model\";\nimport { ActionsList } from \"./other-contacts.model\";\nimport { Router } from \"@angular/router\";\nimport { Properties } from \"../components/constants/properties\";\n\n@Component({\n  selector: \"app-other-contacts\",\n  templateUrl: \"./other-contacts.component.html\",\n  styleUrls: [\"./other-contacts.component.scss\"],\n  animations: [routerTransition()]\n})\nexport class OtherContactsComponent implements OnInit {\n  public model: OtherContactsModel = <OtherContactsModel>{};\n  public OCList: any = [];\n  private urlConstants = new URLConstants();\n  public properties = new Properties();\n\n  public showAction: boolean = false;\n  public actionsList = new ActionsList();\n  public action: string = null;\n\n  public readOnlyForm = \"\";\n  public enableButtonType = \"\";\n  public currSearchTxt = \"\";\n  public listReturned: boolean;\n  public isCreate: boolean = false;\n  public screenHeight: any;\n  private selectedRecrdToDel = 0;\n  public closeResult = \"\";\n  public apName = \"\";\n  public apValue = \"\";\n  private modalRef: NgbModalRef;\n  public paginateConfig: any = {\n    itemsPerPage: this.properties.ITEMSPERPAGE,\n    currentPage: 1,\n    totalItems: 0\n  };\n  constructor(\n    private http: HttpClientService,\n    private router: Router,\n    private toastr: ToastrCustomService,\n    private modalService: NgbModal\n  ) {\n    this.getScreenSize();\n  }\n  @HostListener(\"window:resize\", [\"$event\"]) Router;\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n  }\n  ngOnInit() {\n    /*Autheticate user with the token */\n    if (!this.http.isAuthenticate()) {\n      this.router.navigate([\"/login\"]);\n    }\n    this.init();\n    this.initialGetAll();\n    this.spinner(true);\n  }\n  public initialGetAll() {\n    let pageNumber = this.paginateConfig.currentPage - 1;\n    let temp = this.http.get(\n      this.urlConstants.OCGetAll + pageNumber + \"&pageSize=50&sortBy=id\"\n    );\n    temp.subscribe(resp => {\n      this.OCList = resp as any;\n      this.OCList.list.forEach(cl => {\n        if (\n          this.validate(cl.name) ||\n          this.validate(cl.email) ||\n          this.validate(cl.phone)\n        ) {\n          cl[\"isProfileCompleted\"] = false;\n        } else {\n          cl[\"isProfileCompleted\"] = true;\n        }\n      });\n      this.paginateConfig.totalItems = this.OCList.noOfRecords;\n    });\n  }\n  private init() {\n    // this.spinner(false);\n    // this.http.get(this.urlConstants.OCGetAll).subscribe(resp => {\n    //     this.OCList = resp as any;\n    //     this.OCList.forEach(cl => {\n    //         if (this.validate(cl.name) || this.validate(cl.email) || this.validate(cl.phone)) {\n    //             cl['isProfileCompleted'] = false;\n    //         } else {\n    //             cl['isProfileCompleted'] = true;\n    //         }\n    //     });\n    //     this.spinner(true);\n    // });\n    this.model.properties = [];\n    this.model[\"phone\"] = \"+91\";\n  }\n  private validate(value: any): boolean {\n    const bool = value == null ? true : false;\n    return bool;\n  }\n  public enableFormEditable(): void {\n    this.readOnlyForm = \"\";\n    //this.config.editable = true;\n    this.enableButtonType = \"U\";\n  }\n  public setModel(id) {\n    this.spinner(false);\n    this.getById(id);\n    this.readOnlyForm = \"U\";\n    // this.config.editable = false;\n    this.enableButtonType = \"E\";\n    this.showAction = true;\n    this.action = null;\n  }\n  private getById(id) {\n    const temp = this.http.get(this.urlConstants.OCGetById + id);\n    temp.subscribe(resp => {\n      this.model = this.mapToUpdateModel(resp);\n      this.spinner(true);\n      if (this.model.properties == null) {\n        this.model.properties = [];\n      }\n    });\n  }\n  private mapToUpdateModel(response) {\n    const temp = response;\n    this.model = temp;\n    return this.model;\n  }\n  public propertiesListIncrement(event, i: number) {\n    switch (event.id) {\n      case \"decrease\": {\n        this.model.properties.splice(i, 1);\n        break;\n      }\n      case \"increase\": {\n        if (this.model.properties == null) {\n          this.model.properties = [];\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else if (this.model.properties.length == 0) {\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else {\n          let propertyExist: boolean;\n          for (let i = 0; i < this.model.properties.length; i++) {\n            if (\n              this.model.properties[i].name == this.apName &&\n              this.model.properties[i].value == this.apValue\n            ) {\n              propertyExist = true;\n            } else {\n              propertyExist = false;\n            }\n          }\n          if (propertyExist) {\n            this.toastr.error(\n              this.properties.PROPERTY_EXIST,\n              this.properties.PROPERTIES\n            );\n          } else {\n            this.model.properties.push(<AdditionalPropertiesModel>{\n              name: this.apName,\n              value: this.apValue\n            });\n            this.apName = \"\";\n            this.apValue = \"\";\n          }\n        }\n        break;\n      }\n    }\n  }\n  private formReset() {\n    this.model = <OtherContactsModel>{};\n    this.model.properties = [];\n    this.model[\"phone\"] = \"+91\";\n  }\n  public create(otherContactForm: NgForm): void {\n    this.spinner(false);\n    this.isCreate = true;\n    const temp = this.http.post(this.model, this.urlConstants.OCCreate);\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.CREATE, this.properties.CONTACT);\n        this.init();\n        this.formReset();\n        otherContactForm.resetForm();\n        this.paginateConfig.currentPage = 1;\n        this.initialGetAll();\n        this.isCreate = false;\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CONTACT);\n        this.isCreate = false;\n        this.spinner(true);\n      }\n    );\n  }\n  public update(otherContactForm: NgForm) {\n    this.spinner(false);\n    const temp = this.http.update(this.model, this.urlConstants.OCUpdate);\n    temp.subscribe(\n      resp => {\n        this.formReset();\n        this.toastr.success(this.properties.UPDATE, this.properties.CONTACT);\n        this.init();\n        otherContactForm.resetForm();\n        this.initialGetAll();\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CONTACT);\n        this.spinner(true);\n      }\n    );\n  }\n  public cancelForm(consultantCallHistory: NgForm) {\n    consultantCallHistory.resetForm();\n    this.formReset();\n    this.init();\n    this.readOnlyForm = \"\";\n    this.enableButtonType = \"\";\n    this.showAction = false;\n  }\n  public trash(): void {\n    this.spinner(false);\n    const temp = this.http.delete(\n      this.urlConstants.OCDelete + this.selectedRecrdToDel\n    );\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.DELETE, this.properties.CONTACT);\n        this.init();\n        this.close();\n        this.formReset();\n        this.initialGetAll();\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CONTACT);\n        this.spinner(true);\n      }\n    );\n  }\n  transformTitleCase(ip: HTMLInputElement) {\n    let temp =\n      ip.value.length === 0\n        ? \"\"\n        : ip.value.replace(\n            /\\w\\S*/g,\n            txt => txt[0].toUpperCase() + txt.substr(1).toLowerCase()\n          );\n    ip.value = temp;\n  }\n  /**\n   * @param\n   * 1) content consists the modal instance\n   * 2) Selected contains the code of selected row\n   */\n  open(event: any, content: any) {\n    if (event) {\n      this.selectedRecrdToDel = event;\n    }\n    this.modalRef = this.modalService.open(content);\n    this.modalRef.result.then(\n      result => {\n        this.closeResult = `Closed with: ${result}`;\n      },\n      reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      }\n    );\n  }\n  close() {\n    this.modalRef.close();\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n  private spinner(isSpinner: boolean) {\n    this.listReturned = isSpinner;\n  }\n  pageChanged(event) {\n    this.paginateConfig.currentPage = event;\n    this.initialGetAll();\n  }\n}\n","import { AdditionalPropertiesModel } from \"src/app/additional-properties.model\";\r\n\r\nexport interface OtherContactsModel {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  description: string;\r\n  properties: Array<AdditionalPropertiesModel>;\r\n}\r\nexport class ActionsList {\r\n  actions = [\r\n    { key: \"Edit\", value: \"Edit\" },\r\n    { key: \"Delete\", value: \"Delete\" },\r\n    { key: \"Close\", value: \"Close\" }\r\n  ];\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport {\n  PageHeaderModule,\n  SharedPipesModule,\n  ActionListModule\n} from \"../../shared\";\nimport { OtherContactsRoutingModule } from \"./other-contacts-routing.module\";\nimport { AngularEditorModule } from \"@kolkov/angular-editor\";\nimport { OtherContactsComponent } from \"./other-contacts.component\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxPaginationModule,\n    OtherContactsRoutingModule,\n    FormsModule,\n    NgbModule,\n    PageHeaderModule,\n    SharedPipesModule,\n    AngularEditorModule,\n    ActionListModule\n  ],\n  declarations: [OtherContactsComponent]\n})\nexport class OtherContactsModule {}\n"],"sourceRoot":""}