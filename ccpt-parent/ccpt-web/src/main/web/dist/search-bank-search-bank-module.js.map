{"version":3,"sources":["webpack:///./src/app/layout/search-bank/search-bank-routing.module.ts","webpack:///./src/app/layout/search-bank/search-bank.component.html","webpack:///./src/app/layout/search-bank/search-bank.component.scss","webpack:///./src/app/layout/search-bank/search-bank.component.ts","webpack:///./src/app/layout/search-bank/search-bank.module.ts"],"names":[],"mappings":"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","file":"search-bank-search-bank-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { SearchBankComponent } from \"./search-bank.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SearchBankComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SearchBankRoutingModule {}\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [icon1]=\\\"'fa-book'\\\" [heading1]=\\\"'Guides'\\\" [icon2]=\\\"'fa-search'\\\" [heading2]=\\\"'Search'\\\">\\n  </app-page-header>\\n\\n  <div class=\\\"spinner padding-top justify-content-md-center\\\" *ngIf=\\\"!listReturned\\\">\\n    <div class=\\\"bounce1\\\"></div>\\n    <div class=\\\"bounce2\\\"></div>\\n    <div class=\\\"bounce3\\\"></div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"listReturned\\\">\\n    <div class=\\\"col-md-7\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"search...\\\" (keyup)=\\\"search()\\\"\\n            [(ngModel)]=\\\"currSearchTxt\\\" /></div>\\n      </div>\\n      <div class=\\\"table-responsive mt-2 tableFixHead\\\" [style.height.px]=\\\"screenHeight\\\">\\n        <table class=\\\"table table-hover table-striped\\\">\\n          <thead>\\n            <tr>\\n              <th>\\n                Profile\\n              </th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let sbl of sbList.list | paginate: paginateConfig; let i = index\\\" (click)=\\\"setModel(sbl.id)\\\">\\n              <td>\\n                {{ sbl.profile }}\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div class=\\\"col-12 justify-content-center mb-5\\\" *ngIf=\\\"sbList.noOfRecords > properties.ITEMSPERPAGE\\\">\\n        <pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls>\\n      </div>\\n    </div>\\n    <div class=\\\" col-md-5\\\">\\n      <form name=\\\"form\\\" id=\\\"searchBankForm\\\" (ngSubmit)=\\\"f.form.valid && create(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12 form-group\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">\\n              Add\\n            </button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\"\\n              (click)=\\\"update(f)\\\">Update</button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\"\\n                  (click)=\\\"enableFormEditable()\\\">\\n                  Edit\\n                </button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n\\n            <span class=\\\"pull-right\\\" *ngIf=\\\"showAction && readOnlyForm == 'U'\\\">\\n              <div class=\\\"dropdown theme-dropdown clearfix\\\" placement=\\\"bottom-right\\\" ngbDropdown>\\n                <!-- <button class=\\\"btn btn-secondary\\\" >\\n                              Dropdown\\n                          </button> -->\\n                <i class=\\\"fa fa-bars\\\" ngbDropdownToggle></i>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" ngbDropdownMenu>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"enableFormEditable()\\\">Edit</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"cancelForm(f)\\\">New</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"open(model.id, trashContent)\\\">Delete</a>\\n                </div>\\n              </div>\\n            </span>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"readOnlyForm == 'U'; else notRead\\\">\\n          <table class=\\\"table table-borderless table-striped\\\">\\n            <tbody>\\n              <tr *ngIf=\\\"model.profile\\\">\\n                <th>Profile</th>\\n                <td>{{ model.profile }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.logicOr\\\">\\n                <th>Any of Keywords</th>\\n                <td>{{ model.logicOr }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.logicAnd\\\">\\n                <th>All of Keywords</th>\\n                <td>{{ model.logicAnd }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.refine1\\\">\\n                <th>Refine 1</th>\\n                <td>{{ model.refine1 }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.refine2\\\">\\n                <th>Refine 2</th>\\n                <td>{{ model.refine2 }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.functionalArea\\\">\\n                <th>Functional Area</th>\\n                <td>{{ model.functionalArea }}</td>\\n              </tr>\\n              <!-- <tr *ngFor=\\\"let ap of model.properties; let i = index\\\">\\n                  <th>{{ap.name}}</th>\\n                  <td>{{ap.value}}</td>\\n                </tr> -->\\n            </tbody>\\n          </table>\\n        </div>\\n        <ng-template #notRead>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Profile<span class=\\\"required\\\">*</span></label>\\n                <input class=\\\"form-control capi\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.profile\\\"\\n                  name=\\\"profile\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && profile.invalid }\\\" #profile=\\\"ngModel\\\"\\n                  required />\\n                <div class=\\\"invalid-feedback\\\">\\n                  profile is mandatory\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Any of Keywords (Logic Or)</label>\\n                <textarea class=\\\"form-control\\\" cols=\\\"5\\\" rows=\\\"3\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.logicOr\\\" name=\\\"logicOr\\\" #logicOr=\\\"ngModel\\\"></textarea>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>All of Keywords (Logic And)</label>\\n                <textarea class=\\\"form-control\\\" cols=\\\"5\\\" rows=\\\"3\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.logicAnd\\\" name=\\\"logicAnd\\\" #logicAnd=\\\"ngModel\\\"></textarea>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>SWS-Refine1</label>\\n                <textarea class=\\\"form-control\\\" cols=\\\"5\\\" rows=\\\"3\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.refine1\\\" name=\\\"refine1\\\" #refine1=\\\"ngModel\\\"></textarea>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>SWS-Refine2</label>\\n                <textarea class=\\\"form-control\\\" cols=\\\"5\\\" rows=\\\"3\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.refine2\\\" name=\\\"refine2\\\" #refine2=\\\"ngModel\\\"></textarea>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Functional Area</label>\\n                <textarea class=\\\"form-control\\\" cols=\\\"5\\\" rows=\\\"3\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.functionalArea\\\" name=\\\"functionalArea\\\" #functionalArea=\\\"ngModel\\\"></textarea>\\n              </div>\\n            </div>\\n          </div>\\n          <!-- <div class=\\\"row\\\" *ngIf=\\\"model.properties.length > 0\\\">\\n              <div class=\\\"col-md-12 ml-3\\\" *ngIf=\\\"model.properties.length > 0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Additional Properties</label>\\n                  <div class=\\\"row\\\" *ngFor=\\\"let ap of model.properties; let i = index\\\">\\n                    <div class=\\\"col-md-5\\\">\\n                      <input\\n                        type=\\\"text\\\"\\n                        [(ngModel)]=\\\"ap.name\\\"\\n                        class=\\\"form-control\\\"\\n                        name=\\\"addPropName{{ i }}\\\"\\n                        [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"col-md-5\\\">\\n                      <input\\n                        type=\\\"text\\\"\\n                        [(ngModel)]=\\\"ap.value\\\"\\n                        class=\\\"form-control\\\"\\n                        name=\\\"addPropValue{{ i }}\\\"\\n                        [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                      <i\\n                        class=\\\"fa fa-minus\\\"\\n                        aria-hidden=\\\"true\\\"\\n                        id=\\\"decrease\\\"\\n                        *ngIf=\\\"enableButtonType != 'E'\\\"\\n                        (click)=\\\"propertiesListIncrement($event.target, i)\\\"\\n                      ></i>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div> -->\\n          <!-- <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Additional Properties</label>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-5\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"apName\\\" class=\\\"form-control\\\" name=\\\"apName\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                  </div>\\n                  <div class=\\\"col-md-5\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"apValue\\\" class=\\\"form-control\\\" name=\\\"apValue\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <i\\n                      class=\\\"fa fa-plus\\\"\\n                      aria-hidden=\\\"true\\\"\\n                      id=\\\"increase\\\"\\n                      *ngIf=\\\"enableButtonType != 'E'\\\"\\n                      (click)=\\\"propertiesListIncrement($event.target, 0)\\\"\\n                    ></i>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div> -->\\n        </ng-template>\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">\\n              Add\\n            </button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\"\\n              (click)=\\\"update(f)\\\">Update</button>\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #trashContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Contact</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>Are you sure you want to delete ? &hellip;</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"trash()\\\">Ok</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n\"","module.exports = \".required {\\n  color: red; }\\n\\n.my-custom-scrollbar {\\n  position: relative;\\n  height: 31.5em;\\n  overflow: auto; }\\n\\n.table-wrapper-scroll-y {\\n  display: block; }\\n\\n.bl-trans {\\n  border-left: 6px solid transparent; }\\n\\n.padding-top {\\n  padding-top: 60px; }\\n\\n.dropdown-toggle::after {\\n  display: none; }\\n\\n.drop-list:hover {\\n  cursor: pointer; }\\n\\n.table-striped tbody tr:nth-of-type(odd) {\\n  background-color: #c1c1c1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3NlYXJjaC1iYW5rL0Q6XFxjY3B0dG9vbC5naXRcXHRydW5rXFxjY3B0LXBhcmVudFxcY2NwdC13ZWJcXHNyY1xcbWFpblxcd2ViL3NyY1xcYXBwXFxsYXlvdXRcXHNlYXJjaC1iYW5rXFxzZWFyY2gtYmFuay5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVUsRUFDWDs7QUFDRDtFQUNFLG1CQUFrQjtFQUNsQixlQUFjO0VBQ2QsZUFBYyxFQUNmOztBQUNEO0VBQ0UsZUFBYyxFQUNmOztBQUNEO0VBQ0UsbUNBQWtDLEVBQ25DOztBQUNEO0VBQ0Usa0JBQWlCLEVBQ2xCOztBQUNEO0VBQ0UsY0FBYSxFQUNkOztBQUNEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBQ0Q7RUFFSSwwQkFBeUIsRUFDMUIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvc2VhcmNoLWJhbmsvc2VhcmNoLWJhbmsuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVxdWlyZWQge1xyXG4gIGNvbG9yOiByZWQ7XHJcbn1cclxuLm15LWN1c3RvbS1zY3JvbGxiYXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBoZWlnaHQ6IDMxLjVlbTtcclxuICBvdmVyZmxvdzogYXV0bztcclxufVxyXG4udGFibGUtd3JhcHBlci1zY3JvbGwteSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuLmJsLXRyYW5zIHtcclxuICBib3JkZXItbGVmdDogNnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG59XHJcbi5wYWRkaW5nLXRvcCB7XHJcbiAgcGFkZGluZy10b3A6IDYwcHg7XHJcbn1cclxuLmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXIge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLmRyb3AtbGlzdDpob3ZlciB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi50YWJsZS1zdHJpcGVkIHtcclxuICB0Ym9keSB0cjpudGgtb2YtdHlwZShvZGQpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjMWMxYzE7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, HostListener } from \"@angular/core\";\nimport { routerTransition } from \"../../router.animations\";\nimport { SearchBankModel } from \"./search-bank.model\";\nimport { HttpClientService } from \"src/app/shared/services/http.service\";\nimport { URLConstants } from \"../components/constants/url-constants\";\nimport { ToastrCustomService } from \"src/app/shared/services/toastr.service\";\nimport {\n  NgbModal,\n  ModalDismissReasons,\n  NgbModalRef\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgForm } from \"@angular/forms\";\nimport { AdditionalPropertiesModel } from \"src/app/additional-properties.model\";\nimport { Router } from \"@angular/router\";\nimport { Properties } from \"../components/constants/properties\";\n\n@Component({\n  selector: \"app-search-bank\",\n  templateUrl: \"./search-bank.component.html\",\n  styleUrls: [\"./search-bank.component.scss\"],\n  animations: [routerTransition()]\n})\nexport class SearchBankComponent implements OnInit {\n  public model: SearchBankModel = <SearchBankModel>{};\n  public sbList: any = [];\n  private urlConstants = new URLConstants();\n  public properties = new Properties();\n\n  public showAction: boolean = false;\n  public action: string = null;\n\n  public readOnlyForm = \"\";\n  public enableButtonType = \"\";\n  public currSearchTxt = \"\";\n  public listReturned: boolean;\n  public isCreate: boolean = false;\n  public screenHeight: any;\n  private selectedRecrdToDel = 0;\n  public closeResult = \"\";\n  public apName = \"\";\n  public apValue = \"\";\n  private modalRef: NgbModalRef;\n  public paginateConfig: any = {\n    itemsPerPage: 0,\n    currentPage: 0,\n    totalItems: 0\n  };\n  constructor(\n    private http: HttpClientService,\n    private router: Router,\n    private toastr: ToastrCustomService,\n    private modalService: NgbModal\n  ) {\n    this.getScreenSize();\n  }\n  @HostListener(\"window:resize\", [\"$event\"])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n  }\n  ngOnInit() {\n    /*Autheticate user with the token */\n    if (!this.http.isAuthenticate()) {\n      this.router.navigate([\"/login\"]);\n    }\n    this.init();\n    this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n    this.initialGetAll();\n    this.spinner(true);\n  }\n  private init() {\n    // this.spinner(false);\n    // this.http.get(this.urlConstants.SearchGetAll).subscribe(resp => {\n    //     this.sbList = resp as any;\n    //     this.spinner(true);\n    // });\n    this.model.properties = [];\n  }\n  private paginateConfigDeclare(itemsPerPage, currentPage, totalItems) {\n    (this.paginateConfig.itemsPerPage = itemsPerPage),\n      (this.paginateConfig.currentPage = currentPage),\n      (this.paginateConfig.totalItems = totalItems);\n  }\n  public initialGetAll() {\n    let pageNumber = this.paginateConfig.currentPage - 1;\n    let temp = this.http.get(\n      this.urlConstants.SearchGetAll + pageNumber + \"&pageSize=50&sortBy=id\"\n    );\n    temp.subscribe(resp => {\n      this.sbList = resp as any;\n      //this.pageChange(this.page);\n      this.paginateConfig.totalItems = this.sbList.noOfRecords;\n    });\n  }\n  public enableFormEditable(): void {\n    this.readOnlyForm = \"\";\n    //this.config.editable = true;\n    this.enableButtonType = \"U\";\n  }\n  public setModel(id) {\n    this.spinner(false);\n    this.getById(id);\n    this.readOnlyForm = \"U\";\n    // this.config.editable = false;\n    this.enableButtonType = \"E\";\n    this.showAction = true;\n    this.action = null;\n  }\n  private getById(id) {\n    const temp = this.http.get(this.urlConstants.SearchGetById + id);\n    temp.subscribe(resp => {\n      this.model = this.mapToUpdateModel(resp);\n      this.spinner(true);\n      if (this.model.properties == null) {\n        this.model.properties = [];\n      }\n    });\n  }\n  private mapToUpdateModel(response) {\n    const temp = response;\n    this.model = temp;\n    return this.model;\n  }\n  public propertiesListIncrement(event, i: number) {\n    switch (event.id) {\n      case \"decrease\": {\n        this.model.properties.splice(i, 1);\n        break;\n      }\n      case \"increase\": {\n        if (this.model.properties == null) {\n          this.model.properties = [];\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else if (this.model.properties.length == 0) {\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else {\n          let propertyExist: boolean;\n          for (let i = 0; i < this.model.properties.length; i++) {\n            if (\n              this.model.properties[i].name == this.apName &&\n              this.model.properties[i].value == this.apValue\n            ) {\n              propertyExist = true;\n            } else {\n              propertyExist = false;\n            }\n          }\n          if (propertyExist) {\n            this.toastr.error(\n              this.properties.PROPERTY_EXIST,\n              this.properties.PROPERTIES\n            );\n          } else {\n            this.model.properties.push(<AdditionalPropertiesModel>{\n              name: this.apName,\n              value: this.apValue\n            });\n            this.apName = \"\";\n            this.apValue = \"\";\n          }\n        }\n        break;\n      }\n    }\n  }\n  private formReset() {\n    this.model = <SearchBankModel>{};\n    this.model.properties = [];\n  }\n  public create(searchBankForm: NgForm): void {\n    this.spinner(false);\n    this.isCreate = true;\n    const temp = this.http.post(this.model, this.urlConstants.SearchCreate);\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.CREATE, this.properties.SEARCH);\n        this.init();\n        this.formReset();\n        searchBankForm.resetForm();\n        this.paginateConfig.currentPage = 1;\n        this.initialGetAll();\n        this.isCreate = false;\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.SEARCH);\n        this.isCreate = false;\n        this.spinner(true);\n      }\n    );\n  }\n  public update(searchBankForm: NgForm) {\n    this.spinner(false);\n    const temp = this.http.update(this.model, this.urlConstants.SearchUpdate);\n    temp.subscribe(\n      resp => {\n        this.formReset();\n        this.toastr.success(this.properties.UPDATE, this.properties.SEARCH);\n        this.init();\n        searchBankForm.resetForm();\n        this.initialGetAll();\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.SEARCH);\n        this.spinner(true);\n      }\n    );\n  }\n  public cancelForm(consultantCallHistory: NgForm) {\n    consultantCallHistory.resetForm();\n    this.formReset();\n    this.init();\n    this.readOnlyForm = \"\";\n    this.enableButtonType = \"\";\n    this.showAction = false;\n  }\n  public trash(): void {\n    this.spinner(false);\n    const temp = this.http.delete(\n      this.urlConstants.SearchDelete + this.selectedRecrdToDel\n    );\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.DELETE, this.properties.SEARCH);\n        this.init();\n        this.close();\n        this.formReset();\n        this.initialGetAll();\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.SEARCH);\n        this.spinner(true);\n      }\n    );\n  }\n  /**\n   * @param\n   * 1) content consists the modal instance\n   * 2) Selected contains the code of selected row\n   */\n  open(event: any, content: any) {\n    if (event) {\n      this.selectedRecrdToDel = event;\n    }\n    this.modalRef = this.modalService.open(content);\n    this.modalRef.result.then(\n      result => {\n        this.closeResult = `Closed with: ${result}`;\n      },\n      reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      }\n    );\n  }\n  close() {\n    this.modalRef.close();\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n  private spinner(isSpinner: boolean) {\n    this.listReturned = isSpinner;\n  }\n  pageChanged(event) {\n    this.paginateConfig.currentPage = event;\n    this.initialGetAll();\n  }\n  public search() {\n    this.paginateConfig.currentPage = 1;\n    if (this.currSearchTxt.length == 0) {\n      this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n      this.initialGetAll();\n    } else if (this.currSearchTxt.length > 3) {\n      let temp = this.http.get(\n        this.urlConstants.SearchAllSearch + this.currSearchTxt\n      );\n      temp.subscribe(resp => {\n        this.sbList.list = resp as any;\n        this.paginateConfigDeclare(\n          this.sbList.list.length,\n          1,\n          this.sbList.list.length\n        );\n      });\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport {\n  PageHeaderModule,\n  SharedPipesModule,\n  ActionListModule\n} from \"../../shared\";\nimport { SearchBankRoutingModule } from \"./search-bank-routing.module\";\nimport { AngularEditorModule } from \"@kolkov/angular-editor\";\nimport { SearchBankComponent } from \"./search-bank.component\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxPaginationModule,\n    SearchBankRoutingModule,\n    FormsModule,\n    NgbModule,\n    PageHeaderModule,\n    SharedPipesModule,\n    AngularEditorModule,\n    ActionListModule\n  ],\n  declarations: [SearchBankComponent]\n})\nexport class SearchBankModule {}\n"],"sourceRoot":""}