{"version":3,"sources":["webpack:///./src/app/layout/consultant/consultant-routing.module.ts","webpack:///./src/app/layout/consultant/consultant.component.html","webpack:///./src/app/layout/consultant/consultant.component.scss","webpack:///./src/app/layout/consultant/consultant.component.ts","webpack:///./src/app/layout/consultant/consultant.model.ts","webpack:///./src/app/layout/consultant/consultant.module.ts"],"names":[],"mappings":"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","file":"consultant-consultant-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ConsultantComponent } from \"./consultant.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ConsultantComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConsultantRoutingModule {}\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [icon1]=\\\"'fa-users'\\\" [heading1]=\\\"'Consultants'\\\"></app-page-header>\\n  <ng-template #spinner>\\n    <div class=\\\"spinner padding-top justify-content-md-center\\\">\\n      <div class=\\\"bounce1\\\"></div>\\n      <div class=\\\"bounce2\\\"></div>\\n      <div class=\\\"bounce3\\\"></div>\\n    </div>\\n  </ng-template>\\n  <div class=\\\"row\\\" *ngIf=\\\"listReturned == true; else spinner\\\">\\n    <div class=\\\"col-md-7\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control \\\" placeholder=\\\"search...\\\" (keyup)=\\\"search()\\\"\\n            [(ngModel)]=\\\"currSearchTxt\\\" />\\n        </div>\\n        <div class=\\\" col-md-4\\\">\\n          <div class=\\\"input-group mb-3\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"idToActivate\\\"\\n              placeholder=\\\"Consultant ID\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <span class=\\\"input-group-text input-group-text-sm \\\" (click)=\\\"activateId()\\\"\\n                id=\\\"basic-addon2\\\">Activate</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button *ngIf=\\\"inCon\\\" class=\\\"btn btn-secondary btn-sm ml-2\\\" (click)=\\\"getIncompleteCon()\\\">Incomplete\\n            Consultants</button>\\n          <button *ngIf=\\\"!inCon\\\" class=\\\"btn btn-secondary btn-sm ml-2\\\" (click)=\\\"getAllCon()\\\">All Consultants</button>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <input type=\\\"checkbox\\\" #showAdvSearch (change)=\\\"advanceSearchModel = {}\\\"> Advance Search\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"showAdvSearch.checked\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <label><small>Keywords</small> </label><br>\\n          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"advanceSearchModel.skills\\\">\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <label><small>Notice Period</small> </label><br>\\n          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"advanceSearchModel.noticePeriod\\\">\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <label><small>Location</small> </label><br>\\n          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"advanceSearchModel.location\\\">\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label><small>Experience From</small></label>\\n            <div class=\\\"form-inline\\\">\\n              <input type=\\\"text\\\" name=\\\"minExpYrs\\\" class=\\\"form-control form-control-sm col-md-2\\\"\\n                [(ngModel)]=\\\"advanceSearchModel.minExpYrs\\\" min=\\\"0\\\" />\\n              &nbsp;&nbsp; <small>years</small>&nbsp;<span> /</span>&nbsp;<input type=\\\"text\\\"\\n                class=\\\"form-control form-control-sm col-md-2\\\" name=\\\"minExpMnths\\\"\\n                [(ngModel)]=\\\"advanceSearchModel.minExpMnths\\\" min=\\\"0\\\" max=\\\"11\\\"\\n                (onkeyup)=\\\"imposeMinMax(this)\\\" />&nbsp;&nbsp;<small>months</small>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <label><small>Experience To</small></label>\\n            <div class=\\\"form-inline\\\">\\n              <input type=\\\"text\\\" name=\\\"maxExpYrs\\\" class=\\\"form-control form-control-sm col-md-2\\\"\\n                [(ngModel)]=\\\"advanceSearchModel.maxExpYrs\\\" min=\\\"0\\\" />\\n              &nbsp;&nbsp; <small>years</small>&nbsp;<span> /</span>&nbsp;<input type=\\\"text\\\"\\n                class=\\\"form-control form-control-sm col-md-2\\\" name=\\\"maxExpMnths\\\"\\n                [(ngModel)]=\\\"advanceSearchModel.maxExpMnths\\\" min=\\\"0\\\" max=\\\"11\\\" />&nbsp;&nbsp;<small>months</small>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-1\\\">\\n          <button class=\\\" btn btn-secondary btn-sm mt-4\\\" (click)=\\\"advanceSearch()\\\">Search</button>\\n        </div>\\n        <div class=\\\"col-md-1\\\">\\n          <button class=\\\" btn btn-secondary btn-sm mt-4\\\" (click)=\\\"cancelAdvSearch(showAdvSearch)\\\">Cancel</button>\\n        </div>\\n      </div>\\n      <div class=\\\"table-responsive mt-2  table-wrapper-scroll-y my-custom-scrollbar \\\" id=\\\"viewTable\\\"\\n        [style.height.px]=\\\"screenHeight\\\">\\n        <table class=\\\"table table-sm table-hover table-striped\\\">\\n          <thead>\\n            <tr>\\n              <th>\\n                Name\\n              </th>\\n              <th>\\n                Phone\\n              </th>\\n              <th>Email</th>\\n              <th>\\n                Experience/Qualification\\n              </th>\\n              <!-- <th width=\\\"140\\\">\\n                    <span class=\\\"pull-right\\\">Action</span>\\n                  </th> -->\\n            </tr>\\n          </thead>\\n          <tbody class=\\\"overflow-ele-scroll\\\">\\n            <tr *ngFor=\\\"let cl of consultantList.list | paginate: paginateConfig; let i = index\\\"\\n              (click)=\\\"setModel(cl.id)\\\"\\n              [ngClass]=\\\"{ 'bl-green': cl.isProfileCompleted == 'profileComplete', 'bl-red': cl.isProfileCompleted == 'profileInComplete' }\\\">\\n              <td class=\\\"table-data-padding \\\">\\n                <dl>\\n                  <dt>{{ cl.fullname }}</dt>\\n                  <dd data-toggle=\\\"tooltip\\\" title=\\\"{{ cl.skills }}\\\">\\n                    {{ cl.skills != null ? (cl.skills.length > 30 ? (cl.skills | slice: 0:30) + ' ... ' : cl.skills) : '' }}\\n                  </dd>\\n                </dl>\\n              </td>\\n              <td>\\n                {{ cl.phone }}\\n              </td>\\n              <td>\\n                {{ cl.email }}\\n              </td>\\n              <td>\\n                {{ cl.experienceYrs != null && cl.experienceYrs != '' ? cl.experienceYrs + 'y' : ''\\n                }}{{ cl.experienceMonths != null && cl.experienceMonths != '' ? '-' + cl.experienceMonths + 'm /' : '' }}\\n                {{ cl.highestEducation }}\\n              </td>\\n              <!--  <input type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" > <span class=\\\"fa fa-upload pull-right\\\"></span> -->\\n              <!-- <td width=\\\"140\\\">\\n                    <app-action [trashContent]=\\\"trashContent\\\" [uploadContent]=\\\"uploadContent\\\"\\n                      [downloadContent]=\\\"downloadContent\\\" [id]=\\\"cl.id\\\" [isTrash]=\\\"trash\\\" [isUpload]=\\\"upload\\\"\\n                      [isDownload]=\\\"download\\\" (upload)=\\\"open($event)\\\" (download)=\\\"open($event)\\\" (trash)=\\\"open($event)\\\">\\n                    </app-action>\\n                  </td> -->\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div class=\\\"col-12 justify-content-center mb-5\\\" *ngIf=\\\"consultantList.noOfRecords > properties.ITEMSPERPAGE\\\">\\n        <pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls>\\n        <!-- <ngb-pagination\\n          [collectionSize]=\\\"consultantListLength\\\"\\n          [(page)]=\\\"page\\\"\\n          [ellipses]=\\\"false\\\"\\n          (pageChange)=\\\"pageChange($event)\\\"\\n          [maxSize]=\\\"pageSize\\\"\\n          [rotate]=\\\"true\\\"\\n          [boundaryLinks]=\\\"true\\\"\\n        >\\n        </ngb-pagination> -->\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-5\\\">\\n      <form name=\\\"form\\\" id=\\\"clientPositionForm\\\" (ngSubmit)=\\\"f.form.valid && create(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12 form-group\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">\\n              Add\\n            </button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\" (click)=\\\"update(f)\\\">\\n              Update\\n            </button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\"\\n              (click)=\\\"enableFormEditable()\\\">\\n              Edit\\n            </button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\"\\n              class=\\\"btn btn-secondary ml-3\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n\\n            <span class=\\\"pull-right\\\" *ngIf=\\\"showAction && readOnlyForm == 'U'\\\">\\n              <div class=\\\"dropdown theme-dropdown clearfix\\\" placement=\\\"bottom-right\\\" ngbDropdown>\\n                <!-- <button class=\\\"btn btn-secondary\\\" >\\n                        Dropdown\\n                    </button> -->\\n                <i class=\\\"fa fa-bars\\\" ngbDropdownToggle></i>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" ngbDropdownMenu>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"enableFormEditable()\\\">Edit</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"cancelForm(f)\\\">New</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"open(model.id, uploadContent)\\\">File Upload</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"open(model.id, trashContent)\\\">Delete</a>\\n                </div>\\n              </div>\\n            </span>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"readOnlyForm == 'U'; else notRead\\\">\\n          <table class=\\\"table table-borderless table-striped\\\">\\n            <tbody>\\n              <tr *ngIf=\\\"model.fullname\\\">\\n                <th>Name</th>\\n                <td>{{ model.fullname }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.dob\\\">\\n                <th>Date of Birth</th>\\n                <td>{{ model.dob }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.phone\\\">\\n                <th>Phone</th>\\n                <td>{{ model.phone }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.email\\\">\\n                <th>Email</th>\\n                <td>{{ model.email }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.highestEducation\\\">\\n                <th>Qualification</th>\\n                <td>{{ model.highestEducation }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.passoutYear\\\">\\n                <th>Passout Year</th>\\n                <td>{{ model.passoutYear }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.currentLocation\\\">\\n                <th>Current Location</th>\\n                <td>{{ model.currentLocation }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.prefferedLocation\\\">\\n                <th>Prefer Location</th>\\n                <td>{{ model.prefferedLocation }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.currentCompany\\\">\\n                <th>Current Company</th>\\n                <td>{{ model.currentCompany }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.currentCTC\\\">\\n                <th>Current CTC</th>\\n                <td>{{ model.currentCTC }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.expectedCTC\\\">\\n                <th>Expected CTC</th>\\n                <td>{{ model.expectedCTC }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.currentJobTitle\\\">\\n                <th>Current Job Title</th>\\n                <td>{{ model.currentJobTitle }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.currentFunctionalArea\\\">\\n                <th>Current Functional Area</th>\\n                <td>{{ model.currentFunctionalArea }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.currentIndustry\\\">\\n                <th>Current Industry</th>\\n                <td>{{ model.currentIndustry }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.monthsInCurrentJob\\\">\\n                <th>Experience in Current Job</th>\\n                <td>{{ model.monthsInCurrentJob }} months - {{ model.yearsInCurrentJob }} years</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.experienceMonths\\\">\\n                <th>Total Experience</th>\\n                <td>{{ model.experienceMonths }} months - {{ model.experienceYrs }} years</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.noticePeriod\\\">\\n                <th>Notice period</th>\\n                <td>{{ model.noticePeriod }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.skills\\\">\\n                <th>Skills</th>\\n                <td>{{ model.skills }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.description\\\">\\n                <th>Description</th>\\n                <td>\\n                  {{ model.description }}\\n                </td>\\n              </tr>\\n              <tr *ngFor=\\\"let ap of model.properties\\\">\\n                <th>{{ ap.name }}</th>\\n                <td>{{ ap.value }}</td>\\n              </tr>\\n              <tr *ngFor=\\\"let fl of model.files\\\">\\n                <th>Files</th>\\n                <td class=\\\"file-download\\\" (click)=\\\"downloadFile(fl.id)\\\">{{ fl.fileName }}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <ng-template #notRead>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Salutation<span class=\\\"required\\\">*</span></label>\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" [disabled]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.gender\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': f.submitted && gender.invalid }\\\" #gender=\\\"ngModel\\\" required>\\n                  <option *ngFor=\\\"let gl of GENDER\\\" [ngValue]=\\\"gl.value\\\">{{ gl.key }}</option>\\n                </select>\\n                <div class=\\\"invalid-feedback\\\">\\n                  gender is mandatory\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-5\\\" style=\\\"margin-left:-20px;\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Full Name<span class=\\\"required\\\">*</span></label>\\n                <input class=\\\"form-control\\\" name=\\\"fullname\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.fullname\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && fullname.invalid }\\\"\\n                  #fullname=\\\"ngModel\\\" #consultantName (blur)=\\\"transformTitleCase(consultantName)\\\" required />\\n                <div class=\\\"invalid-feedback\\\">\\n                  fullname is mandatory\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\" data-provide=\\\"datepicker\\\">\\n                <label>Date of Birth</label>\\n                <input style=\\\"width: 175px; margin-left: -15px\\\" type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"dob\\\"\\n                  [(ngModel)]=\\\"model.dob\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && dob.invalid }\\\" #dob=\\\"ngModel\\\"\\n                  [readonly]=\\\"readOnlyForm == 'R'\\\" max=\\\"9999-12-31\\\" />\\n                <div class=\\\"input-group-addon\\\">\\n                  <span class=\\\"glyphicon glyphicon-th\\\"></span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <!--pattern=\\\"/^-?\\\\d+\\\\.?\\\\d*$/\\\"\\n                onKeyPress=\\\"if(this.value.length==12) return false;\\\" -->\\n                <label>Phone</label><input class=\\\"form-control\\\" name=\\\"phone\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.phone\\\" maxlength=\\\"14\\\" onKeyPress=\\\"if(this.value.length==14) return false;\\\"\\n                  #phone=\\\"ngModel\\\" type=\\\"tel\\\" />\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>E-Mail</label>\\n                <!-- ng-pattern=\\\"/^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$/\\\" -->\\n                <input class=\\\"form-control\\\" name=\\\"email\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.email\\\"\\n                  #email=\\\"ngModel\\\" type=\\\"email\\\" />\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Qualification</label>\\n                <input class=\\\"form-control\\\" name=\\\"highesteducation\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.highestEducation\\\" maxlength=\\\"15\\\" #highesteducation=\\\"ngModel\\\" />\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Passout Year</label>\\n                <input class=\\\"form-control\\\" name=\\\"passoutyear\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" type=\\\"number\\\"\\n                  onkeypress=\\\"if(this.value.length==4) return false;\\\" max=\\\"9999\\\" [(ngModel)]=\\\"model.passoutYear\\\" />\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Current Location</label>\\n                <input type=\\\"text\\\" name=\\\"currentLocation\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"model.currentLocation\\\" />\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Prefer Location</label>\\n                <input class=\\\"form-control\\\" name=\\\"prefferedLocation\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.prefferedLocation\\\" />\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div *ngIf=\\\"isFresher\\\" class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Expected CTC</label>\\n                <input type=\\\"text\\\" name=\\\"expectedCTC\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"model.expectedCTC\\\" />\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Consultant Status<span class=\\\"required\\\">*</span></label>\\n                <select class=\\\"form-control\\\" name=\\\"constat\\\" [disabled]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.conStatus\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && constat.invalid }\\\"\\n                  #constat=\\\"ngModel\\\" required>\\n                  <option *ngFor=\\\"let cs of consultantStatusList.list\\\" [ngValue]=\\\"cs.code\\\"> {{ cs.description }}\\n                  </option>\\n                </select>\\n                <div class=\\\"invalid-feedback\\\">\\n                  consultant status is mandatory\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Sourced From</label>\\n                <select class=\\\"form-control\\\" name=\\\"sourced\\\" [disabled]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.sourcedFrom\\\" #sourced=\\\"ngModel\\\">\\n                  <option *ngFor=\\\"let cs of properties.CON_SOURCE\\\" [ngValue]=\\\"cs\\\">\\n                    {{ cs }}\\n                  </option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12 pb-2\\\">\\n              <input type=\\\"checkbox\\\" class=\\\"\\\" [(ngModel)]=\\\"isFresher\\\" (change)=\\\"emptyExperience()\\\"\\n                name=\\\"interviewCheckbox\\\" />&nbsp;<label>Fresher</label>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"!isFresher\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Current Company</label>\\n                  <input type=\\\"text\\\" name=\\\"currentCompany\\\" class=\\\"form-control\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                    [(ngModel)]=\\\"model.currentCompany\\\" />\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Current CTC</label>\\n                  <input type=\\\"text\\\" name=\\\"currentCTC\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"model.currentCTC\\\" />\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Expected CTC</label>\\n                  <input type=\\\"text\\\" name=\\\"expectedCTC\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"model.expectedCTC\\\" />\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Current Job Title</label>\\n                  <input type=\\\"text\\\" name=\\\"currentJobTitle\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"model.currentJobTitle\\\" />\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Current Functional Area</label>\\n                  <input type=\\\"text\\\" name=\\\"currentFunctionalArea\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"model.currentFunctionalArea\\\" />\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Current Industry</label>\\n                  <input type=\\\"text\\\" name=\\\"currentIndustry\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"model.currentIndustry\\\" />\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Experience in Current Job</label>\\n                  <div class=\\\"form-inline\\\">\\n                    <input type=\\\"text\\\" name=\\\"yearsInCurrentJob\\\" class=\\\"form-control col-md-2\\\"\\n                      [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.yearsInCurrentJob\\\" min=\\\"0\\\" />&nbsp;&nbsp;\\n                    <small>years</small>&nbsp;<span> /</span>&nbsp;<input type=\\\"text\\\" class=\\\"form-control col-md-2\\\"\\n                      name=\\\"monthsInCurrentJob\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.monthsInCurrentJob\\\"\\n                      min=\\\"0\\\" max=\\\"12\\\" />&nbsp;&nbsp;<small>months</small>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Total Experience</label>\\n                  <div class=\\\"form-inline\\\">\\n                    <input type=\\\"text\\\" name=\\\"expyears\\\" class=\\\"form-control col-md-2\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                      [(ngModel)]=\\\"model.experienceYrs\\\" min=\\\"0\\\" />\\n                    &nbsp;&nbsp; <small>years</small>&nbsp;<span> /</span>&nbsp;<input type=\\\"text\\\"\\n                      class=\\\"form-control col-md-2\\\" name=\\\"expmonths\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                      [(ngModel)]=\\\"model.experienceMonths\\\" min=\\\"0\\\" max=\\\"11\\\"\\n                      (onkeyup)=\\\"imposeMinMax(this)\\\" />&nbsp;&nbsp;<small>months</small>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Notice period</label>\\n                  <select class=\\\"form-control\\\" name=\\\"noticeperiod\\\" [disabled]=\\\"readOnlyForm == 'R'\\\"\\n                    [(ngModel)]=\\\"model.noticePeriod\\\" #noticeperiod=\\\"ngModel\\\">\\n                    <option *ngFor=\\\"let cs of properties.DURATION\\\">\\n                      {{ cs }}\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Skills</label>\\n                <textarea class=\\\"form-control\\\" cols=\\\"10\\\" rows=\\\"10\\\" name=\\\"skills\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.skills\\\">\\n                </textarea>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"model.properties.length > 0\\\">\\n              <div class=\\\"col-md-12 ml-3\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Additional Properties</label>\\n                  <div class=\\\"row\\\" *ngFor=\\\"let ap of model.properties; let i = index\\\">\\n                    <div class=\\\"col-md-5\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"ap.name\\\" class=\\\"form-control\\\" name=\\\"addPropName{{ i }}\\\"\\n                        [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                    </div>\\n                    <div class=\\\"col-md-5\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"ap.value\\\" class=\\\"form-control\\\" name=\\\"addPropValue{{ i }}\\\"\\n                        [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                      <i class=\\\"fa fa-minus\\\" aria-hidden=\\\"true\\\" id=\\\"decrease\\\" *ngIf=\\\"enableButtonType != 'E'\\\"\\n                        (click)=\\\"propertiesListIncrement($event.target, i)\\\"></i>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Description</label>\\n                <textarea class=\\\"form-control\\\" name=\\\"description\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.description\\\" rows=\\\"10\\\"></textarea>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Additional Properties</label>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-5\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"apName\\\" class=\\\"form-control\\\" name=\\\"apName\\\"\\n                      [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                  </div>\\n                  <div class=\\\"col-md-5\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"apValue\\\" class=\\\"form-control\\\" name=\\\"apValue\\\"\\n                      [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\" id=\\\"increase\\\" *ngIf=\\\"enableButtonType != 'E'\\\"\\n                      (click)=\\\"propertiesListIncrement($event.target, 0)\\\"></i>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"modal-body\\\" *ngIf=\\\"model.files.length > 0\\\">\\n                <table class=\\\"table\\\">\\n                  <thead>\\n                    <th>File Name</th>\\n                    <th>Description</th>\\n                    <th>Action</th>\\n                  </thead>\\n                  <tbody *ngFor=\\\"let fl of model.files\\\">\\n                    <td>{{ fl.fileName }}</td>\\n                    <td>{{ fl.description }}</td>\\n                    <td>\\n                      <i class=\\\"fa fa-download\\\" (click)=\\\"downloadFile(fl.id)\\\"></i>&nbsp;\\n                      <i class=\\\"fa fa-trash\\\" (click)=\\\"trashFile(fl.id, fl)\\\"></i>\\n                    </td>\\n                  </tbody>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </ng-template>\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12 form-group\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">\\n              Add\\n            </button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\" (click)=\\\"update(f)\\\">\\n              Update\\n            </button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\"\\n                (click)=\\\"enableFormEditable()\\\">\\n                Edit\\n              </button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<ng-template #trashContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Consultant</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>Are you sure you want to delete ? &hellip;</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"trash()\\\">Ok</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n<ng-template #downloadContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Consultant {{ urlConstants.DownloadFilesMsg }}</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\" *ngIf=\\\"model.files.length > 0; else emptyMsg\\\">\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <th>File Name</th>\\n        <th>Description</th>\\n        <th>Action</th>\\n      </thead>\\n      <tbody *ngFor=\\\"let fl of model.files\\\">\\n        <td>{{ fl.fileName }}</td>\\n        <td>{{ fl.Description }}</td>\\n        <td>\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"downloadFile(fl.id)\\\">Download</button>\\n        </td>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n<ng-template #emptyMsg>\\n  <h3 class=\\\"text-center\\\">No Files to download</h3>\\n</ng-template>\\n<ng-template #uploadContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">{{ urlConstants.UploadFilesMsg }}</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <input class=\\\"form-control\\\" type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n    <textarea class=\\\"form-control mt-3\\\" placeholder=\\\"comments\\\" cols=\\\"5\\\" rows=\\\"5\\\" [(ngModel)]=\\\"comments\\\"></textarea>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"uploadFiles()\\\">Upload</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n\"","module.exports = \".required {\\n  color: red; }\\n\\n.my-custom-scrollbar {\\n  position: relative;\\n  height: 31.5em;\\n  overflow: auto; }\\n\\n.table-wrapper-scroll-y {\\n  display: block; }\\n\\n.padding-top {\\n  padding-top: 60px; }\\n\\n.dropdown-toggle::after {\\n  display: none; }\\n\\n.drop-list:hover {\\n  cursor: pointer; }\\n\\n.file-download:hover {\\n  cursor: pointer;\\n  color: blue;\\n  text-decoration: underline; }\\n\\n.table-striped tbody tr:nth-of-type(odd) {\\n  background-color: #c1c1c1; }\\n\\n.ml-n1 {\\n  margin-left: -114px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2NvbnN1bHRhbnQvRDpcXENDUFQgTUFJTlxcdHJ1bmtcXGNjcHQtcGFyZW50XFxjY3B0LXdlYlxcc3JjXFxtYWluXFx3ZWIvc3JjXFxhcHBcXGxheW91dFxcY29uc3VsdGFudFxcY29uc3VsdGFudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVUsRUFDWDs7QUFDRDtFQUNFLG1CQUFrQjtFQUNsQixlQUFjO0VBQ2QsZUFBYyxFQUNmOztBQUNEO0VBQ0UsZUFBYyxFQUNmOztBQUNEO0VBQ0Usa0JBQWlCLEVBQ2xCOztBQUNEO0VBQ0UsY0FBYSxFQUNkOztBQUNEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBQ0Q7RUFDRSxnQkFBZTtFQUNmLFlBQVc7RUFDWCwyQkFBMEIsRUFDM0I7O0FBQ0Q7RUFFSSwwQkFBeUIsRUFDMUI7O0FBRUg7RUFDRSxvQkFBbUIsRUFDcEIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvY29uc3VsdGFudC9jb25zdWx0YW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlcXVpcmVkIHtcclxuICBjb2xvcjogcmVkO1xyXG59XHJcbi5teS1jdXN0b20tc2Nyb2xsYmFyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgaGVpZ2h0OiAzMS41ZW07XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuLnRhYmxlLXdyYXBwZXItc2Nyb2xsLXkge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcbi5wYWRkaW5nLXRvcCB7XHJcbiAgcGFkZGluZy10b3A6IDYwcHg7XHJcbn1cclxuLmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXIge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLmRyb3AtbGlzdDpob3ZlciB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi5maWxlLWRvd25sb2FkOmhvdmVyIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgY29sb3I6IGJsdWU7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbn1cclxuLnRhYmxlLXN0cmlwZWQge1xyXG4gIHRib2R5IHRyOm50aC1vZi10eXBlKG9kZCkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2MxYzFjMTtcclxuICB9XHJcbn1cclxuLm1sLW4xIHtcclxuICBtYXJnaW4tbGVmdDogLTExNHB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, HostListener } from \"@angular/core\";\nimport {\n  NgbModal,\n  ModalDismissReasons,\n  NgbModalRef\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { FileUploader, FileLikeObject } from \"ng2-file-upload\";\nimport { NgForm } from \"@angular/forms\";\nimport { routerTransition } from \"../../router.animations\";\nimport {\n  ConsultantModel,\n  ActionsList,\n  AdvanceSearchModel\n} from \"./consultant.model\";\nimport { ConsultantStatusModel } from \"../consultant-status/consultant-status.model\";\nimport { URLConstants } from \"../components/constants/url-constants\";\nimport { Properties } from \"../components/constants/properties\";\nimport { AdditionalPropertiesModel } from \"src/app/additional-properties.model\";\nimport { Router } from \"@angular/router\";\nimport {\n  StorageService,\n  HttpClientService,\n  ToastrCustomService\n} from \"../../shared/services\";\n\n@Component({\n  selector: \"app-consultant\",\n  templateUrl: \"./consultant.component.html\",\n  styleUrls: [\"./consultant.component.scss\"],\n  animations: [routerTransition()]\n})\nexport class ConsultantComponent implements OnInit {\n  public model: ConsultantModel = <ConsultantModel>{};\n  public consultantList: any = [];\n  public pagedConsultantList: Array<ConsultantModel> = [];\n  public consultantStatusList: Array<ConsultantStatusModel> = [];\n  public formButtonsToggler = true;\n  public readOnlyForm = \"\";\n  public enableButtonType = \"\";\n  public GENDER = [\n    { key: \"Mr.\", value: \"Male\" },\n    { key: \"Mrs.\", value: \"Female\" }\n  ];\n  public uploadFileList: Array<any> = [];\n  public fileList: Array<any> = [];\n  public refType = \"\";\n  public comments = \"\";\n  public isFresher: boolean;\n  public uploader: FileUploader = new FileUploader({});\n  private selectedRecrdToDel = 0;\n  public closeResult = \"\";\n  public download = \"download\";\n  public upload = \"upload\";\n  public apName = \"\";\n  public apValue = \"\";\n  public screenHeight: any;\n  private modalRef: NgbModalRef;\n  public listReturned: boolean;\n  public urlConstants = new URLConstants();\n  public properties = new Properties();\n  public advanceSearchModel: AdvanceSearchModel = <AdvanceSearchModel>{};\n\n  public showAction: boolean = false;\n  public actionsList = new ActionsList();\n  public action: string;\n  public inCon: boolean = true;\n  public isCreate: boolean = false;\n  public currSearchTxt: string;\n  public idToActivate: number;\n  public page: number;\n  public consultantListLength: number;\n  public pageSize: number = 20;\n  public cSGetAllPromise = this.http.get(this.urlConstants.CSGetAll);\n  public cGetAllPromise = this.http.get(this.urlConstants.CGetAll);\n  public paginateConfig: any = {\n    itemsPerPage: 0,\n    currentPage: 0,\n    totalItems: 0\n  };\n  constructor(\n    private http: HttpClientService,\n    private router: Router,\n    private toastr: ToastrCustomService,\n    private modalService: NgbModal,\n    private storage: StorageService\n  ) {\n    this.getScreenSize();\n  }\n  @HostListener(\"window:resize\", [\"$event\"])\n  getScreenSize(event?) {\n    /* Here we are decreasing screenheight to 237 for pagination */\n    this.screenHeight = window.innerHeight - 237;\n  }\n  ngOnInit() {\n    /*Autheticate user with the token */\n    if (!this.http.isAuthenticate()) {\n      this.router.navigate([\"/login\"]);\n    }\n    this.cSGetAllPromise.subscribe(resp => {\n      this.consultantStatusList = resp as any;\n    });\n    this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n    this.init();\n    this.initialGetAll();\n    this.spinner(true);\n    /**Emptying the consultantId in storage */\n    this.storage.consultantId = null;\n  }\n  private paginateConfigDeclare(itemsPerPage, currentPage, totalItems) {\n    (this.paginateConfig.itemsPerPage = itemsPerPage),\n      (this.paginateConfig.currentPage = currentPage),\n      (this.paginateConfig.totalItems = totalItems);\n  }\n  public initialGetAll() {\n    let pageNumber = this.paginateConfig.currentPage - 1;\n    let temp = this.http.get(\n      this.urlConstants.CGetAllByStatus +\n        pageNumber +\n        \"&pageSize=50&sortBy=id&status=Active\"\n    );\n    temp.subscribe(resp => {\n      this.consultantList = resp as any;\n      this.consultantList.list.forEach(cl => {\n        if (\n          this.validate(cl.fullname) &&\n          this.validate(cl.email) &&\n          this.validate(cl.phone)\n        ) {\n          cl[\"isProfileCompleted\"] = \"profileComplete\";\n        } else {\n          cl[\"isProfileCompleted\"] = \"profileInComplete\";\n        }\n      });\n      this.paginateConfig.totalItems = this.consultantList.noOfRecords;\n    });\n  }\n  init(): void {\n    // this.spinner(false);\n    // this.cGetAllPromise.subscribe(resp => {\n    //   this.consultantList = resp as any;\n    //   this.consultantList.forEach(cl => {\n    //     if (this.validate(cl.fullname) && this.validate(cl.email) && this.validate(cl.phone)) {\n    //       cl['isProfileCompleted'] = 'profileComplete';\n    //     }\n    //     else {\n    //       cl['isProfileCompleted'] = 'profileInComplete';\n    //     }\n    //   });\n    //   this.pageChange(this.page);\n    //   this.spinner(true);\n    // });\n    this.model.properties = [];\n    this.model.files = [];\n    this.model.conStatus = \"Active\";\n    this.model.phone = \"+91 \";\n    this.model.sourcedFrom = this.properties.CON_SOURCE[0];\n    this.page = 1;\n  }\n  private validate(value: any): boolean {\n    const bool = value ? true : false;\n    return bool;\n  }\n  private validateFile(value: any): boolean {\n    if (value == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  defaultValues() {\n    this.model.properties = [];\n    this.model.conStatus = \"Active\";\n    this.model.phone = \"+91\";\n  }\n  public setModel(id: number) {\n    this.getConsultantById(id);\n    this.readOnlyForm = \"U\";\n    this.enableButtonType = \"E\";\n    this.showAction = true;\n    this.action = null;\n  }\n  public enableFormEditable(): void {\n    this.readOnlyForm = \"\";\n    this.enableButtonType = \"U\";\n  }\n  private formReset() {\n    this.model = <ConsultantModel>{};\n    this.model.properties = [];\n    this.model.files = [];\n    this.model.conStatus = \"Active\";\n    this.model.phone = \"+91\";\n  }\n  public create(consultantForm: NgForm): void {\n    this.spinner(false);\n    this.isCreate = true;\n    const temp = this.http.post(this.model, this.urlConstants.CCreate);\n    temp.subscribe(\n      resp => {\n        this.spinner(true);\n        this.isCreate = false;\n        this.toastr.success(this.properties.CREATE, this.properties.CON);\n        consultantForm.resetForm();\n        this.init();\n        this.formReset();\n        this.paginateConfig.currentPage = 1;\n        this.initialGetAll();\n        /**Creation of client application */\n        this.createCA(resp);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CON);\n        this.isCreate = false;\n        this.spinner(true);\n      }\n    );\n  }\n  private createCA(resp: any) {\n    let decision = confirm(this.properties.CONFIRM_CA_NEW);\n    if (decision == true) {\n      /**Assigning consultant id to the storage consultant */\n      this.storage.consultantId = resp.id;\n      this.router.navigate([\"/layout/client-application\"]);\n    }\n  }\n  public update(consultantForm: NgForm) {\n    this.spinner(false);\n    const temp = this.http.update(this.model, this.urlConstants.CUpdate);\n    temp.subscribe(\n      resp => {\n        consultantForm.resetForm();\n        this.toastr.success(this.properties.UPDATE, this.properties.CON);\n        this.formReset();\n        this.init();\n        this.initialGetAll();\n        this.spinner(true);\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n      },\n      err => {\n        this.toastr.error(err.statusText, this.properties.CON);\n        this.spinner(true);\n      }\n    );\n  }\n  private getConsultantById(id: number) {\n    const temp = this.http.get(this.urlConstants.CGetById + id);\n    temp.subscribe(resp => {\n      this.model = this.mapToUpdateModel(resp);\n      if (this.model.properties == null) {\n        this.model.properties = [];\n      }\n      if (\n        this.model.currentCompany == \"\" ||\n        this.model.currentCompany == null\n      ) {\n        this.isFresher = true;\n      }\n    });\n  }\n  public getFilesById(id: number) {\n    this.http.get(\"/uploadFile/id?id=\" + id).subscribe(resp => {\n      this.fileList.push(resp);\n    });\n  }\n  public cancelForm(consultantForm: NgForm) {\n    consultantForm.resetForm();\n    this.init();\n    this.formReset();\n    this.readOnlyForm = \"\";\n    this.enableButtonType = \"\";\n    this.showAction = false;\n    this.defaultValues();\n  }\n  public trash(): void {\n    this.spinner(false);\n    const temp = this.http.delete(\n      this.urlConstants.CDelete + this.selectedRecrdToDel\n    );\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.DELETE, this.properties.CON);\n        this.init();\n        this.close();\n        this.formReset();\n        this.initialGetAll();\n        this.spinner(true);\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n      },\n      err => {\n        if (err.status === 200) {\n          this.init();\n          this.close();\n          this.formReset();\n          return this.toastr.success(\n            this.properties.DELETE,\n            this.properties.CON\n          );\n        }\n        this.toastr.error(err.statusText, this.properties.CON);\n        this.spinner(true);\n      }\n    );\n  }\n  public trashFile(id: number, con: ConsultantModel) {\n    const temp = this.http.delete(this.urlConstants.FileDelete + id);\n    /** Delete the loop code once it fix with Backend API */\n    this.model.files.forEach(f => {\n      if (f.id === id) {\n        let ind = this.model.files.indexOf(f);\n        this.model.files.splice(ind, 1);\n      }\n    });\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.DELETE, this.properties.CON);\n      },\n      err => {\n        if (err.status === 200) {\n          return this.toastr.success(\n            this.properties.DELETE,\n            this.properties.CON\n          );\n        }\n        this.toastr.error(err.statusText, this.properties.CON);\n      }\n    );\n  }\n  private mapToUpdateModel(response): ConsultantModel {\n    const temp = response;\n    this.model = temp;\n    this.model[\"conStatus\"] = temp.status.code;\n    return this.model;\n  }\n  public propertiesListIncrement(event, i: number) {\n    switch (event.id) {\n      case \"decrease\": {\n        this.model.properties.splice(i, 1);\n        break;\n      }\n      case \"increase\": {\n        if (this.model.properties == null) {\n          this.model.properties = [];\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else if (this.model.properties.length == 0) {\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else {\n          let propertyExist: boolean;\n          for (let i = 0; i < this.model.properties.length; i++) {\n            if (\n              this.model.properties[i].name == this.apName &&\n              this.model.properties[i].value == this.apValue\n            ) {\n              propertyExist = true;\n            } else {\n              propertyExist = false;\n            }\n          }\n          if (propertyExist) {\n            this.toastr.error(\n              this.properties.PROPERTY_EXIST,\n              this.properties.PROPERTIES\n            );\n          } else {\n            this.model.properties.push(<AdditionalPropertiesModel>{\n              name: this.apName,\n              value: this.apValue\n            });\n            this.apName = \"\";\n            this.apValue = \"\";\n          }\n        }\n        break;\n      }\n    }\n  }\n  public imposeMinMax(el) {\n    if (el.value !== \"\") {\n      if (parseInt(el.value) < parseInt(el.min)) {\n        el.value = el.min;\n      }\n      if (parseInt(el.value) > parseInt(el.max)) {\n        el.value = el.max;\n      }\n    }\n  }\n  public activateId() {\n    const id = this.idToActivate;\n    const temp = this.http.get(this.urlConstants.CActivate + id);\n    temp.subscribe(resp => {\n      this.toastr.success(this.properties.ACTIVATED, this.properties.CON);\n      this.init();\n    });\n  }\n  public transformTitleCase(ip: HTMLInputElement) {\n    let temp =\n      ip.value.length === 0\n        ? \"\"\n        : ip.value.replace(\n            /\\w\\S*/g,\n            txt => txt[0].toUpperCase() + txt.substr(1).toLowerCase()\n          );\n    ip.value = temp;\n  }\n  /**\n   * @param\n   * 1) content consists the modal instance\n   * 2) Selected contains the code of selected row\n   */\n  public open(event: any, content: any) {\n    this.selectedRecrdToDel = 0;\n    if (event) {\n      this.selectedRecrdToDel = event;\n    }\n    // if (event.type === this.download) {\n    //     // this.getFilesById(this.selectedRecrdToDel); TODO:Need to fix for multiple downloads\n    //     this.http.get('file/download?refType=Consultant&refId=' + this.selectedRecrdToDel).subscribe(resp => {\n    //     }, err => {\n    //       if (err.status == 200)\n    //           window.open(err.url);\n    //   });\n    // } else {\n    this.modalRef = this.modalService.open(content);\n    this.modalRef.result.then(\n      result => {\n        this.closeResult = `Closed with: ${result}`;\n      },\n      reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      }\n    );\n    //}\n  }\n  public close() {\n    this.modalRef.close();\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n  /** Get Uploaded files */\n  private getFiles(): FileLikeObject[] {\n    return this.uploader.queue.map(fileItem => {\n      return fileItem.file;\n    });\n  }\n  /**Download file */\n  public downloadFile(id: number) {\n    this.http.get(this.urlConstants.FileDownload + id).subscribe(\n      resp => {},\n      err => {\n        if (err.status == 200) window.open(err.url);\n      }\n    );\n  }\n  /** Upload documents of respective consultant */\n  public uploadFiles() {\n    const files = this.getFiles();\n    const formData = new FormData();\n    formData.append(\"file\", files[0].rawFile, files[0].name);\n    const params =\n      \"refId=\" +\n      this.selectedRecrdToDel +\n      \"&refType=Consultant&comments=\" +\n      this.comments;\n    this.http.upload(this.urlConstants.FileUpload + params, formData).subscribe(\n      resp => {\n        let temp: any = resp;\n        this.uploader = new FileUploader({});\n        this.toastr.success(temp.message, \"Client\");\n        this.close();\n      },\n      err => {\n        this.toastr.success(err.error.message, \"Client\");\n      }\n    );\n    /* let requests = [];\n         files.forEach((file) => {\n             let formData = new FormData();\n             formData.append('file', file.rawFile, file.name);\n             console.log(formData);\n             this.http.upload('', formData[0]).subscribe(resp => {\n                 console.log(\"resp=====\", resp);\n             })\n             // requests.push(this.uploadService.upload(formData));\n         });*/\n\n    /*concat(...requests).subscribe(\n          (res) => {\n            console.log(res);\n          },\n          (err) => {\n            console.log(err);\n          }\n        );*/\n  }\n  public emptyExperience() {\n    if (this.isFresher) {\n      this.model.currentCompany = \"\";\n      this.model.currentCTC = \"\";\n      this.model.expectedCTC = \"\";\n      this.model.currentJobTitle = \"\";\n      this.model.currentFunctionalArea = \"\";\n      this.model.currentIndustry = \"\";\n      this.model.yearsInCurrentJob = \"\";\n      this.model.monthsInCurrentJob = \"\";\n      this.model.experienceYrs = \"\";\n      this.model.experienceMonths = \"\";\n      this.model.noticePeriod = \"\";\n    }\n  }\n  private spinner(isSpinner: boolean) {\n    this.listReturned = isSpinner;\n  }\n  public search() {\n    this.paginateConfig.currentPage = 1;\n    if (this.currSearchTxt.length == 0) {\n      this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n      this.initialGetAll();\n    } else if (this.currSearchTxt.length > 3) {\n      let temp = this.http.get(this.urlConstants.CSearch + this.currSearchTxt);\n      temp.subscribe(resp => {\n        this.consultantList.list = resp as any;\n        this.paginateConfigDeclare(\n          this.consultantList.list.length,\n          1,\n          this.consultantList.list.length\n        );\n      });\n    }\n  }\n\n  public advanceSearch() {\n    let temp = this.http.post(this.advanceSearchModel, this.urlConstants.CAdvSearch);\n      temp.subscribe(resp => {\n        this.consultantList.list = resp as any;\n        this.paginateConfigDeclare(\n          this.consultantList.list.length,\n          1,\n          this.consultantList.list.length\n        );\n      });\n  }\n  public cancelAdvSearch(showSearch: HTMLInputElement) {\n    showSearch.checked = false;\n    this.advanceSearchModel = <AdvanceSearchModel>{};\n    this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n    this.initialGetAll();\n  }\n\n  pageChanged(event) {\n    this.paginateConfig.currentPage = event;\n    if (this.inCon) {\n      this.initialGetAll();\n    }\n  }\n  public getIncompleteCon() {\n    let temp = this.http.get(this.urlConstants.CGetInactive);\n    temp.subscribe(resp => {\n      this.consultantList.list = resp as any;\n      this.paginateConfigDeclare(\n        this.properties.ITEMSPERPAGE,\n        1,\n        this.consultantList.list.length\n      );\n      this.inCon = false;\n    });\n  }\n  public getAllCon() {\n    this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n    this.initialGetAll();\n    this.inCon = true;\n  }\n}\n","import { ConsultantStatusModel } from \"../consultant-status/consultant-status.model\";\r\nimport { AdditionalPropertiesModel } from \"src/app/additional-properties.model\";\r\n\r\nexport interface ConsultantModel {\r\n  fullname: string;\r\n  email: string;\r\n  phone: string;\r\n  gender: string;\r\n  dob: string;\r\n  currentCompany: string;\r\n  currentLocation: string;\r\n  currentCTC: string;\r\n  expectedCTC: string;\r\n  experienceMonths: string;\r\n  experienceYrs: string;\r\n  prefferedLocation: string;\r\n  skills: string;\r\n  passoutYear: number;\r\n  conStatus: string;\r\n  description: string;\r\n  id: string;\r\n  currentJobTitle: string;\r\n  currentFunctionalArea: string;\r\n  currentIndustry: string;\r\n  yearsInCurrentJob: string;\r\n  monthsInCurrentJob: string;\r\n  noticePeriod: string;\r\n  highestEducation: string;\r\n  sourcedFrom: string;\r\n  files: Array<any>;\r\n  properties: Array<AdditionalPropertiesModel>;\r\n}\r\nexport interface AdvanceSearchModel {\r\n  skills: string;\r\n  minExpYrs: string;\r\n  minExpMnths: string;\r\n  maxExpYrs:string;\r\n  maxExpMnths:string;\r\n  location: string;\r\n  noticePeriod: string;\r\n}\r\nexport class ActionsList {\r\n  actions = [\r\n    { key: \"Edit\", value: \"Edit\" },\r\n    { key: \"File Upload\", value: \"File Upload\" },\r\n    { key: \"Delete\", value: \"Delete\" },\r\n    { key: \"Close\", value: \"Close\" }\r\n  ];\r\n}","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { FileUploadModule } from \"ng2-file-upload\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\n\nimport {\n  PageHeaderModule,\n  SharedPipesModule,\n  ActionListModule\n} from \"../../shared\";\nimport { ConsultantRoutingModule } from \"./consultant-routing.module\";\nimport { ConsultantComponent } from \"./consultant.component\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConsultantRoutingModule,\n    NgxPaginationModule,\n    FormsModule,\n    PageHeaderModule,\n    ActionListModule,\n    SharedPipesModule,\n    FileUploadModule,\n    NgbModule\n  ],\n  declarations: [ConsultantComponent]\n})\nexport class ConsultantModule {}\n"],"sourceRoot":""}