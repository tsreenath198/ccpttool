{"version":3,"sources":["webpack:///./src/app/layout/frequent-questions/frequent-questions-routing.module.ts","webpack:///./src/app/layout/frequent-questions/frequent-questions.component.html","webpack:///./src/app/layout/frequent-questions/frequent-questions.component.scss","webpack:///./src/app/layout/frequent-questions/frequent-questions.component.ts","webpack:///./src/app/layout/frequent-questions/frequent-questions.module.ts"],"names":[],"mappings":"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","file":"frequent-questions-frequent-questions-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { FrequentQuestionsComponent } from \"./frequent-questions.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrequentQuestionsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FrequentQuestionsRoutingModule {}\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [icon1]=\\\"'fa-book'\\\" [heading1]=\\\"'Guides'\\\" [icon2]=\\\"'fa-question-circle'\\\" [heading2]='\\\"FAQs\\\"'>\\n  </app-page-header>\\n  <div class=\\\"spinner padding-top justify-content-md-center\\\" *ngIf=\\\"!listReturned\\\">\\n    <div class=\\\"bounce1\\\"></div>\\n    <div class=\\\"bounce2\\\"></div>\\n    <div class=\\\"bounce3\\\"></div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"listReturned\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"search by skill\\\"\\n            [(ngModel)]=\\\"currSearchTxt\\\" (keyup)=\\\"search()\\\" /></div>\\n        <div class=\\\"col-md-9\\\">\\n          <select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"currDropSearch\\\" name=\\\"sel1\\\"\\n            (change)=\\\"searchSelect()\\\">\\n            <option [ngValue]=\\\"null\\\" hidden selected>--search client application--</option>\\n            <option *ngFor=\\\"let ca of getAllCA\\\" [ngValue]=\\\"ca\\\">\\n              {{ ca.name }}\\n            </option>\\n          </select>\\n          <span *ngIf=\\\"currDropSearch\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary  btn-sm ml-3\\\" (click)=\\\"cancelSearch()\\\">\\n              Cancel\\n            </button>\\n          </span>\\n        </div>\\n      </div>\\n      <div class=\\\"table-responsive mt-2 tableFixHead\\\" [style.height.px]=\\\"screenHeight\\\">\\n        <table class=\\\"table table-hover table-striped\\\">\\n          <tbody>\\n            <tr *ngFor=\\\"let ul of faqList.list | paginate: paginateConfig ; let i = index\\\" (click)=\\\"setModel(ul.id)\\\">\\n              <td>{{ul.question}}</td>\\n              <!-- <td width=\\\"100\\\">\\n                <app-action [trashContent]=\\\"trashContent\\\" [id]=\\\"ul.id\\\" [isTrash]=\\\"trash\\\" (trash)=\\\"open($event)\\\">\\n                </app-action>\\n              </td> -->\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div class=\\\"col-12 justify-content-center mb-5\\\" *ngIf=\\\"faqList.noOfRecords > properties.ITEMSPERPAGE\\\">\\n        <pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <form name=\\\"form\\\" id=\\\"UserForm\\\" (ngSubmit)=\\\"f.form.valid&&create(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12 form-group\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">Add</button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\"\\n              (click)=\\\"update(f)\\\">Update</button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\"\\n                  (click)=\\\"enableFormEditable()\\\">Edit</button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n\\n            <span class=\\\"pull-right\\\" *ngIf=\\\"showAction && readOnlyForm == 'R'\\\">\\n              <div class=\\\"dropdown theme-dropdown clearfix\\\" placement=\\\"bottom-right\\\" ngbDropdown>\\n                <!-- <button class=\\\"btn btn-secondary\\\" >\\n                                Dropdown\\n                            </button> -->\\n                <i class=\\\"fa fa-bars\\\" ngbDropdownToggle></i>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" ngbDropdownMenu>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"enableFormEditable()\\\">Edit</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"cancelForm(f)\\\">New</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"open(model.id, trashContent)\\\">Delete</a>\\n                </div>\\n              </div>\\n            </span>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Creator<span class=\\\"required\\\">*</span></label>\\n              <select class=\\\"form-control\\\" name=\\\"uname\\\" [(ngModel)]=\\\"model.creatorId\\\" [disabled]=\\\"readOnlyForm == 'R'\\\"\\n                [ngClass]=\\\"{'is-invalid': f.submitted && uname.invalid}\\\" #uname=\\\"ngModel\\\" required>\\n                <option *ngFor=\\\"let gar of getAllR.list\\\" [ngValue]=\\\"gar.id\\\">{{gar.fullname}}\\n                </option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\">\\n                creator is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Client Application<span class=\\\"required\\\">*</span></label>\\n              <select class=\\\"form-control\\\" name=\\\"ca\\\" [(ngModel)]=\\\"model.caId\\\" [disabled]=\\\"readOnlyForm == 'R'\\\"\\n                [ngClass]=\\\"{'is-invalid': f.submitted && ca.invalid}\\\" #ca=\\\"ngModel\\\" required>\\n                <option *ngFor=\\\"let gac of getAllCA\\\" [ngValue]=\\\"gac.id\\\">{{gac.name}}\\n                </option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\">\\n                application is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Skills<span class=\\\"required\\\">*</span></label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.skills\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                name=\\\"skills\\\" [ngClass]=\\\"{'is-invalid': f.submitted && skills.invalid}\\\" #pwd=\\\"ngModel\\\" #skills required>\\n              <div class=\\\"invalid-feedback\\\">\\n                skills is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- <div class=\\\"row\\\" *ngIf=\\\"model.properties.length>0\\\">\\n            <div class=\\\"col-md-12\\\" *ngIf=\\\"model.properties.length > 0\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Additional Properties</label>\\n                  <div class=\\\"row\\\" *ngFor=\\\"let ap of model.properties; let i = index\\\">\\n                    <div class=\\\"col-md-5\\\">\\n                      <input\\n                        type=\\\"text\\\"\\n                        [(ngModel)]=\\\"ap.name\\\"\\n                        class=\\\"form-control\\\"\\n                        name=\\\"addPropName{{ i }}\\\"\\n                        [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"col-md-5\\\">\\n                      <input\\n                        type=\\\"text\\\"\\n                        [(ngModel)]=\\\"ap.value\\\"\\n                        class=\\\"form-control\\\"\\n                        name=\\\"addPropValue{{ i }}\\\"\\n                        [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                      <i\\n                        class=\\\"fa fa-minus\\\"\\n                        aria-hidden=\\\"true\\\"\\n                        id=\\\"decrease\\\"\\n                        *ngIf=\\\"enableButtonType != 'E'\\\"\\n                        (click)=\\\"propertiesListIncrement($event.target, i)\\\"\\n                      ></i>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n        </div> -->\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Questions</label>\\n              <textarea rows=\\\"5\\\" cols=\\\"5\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"question\\\"\\n                [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.question\\\"></textarea>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Answer</label>\\n              <textarea rows=\\\"5\\\" cols=\\\"5\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"response\\\"\\n                [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.description\\\"></textarea>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Questions</label>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-10\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"apName\\\" class=\\\"form-control\\\" name=\\\"ques\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                    </div>\\n                    <div class=\\\"col-md-2\\\">\\n                      <i\\n                        class=\\\"fa fa-plus\\\"\\n                        aria-hidden=\\\"true\\\"\\n                        id=\\\"increase\\\"\\n                        *ngIf=\\\"enableButtonType != 'E'\\\"\\n                        (click)=\\\"questionsListIncrement($event.target, 0)\\\"\\n                      ></i>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n        </div> -->\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">Add</button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\"\\n              (click)=\\\"update(f)\\\">Update</button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\"\\n                (click)=\\\"enableFormEditable()\\\">Edit</button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #trashContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">User</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>Are you sure you want to delete ? &hellip;</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"trash()\\\">Ok</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n\"","module.exports = \".required {\\n  color: red; }\\n\\n.my-custom-scrollbar {\\n  position: relative;\\n  height: 31.5em;\\n  overflow: auto; }\\n\\n.table-wrapper-scroll-y {\\n  display: block; }\\n\\n.padding-top {\\n  padding-top: 60px; }\\n\\n.dropdown-toggle::after {\\n  display: none; }\\n\\n.drop-list:hover {\\n  cursor: pointer; }\\n\\n.table-striped tbody tr:nth-of-type(odd) {\\n  background-color: #c1c1c1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2ZyZXF1ZW50LXF1ZXN0aW9ucy9EOlxcY2NwdHRvb2wuZ2l0XFx0cnVua1xcY2NwdC1wYXJlbnRcXGNjcHQtd2ViXFxzcmNcXG1haW5cXHdlYi9zcmNcXGFwcFxcbGF5b3V0XFxmcmVxdWVudC1xdWVzdGlvbnNcXGZyZXF1ZW50LXF1ZXN0aW9ucy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVUsRUFDWDs7QUFDRDtFQUNFLG1CQUFrQjtFQUNsQixlQUFjO0VBQ2QsZUFBYyxFQUNmOztBQUNEO0VBQ0UsZUFBYyxFQUNmOztBQUNEO0VBQ0Usa0JBQWlCLEVBQ2xCOztBQUNEO0VBQ0UsY0FBYSxFQUNkOztBQUNEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBQ0Q7RUFFSSwwQkFBeUIsRUFDMUIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvZnJlcXVlbnQtcXVlc3Rpb25zL2ZyZXF1ZW50LXF1ZXN0aW9ucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZXF1aXJlZCB7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG4ubXktY3VzdG9tLXNjcm9sbGJhciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGhlaWdodDogMzEuNWVtO1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcbi50YWJsZS13cmFwcGVyLXNjcm9sbC15IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4ucGFkZGluZy10b3Age1xyXG4gIHBhZGRpbmctdG9wOiA2MHB4O1xyXG59XHJcbi5kcm9wZG93bi10b2dnbGU6OmFmdGVyIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcbi5kcm9wLWxpc3Q6aG92ZXIge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4udGFibGUtc3RyaXBlZCB7XHJcbiAgdGJvZHkgdHI6bnRoLW9mLXR5cGUob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzFjMWMxO1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit, HostListener, ElementRef } from \"@angular/core\";\nimport { routerTransition } from \"../../router.animations\";\nimport { FAQModel } from \"./frequent-questions.model\";\nimport { HttpClientService } from \"src/app/shared/services/http.service\";\nimport { URLConstants } from \"../components/constants/url-constants\";\nimport { NgForm } from \"@angular/forms\";\nimport { ToastrCustomService } from \"src/app/shared/services/toastr.service\";\nimport {\n  NgbModalRef,\n  ModalDismissReasons,\n  NgbModal\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { AdditionalPropertiesModel } from \"src/app/additional-properties.model\";\nimport { Router } from \"@angular/router\";\nimport { Properties } from \"../components/constants/properties\";\n\n@Component({\n  selector: \"app-frequent-questions\",\n  templateUrl: \"./frequent-questions.component.html\",\n  styleUrls: [\"./frequent-questions.component.scss\"],\n  animations: [routerTransition()]\n})\nexport class FrequentQuestionsComponent implements OnInit {\n  public model: FAQModel = <FAQModel>{};\n  public faqList: any = [];\n  private urlConstants = new URLConstants();\n  public properties = new Properties();\n  public rolesList: any = [];\n  public getAllR: any = [];\n  public getAllCA: any = [];\n  public readOnlyForm: any = \"\";\n  public enableButtonType: any = \"\";\n  public currSearchTxt = \"\";\n  public currDropSearch: any = null;\n  private selectedRecrdToDel = 0;\n  public closeResult = \"\";\n  public apName = \"\";\n  public apValue = \"\";\n  public isCreate: boolean = false;\n  public showAction: boolean = false;\n  public action: string = null;\n  private modalRef: NgbModalRef;\n  public screenHeight: any;\n  public viewPassword: boolean;\n  public listReturned: boolean;\n  public paginateConfig: any = {\n    temsPerPage: 0,\n    currentPage: 0,\n    totalItems: 0\n  };\n  constructor(\n    private http: HttpClientService,\n    private router: Router,\n    private toastr: ToastrCustomService,\n    private modalService: NgbModal,\n    private el: ElementRef\n  ) {\n    this.getScreenSize();\n  }\n  @HostListener(\"window:resize\", [\"$event\"])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n  }\n\n  ngOnInit() {\n    /*Autheticate user with the token */\n    if (!this.http.isAuthenticate()) {\n      this.router.navigate([\"/login\"]);\n    }\n    this.http\n      .get(this.urlConstants.RGetAll + \"0&pageSize=20000&sortBy=id\")\n      .subscribe(resp => {\n        this.getAllR = resp as any;\n        this.getRecruiterId();\n      });\n    this.http.get(this.urlConstants.CADropdown).subscribe(resp => {\n      this.getAllCA = resp as any;\n    });\n    this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n    this.init();\n    this.initialGetAll();\n    this.spinner(true);\n  }\n\n  private paginateConfigDeclare(itemsPerPage, currentPage, totalItems) {\n    (this.paginateConfig.itemsPerPage = itemsPerPage),\n      (this.paginateConfig.currentPage = currentPage),\n      (this.paginateConfig.totalItems = totalItems);\n  }\n  private init() {\n    // this.spinner(false);\n    // this.http.get(this.urlConstants.UserGetAll).subscribe(resp => {\n    //     this.faqList = resp as any;\n    //     this.spinner(true);\n    // });\n  }\n  private getRecruiterId() {\n    const temp = sessionStorage.getItem(\"username\");\n    this.getAllR.list.forEach(rl => {\n      if (rl.email === temp) {\n        this.model.creatorId = rl.id;\n      }\n      if (this.model.properties == null) {\n        this.model.properties = [];\n      }\n    });\n  }\n  public initialGetAll() {\n    let pageNumber = this.paginateConfig.currentPage - 1;\n    let temp = this.http.get(\n      this.urlConstants.FAQGetAll + pageNumber + \"&pageSize=50&sortBy=id\"\n    );\n    temp.subscribe(resp => {\n      this.faqList = resp as any;\n      //this.pageChange(this.page);\n      this.paginateConfig.totalItems = this.faqList.noOfRecords;\n    });\n  }\n  public dblSetModel() {\n    this.readOnlyForm = \"U\";\n    this.enableButtonType = \"U\";\n    this.showAction = true;\n    this.action = null;\n  }\n  private enableFormEditable(): void {\n    this.readOnlyForm = \"U\";\n    this.enableButtonType = \"U\";\n  }\n  public setModel(id: number) {\n    this.spinner(false);\n    this.getUserById(id);\n    this.readOnlyForm = \"R\";\n    this.enableButtonType = \"E\";\n    this.showAction = true;\n    this.action = null;\n  }\n  private getUserById(id: number) {\n    let temp = this.http.get(this.urlConstants.FAQGetByID + id);\n    temp.subscribe(resp => {\n      this.model = this.mapToUpdateModel(resp);\n      if (this.model.properties == null) {\n        this.model.properties = [];\n      }\n      this.spinner(true);\n    });\n  }\n  private mapToUpdateModel(response): FAQModel {\n    const temp = response;\n    this.model = temp;\n    this.model.caId = response.ca.id;\n    this.model.creatorId = response.creator.id;\n    return this.model;\n  }\n  public propertiesListIncrement(event, i: number) {\n    switch (event.id) {\n      case \"decrease\": {\n        this.model.properties.splice(i, 1);\n        break;\n      }\n      case \"increase\": {\n        if (this.model.properties.length == 0) {\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else {\n          let propertyExist: boolean;\n          for (let i = 0; i < this.model.properties.length; i++) {\n            if (\n              this.model.properties[i].name == this.apName &&\n              this.model.properties[i].value == this.apValue\n            ) {\n              propertyExist = true;\n            } else {\n              propertyExist = false;\n            }\n          }\n          if (propertyExist) {\n            this.toastr.error(\n              this.properties.PROPERTY_EXIST,\n              this.properties.PROPERTIES\n            );\n          } else {\n            this.model.properties.push(<AdditionalPropertiesModel>{\n              name: this.apName,\n              value: this.apValue\n            });\n            this.apName = \"\";\n            this.apValue = \"\";\n          }\n        }\n        break;\n      }\n    }\n  }\n  private formReset() {\n    this.model = <FAQModel>{ properties: [] };\n    this.getRecruiterId();\n  }\n  public create(usersForm: NgForm): void {\n    this.spinner(false);\n    this.isCreate = true;\n    let temp = this.http.post(this.model, this.urlConstants.FAQCreate);\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.CREATE, this.properties.USER);\n        usersForm.resetForm();\n        this.formReset();\n        this.init();\n        this.paginateConfig.currentPage = 1;\n        this.initialGetAll();\n        this.getRecruiterId();\n        this.isCreate = false;\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.USER);\n        this.isCreate = false;\n        this.spinner(true);\n      }\n    );\n  }\n  public update(usersForm: NgForm): void {\n    this.spinner(false);\n    let temp = this.http.update(this.model, this.urlConstants.FAQUpdate);\n    temp.subscribe(\n      resp => {\n        this.formReset();\n        this.toastr.success(this.properties.UPDATE, this.properties.USER);\n        this.init();\n        this.getRecruiterId();\n        usersForm.resetForm();\n        this.initialGetAll();\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.USER);\n        this.spinner(true);\n      }\n    );\n  }\n  public trash(): void {\n    this.spinner(false);\n    let temp = this.http.delete(\n      this.urlConstants.FAQDelete + this.selectedRecrdToDel\n    );\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.DELETE, this.properties.USER);\n        this.init();\n        this.paginateConfig.currentPage = 1;\n        this.initialGetAll();\n        this.close();\n        this.formReset();\n        this.getRecruiterId();\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.USER);\n        this.spinner(true);\n      }\n    );\n  }\n  public cancelForm(usersForm: NgForm) {\n    this.init();\n    usersForm.resetForm();\n    this.readOnlyForm = \"\";\n    this.enableButtonType = \"\";\n    this.showAction = false;\n  }\n  /**\n   * @param\n   * 1) content consists the modal instance\n   * 2) Selected contains the code of selected row\n   */\n  public open(event: any, content: any) {\n    if (event) {\n      this.selectedRecrdToDel = event;\n    }\n    this.modalRef = this.modalService.open(content);\n    this.modalRef.result.then(\n      result => {\n        this.closeResult = `Closed with: ${result}`;\n      },\n      reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      }\n    );\n  }\n  public close() {\n    this.modalRef.close();\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n  private spinner(isSpinner: boolean) {\n    this.listReturned = isSpinner;\n  }\n  public pageChanged(event) {\n    this.paginateConfig.currentPage = event;\n    this.initialGetAll();\n  }\n  public search() {\n    this.paginateConfig.currentPage = 1;\n    if (this.currSearchTxt.length == 0) {\n      this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n      this.initialGetAll();\n    } else if (this.currSearchTxt.length > 3) {\n      let temp = this.http.get(\n        this.urlConstants.FAQSearchBySkills + this.currSearchTxt\n      );\n      temp.subscribe(resp => {\n        this.faqList.list = resp as any;\n        this.paginateConfigDeclare(\n          this.faqList.list.length,\n          1,\n          this.faqList.list.length\n        );\n      });\n    }\n  }\n  public searchSelect() {\n    this.paginateConfig.currentPage = 1;\n    let temp = this.http.get(\n      this.urlConstants.FAQSearchByCAId + this.currDropSearch.id\n    );\n    temp.subscribe(resp => {\n      this.faqList.list = resp as any;\n      this.paginateConfigDeclare(\n        this.faqList.list.length,\n        1,\n        this.faqList.list.length\n      );\n    });\n  }\n  public cancelSearch() {\n    this.currDropSearch = null;\n    this.initialGetAll();\n    this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport {\n  PageHeaderModule,\n  SharedPipesModule,\n  ActionListModule\n} from \"../../shared\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\nimport { FrequentQuestionsRoutingModule } from \"./frequent-questions-routing.module\";\nimport { FrequentQuestionsComponent } from \"./frequent-questions.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxPaginationModule,\n    FrequentQuestionsRoutingModule,\n    FormsModule,\n    PageHeaderModule,\n    SharedPipesModule,\n    ActionListModule,\n    NgbModule\n  ],\n  declarations: [FrequentQuestionsComponent]\n})\nexport class FrequentQuestionsModule {}\n"],"sourceRoot":""}