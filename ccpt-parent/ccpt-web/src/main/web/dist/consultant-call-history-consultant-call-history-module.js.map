{"version":3,"sources":["webpack:///./src/app/layout/consultant-call-history/consultant-call-history-routing.module.ts","webpack:///./src/app/layout/consultant-call-history/consultant-call-history.component.html","webpack:///./src/app/layout/consultant-call-history/consultant-call-history.component.scss","webpack:///./src/app/layout/consultant-call-history/consultant-call-history.component.ts","webpack:///./src/app/layout/consultant-call-history/consultant-call-history.module.ts"],"names":[],"mappings":"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","file":"consultant-call-history-consultant-call-history-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ConsultantCallHistoryComponent } from \"./consultant-call-history.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ConsultantCallHistoryComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConsultantCallHistoryRoutingModule {}\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [icon2]=\\\"'fa-users'\\\" [icon1]=\\\"'fa-phone'\\\" [heading1]=\\\"'Calls'\\\"\\n    [heading2]=\\\"'Consultant Call History'\\\"></app-page-header>\\n  <ng-template #spinner>\\n    <div class=\\\"spinner padding-top justify-content-md-center\\\">\\n      <div class=\\\"bounce1\\\"></div>\\n      <div class=\\\"bounce2\\\"></div>\\n      <div class=\\\"bounce3\\\"></div>\\n    </div>\\n  </ng-template>\\n  <div class=\\\"row\\\" *ngIf=\\\"listReturned == true; else spinner\\\">\\n    <div class=\\\"col-md-7\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"search...\\\"\\n            [(ngModel)]=\\\"currSearchTxt\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"table-responsive mt-2 tableFixHead\\\" [style.height.px]=\\\"screenHeight\\\">\\n        <table class=\\\"table table-hover table-striped\\\">\\n          <thead>\\n            <tr>\\n              <!-- (click)=\\\"sort('caller')\\\" -->\\n              <th>\\n                Caller\\n                <!-- <span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='caller'\\\" [ngClass]=\\\"{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}\\\"></span> -->\\n              </th>\\n              <!-- (click)=\\\"sort('consultant')\\\" -->\\n              <th>\\n                Consultant\\n                <!-- <span class=\\\"fa fa-sort\\\" *ngIf=\\\"key =='consultant'\\\" [ngClass]=\\\"{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}\\\"></span> -->\\n              </th>\\n              <th>\\n                Client Position\\n              </th>\\n              <th width=\\\"150\\\">\\n                Called Date\\n              </th>\\n            </tr>\\n          </thead>\\n          <tbody class=\\\"overflow-ele-scroll\\\">\\n            <!-- | orderBy: key : reverse -->\\n            <tr *ngFor=\\\"let cchl of consultantCallHistoryList.list  | paginate: paginateConfig; let i = index\\\"\\n              (click)=\\\"setModel(cchl.id)\\\">\\n              <td>\\n                {{ cchl.calledBy.fullname }}\\n              </td>\\n              <td>\\n                {{ cchl.consultant.fullname }}\\n              </td>\\n              <td>\\n                <span *ngIf=\\\"cchl.clientPosition != null\\\">{{cchl.clientPosition.generatedCode}}</span>\\n                <span *ngIf=\\\"cchl.clientPosition == null\\\">&nbsp;</span>\\n              </td>\\n              <td>\\n                {{ cchl.calledDate }}\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div class=\\\"col-12 justify-content-center mb-5\\\"\\n        *ngIf=\\\"consultantCallHistoryList.noOfRecords > properties.ITEMSPERPAGE\\\">\\n        <pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls>\\n        <!-- <ngb-pagination [collectionSize]=\\\"consultantListLength\\\" [(page)]=\\\"page\\\" [ellipses]=\\\"false\\\"\\n          (pageChange)=\\\"pageChange($event)\\\" [maxSize]=\\\"pageSize\\\" [pageSize]=\\\"pageSize\\\" [rotate]=\\\"true\\\"\\n          [boundaryLinks]=\\\"true\\\">\\n        </ngb-pagination> -->\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-5\\\">\\n      <form name=\\\"form\\\" id=\\\"clientPositionForm\\\" (ngSubmit)=\\\"f.form.valid && create(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"form-group col-md-12\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">\\n              Add\\n            </button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\" (click)=\\\"update(f)\\\">\\n              Update\\n            </button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\" (click)=\\\"enableFormEditable()\\\">\\n              Edit\\n            </button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n\\n            <span class=\\\"pull-right\\\" *ngIf=\\\"showAction && readOnlyForm == 'R'\\\">\\n              <div class=\\\"dropdown theme-dropdown clearfix\\\" placement=\\\"bottom-right\\\" ngbDropdown>\\n                <!-- <button class=\\\"btn btn-secondary\\\" >\\n                        Dropdown\\n                    </button> -->\\n                <i class=\\\"fa fa-bars\\\" ngbDropdownToggle></i>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" ngbDropdownMenu>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"enableFormEditable()\\\">Edit</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"cancelForm(f)\\\">New</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"open(model.id, trashContent)\\\">Delete</a>\\n                </div>\\n              </div>\\n            </span>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Called By<span class=\\\"required\\\">*</span></label>\\n              <select class=\\\"form-control\\\" [disabled]=\\\"readOnlyForm == 'R'\\\" name=\\\"cn\\\" [(ngModel)]=\\\"model.calledBy\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && cn.invalid }\\\" #cn=\\\"ngModel\\\" required>\\n                <option *ngFor=\\\"let rl of recruiterList\\\" [ngValue]=\\\"rl.id\\\">\\n                  {{ rl.name }}\\n                </option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\">\\n                Called By is mandatory\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Called Date <span class=\\\"required\\\">*</span></label>\\n              <input class=\\\"form-control\\\" type=\\\"date\\\" name=\\\"calledDate\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                max=\\\"9999-12-31\\\" placeholder=\\\"Called Date\\\" [(ngModel)]=\\\"model.calledDate\\\" required />\\n            </div>\\n            <div class=\\\"invalid-feedback\\\">\\n              Called date is mandatory\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <hr />\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Client Position<span class=\\\"required\\\">*</span></label>\\n\\n              <select class=\\\"form-control\\\" [disabled]=\\\"readOnlyForm == 'R'\\\" name=\\\"cp\\\" [(ngModel)]=\\\"model.cpId\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && cp.invalid }\\\" #cp=\\\"ngModel\\\" required>\\n                <option *ngFor=\\\"let cpl of clientPositionList\\\" [ngValue]=\\\"cpl.id\\\">\\n                  {{ cpl.name }}\\n                </option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\">\\n                Client Position is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Consultant<span class=\\\"required\\\">*</span></label>\\n              <select class=\\\"form-control\\\" name=\\\"consultant\\\" [disabled]=\\\"readOnlyForm == 'R'\\\"\\n                [(ngModel)]=\\\"model.consultantId\\\" (change)=\\\"openSearchCon($event.target.value,searchConsultant)\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && consultant.invalid }\\\" #consultant=\\\"ngModel\\\" required>\\n                <option *ngFor=\\\"let consultant of consultantList\\\" [ngValue]=\\\"consultant.id\\\">{{ consultant.name }}\\n                </option>\\n                <option value=\\\"more\\\">More</option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\">\\n                Consultant is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\" *ngIf=\\\"model.properties.length > 0\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Additional Properties</label>\\n              <div class=\\\"row\\\" *ngFor=\\\"let ap of model.properties; let i = index\\\">\\n                <div class=\\\"col-md-5\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"ap.name\\\" class=\\\"form-control\\\" name=\\\"addPropName{{ i }}\\\"\\n                    [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                </div>\\n                <div class=\\\"col-md-5\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"ap.value\\\" class=\\\"form-control\\\" name=\\\"addPropValue{{ i }}\\\"\\n                    [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <i class=\\\"fa fa-minus\\\" aria-hidden=\\\"true\\\" id=\\\"decrease\\\" *ngIf=\\\"enableButtonType != 'E'\\\"\\n                    (click)=\\\"propertiesListIncrement($event.target, i)\\\"></i>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Notes<span class=\\\"required\\\">*</span></label>\\n              <textarea class=\\\"form-control\\\" name=\\\"description\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                [(ngModel)]=\\\"model.description\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && description.invalid }\\\"\\n                #description=\\\"ngModel\\\" cols=\\\"10\\\" rows=\\\"10\\\" required></textarea>\\n              <div class=\\\"invalid-feedback\\\">\\n                Notes is mandatory\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Additional Properties</label>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-5\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"apName\\\" class=\\\"form-control\\\" name=\\\"apName\\\"\\n                    [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                </div>\\n                <div class=\\\"col-md-5\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"apValue\\\" class=\\\"form-control\\\" name=\\\"apValue\\\"\\n                    [readonly]=\\\"readOnlyForm == 'R'\\\" (keyup)=\\\"enter($event)\\\" />\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\" id=\\\"increase\\\" *ngIf=\\\"enableButtonType != 'E'\\\"\\n                    (click)=\\\"propertiesListIncrement($event.target, 0)\\\"></i>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">\\n              Add\\n            </button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\" (click)=\\\"update(f)\\\">\\n              Update\\n            </button>\\n\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\" (click)=\\\"enableFormEditable()\\\">\\n              Edit\\n            </button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<ng-template #trashContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">{{properties.CON_C_H}}</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>{{properties.CONFIRM_DELETE}} ? &hellip;</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"trash()\\\">Ok</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n<ng-template #searchConsultant let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Search Consultant</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"search...\\\"\\n          (keyup)=\\\"popupSearchConsultant()\\\" [(ngModel)]=\\\"searchCon\\\" />\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"searchConsultantList.length > 0 ; else noDataFound\\\" class=\\\"table-responsive tableFixHead  mt-2\\\"\\n      id=\\\"viewTable\\\" [style.height.px]=\\\"screenHeight\\\">\\n      <table class=\\\"table table-sm table-hover table-striped\\\">\\n        <thead>\\n          <tr>\\n            <th>\\n              Name\\n            </th>\\n            <th>\\n              Phone\\n            </th>\\n            <th>Email</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let cl of searchConsultantList ; let i = index\\\" (click)=setSearch(cl);>\\n            <td class=\\\"table-data-padding \\\">\\n              {{ cl.fullname }}\\n            </td>\\n            <td>\\n              {{ cl.phone }}\\n            </td>\\n            <td>\\n              {{ cl.email }}\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <ng-template #noDataFound>\\n      <span *ngIf=\\\"searchCon.length > 2\\\" class=\\\"text-center\\\">\\n        <h3>No Data Found</h3>\\n      </span>\\n    </ng-template>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n\"","module.exports = \".my-custom-scrollbar {\\n  position: relative;\\n  height: 31.5em;\\n  overflow: auto; }\\n\\n.table-wrapper-scroll-y {\\n  display: block; }\\n\\n.required {\\n  color: red; }\\n\\nthead > tr > th {\\n  cursor: pointer; }\\n\\n.padding-top {\\n  padding-top: 60px; }\\n\\n.dropdown-toggle::after {\\n  display: none; }\\n\\n.drop-list:hover {\\n  cursor: pointer; }\\n\\n.table-striped tbody tr:nth-of-type(odd) {\\n  background-color: #c1c1c1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2NvbnN1bHRhbnQtY2FsbC1oaXN0b3J5L0Q6XFxjY3B0dG9vbC5naXRcXHRydW5rXFxjY3B0LXBhcmVudFxcY2NwdC13ZWJcXHNyY1xcbWFpblxcd2ViL3NyY1xcYXBwXFxsYXlvdXRcXGNvbnN1bHRhbnQtY2FsbC1oaXN0b3J5XFxjb25zdWx0YW50LWNhbGwtaGlzdG9yeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFrQjtFQUNsQixlQUFjO0VBQ2QsZUFBYyxFQUNmOztBQUNEO0VBQ0UsZUFBYyxFQUNmOztBQUNEO0VBQ0UsV0FBVSxFQUNYOztBQUNEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBQ0Q7RUFDRSxrQkFBaUIsRUFDbEI7O0FBQ0Q7RUFDRSxjQUFhLEVBQ2Q7O0FBQ0Q7RUFDRSxnQkFBZSxFQUNoQjs7QUFDRDtFQUVJLDBCQUF5QixFQUMxQiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9jb25zdWx0YW50LWNhbGwtaGlzdG9yeS9jb25zdWx0YW50LWNhbGwtaGlzdG9yeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5teS1jdXN0b20tc2Nyb2xsYmFyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgaGVpZ2h0OiAzMS41ZW07XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuLnRhYmxlLXdyYXBwZXItc2Nyb2xsLXkge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcbi5yZXF1aXJlZCB7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG50aGVhZCA+IHRyID4gdGgge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4ucGFkZGluZy10b3Age1xyXG4gIHBhZGRpbmctdG9wOiA2MHB4O1xyXG59XHJcbi5kcm9wZG93bi10b2dnbGU6OmFmdGVyIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcbi5kcm9wLWxpc3Q6aG92ZXIge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4udGFibGUtc3RyaXBlZCB7XHJcbiAgdGJvZHkgdHI6bnRoLW9mLXR5cGUob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzFjMWMxO1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit, HostListener } from \"@angular/core\";\nimport { routerTransition } from \"../../router.animations\";\nimport {\n  NgbModal,\n  ModalDismissReasons,\n  NgbModalRef\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport {\n  ConsultantCallHistoryModel,\n  ActionsList\n} from \"./consultant-call-history.model\";\nimport { HttpClientService } from \"src/app/shared/services/http.service\";\nimport { ToastrCustomService } from \"src/app/shared/services/toastr.service\";\nimport { URLConstants } from \"../components/constants/url-constants\";\nimport { Properties } from \"../components/constants/properties\";\nimport { NgForm } from \"@angular/forms\";\nimport { AdditionalPropertiesModel } from \"src/app/additional-properties.model\";\nimport { forkJoin } from \"rxjs\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-consultant-call-history\",\n  templateUrl: \"./consultant-call-history.component.html\",\n  styleUrls: [\"./consultant-call-history.component.scss\"],\n  animations: [routerTransition()]\n})\nexport class ConsultantCallHistoryComponent implements OnInit {\n  public model: ConsultantCallHistoryModel = <any>{};\n  public consultantCallHistoryList: any = [];\n  public currSearchTxt = \"\";\n  public searchCon = \"\";\n  public searchConsultantList: any = [];\n  public pagedConsultantList: Array<ConsultantCallHistoryModel> = [];\n  public formButtonsToggler = true;\n  public editButtonToggler = true;\n  public consultantList: Array<any> = [];\n  public clientPositionList: Array<any> = [];\n  public recruiterList: Array<any> = [];\n  public urlConstants = new URLConstants();\n  public properties = new Properties();\n\n  private selectedRecrdToDel = 0;\n  public closeResult = \"\";\n  private modalRef: NgbModalRef;\n  public screenHeight: any;\n  public readOnlyForm = \"\";\n  public enableButtonType = \"\";\n  public showAction: boolean = false;\n  public actionsList = new ActionsList();\n  public action: string = null;\n  public isCreate: boolean = false;\n  public apName = \"\";\n  public apValue = \"\";\n  public key: string = \"name\";\n  public reverse: boolean = false;\n  public page: number = 1;\n  public consultantListLength: number;\n  public pageSize: number = 20;\n  public incr: number = 0;\n  public listReturned: boolean;\n  public consultantId: number;\n  public getCplPromise = this.http.get(this.urlConstants.CPDropdown);\n  public getClPromise = this.http.get(this.urlConstants.CDropdown);\n  public getRlPromise = this.http.get(this.urlConstants.RDropdown);\n  public cochGetAllPromise = this.http.get(this.urlConstants.CoCHGetAll);\n  public paginateConfig: any = {\n    itemsPerPage: this.properties.ITEMSPERPAGE,\n    currentPage: 1,\n    totalItems: 0\n  };\n  constructor(\n    private http: HttpClientService,\n    private router: Router,\n    private toastr: ToastrCustomService,\n    private modalService: NgbModal\n  ) {\n    this.getScreenSize();\n  }\n\n  @HostListener(\"window:resize\", [\"$event\"])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight - 237;\n  }\n  ngOnInit() {\n    /*Autheticate user with the token */\n    if (!this.http.isAuthenticate()) {\n      this.router.navigate([\"/login\"]);\n    }\n    this.joins();\n    this.init();\n    this.initialGetAll();\n    this.spinner(true);\n  }\n  joins() {\n    forkJoin(\n      this.getCplPromise,\n      this.getClPromise,\n      this.getRlPromise\n    ).subscribe(listofrecords => {\n      this.clientPositionList = listofrecords[0] as any;\n      this.consultantList = listofrecords[1] as any;\n      this.recruiterList = listofrecords[2] as any;\n      this.callAfterFormReset();\n    });\n  }\n  private init() {\n    // this.spinner(false);\n    // this.cochGetAllPromise.subscribe(resp => {\n    //   this.consultantCallHistoryList = resp as Array<ConsultantCallHistoryModel>;\n    //   this.spinner(true);\n    //   // this.pagedConsultantList = resp as any;\n    //   // this.consultantListLength = this.consultantCallHistoryList.length;\n    //   // this.pageChange(this.page);\n    // });\n    this.model.properties = [];\n    this.page = 1;\n  }\n  public initialGetAll() {\n    let pageNumber = this.paginateConfig.currentPage - 1;\n    let temp = this.http.get(\n      this.urlConstants.CoCHGetAll + pageNumber + \"&pageSize=50&sortBy=id\"\n    );\n    temp.subscribe(resp => {\n      this.consultantCallHistoryList = resp as any;\n      //this.pageChange(this.page);\n      this.paginateConfig.totalItems = this.consultantCallHistoryList.noOfRecords;\n    });\n  }\n  public dblSetModel() {\n    this.readOnlyForm = \"U\";\n    this.enableButtonType = \"U\";\n    this.showAction = true;\n    this.action = null;\n  }\n  public setModel(id: number) {\n    this.spinner(false);\n    this.getConsultantById(id);\n    this.readOnlyForm = \"R\";\n    this.enableButtonType = \"E\";\n    this.showAction = true;\n    this.action = null;\n  }\n  private getConsultantById(id: number) {\n    const temp = this.http.get(this.urlConstants.CoCHGetById + id);\n    temp.subscribe(resp => {\n      this.model = this.mapToUpdateModel(resp);\n      this.spinner(true);\n    });\n  }\n  private mapToUpdateModel(response): ConsultantCallHistoryModel {\n    const temp = response;\n    let consultant = {\n      name: temp.fullname,\n      id: temp.id,\n      phone: temp.phone,\n      email: temp.email\n    };\n    this.consultantList.push(consultant);\n    this.model = temp;\n    this.model[\"consultantId\"] = temp.consultant.id;\n    this.model[\"calledBy\"] = temp.calledBy.id;\n    this.model[\"cpId\"] = temp.clientPosition ? temp.clientPosition.id : 0;\n    this.model.properties =\n      this.model.properties == null ? [] : this.model.properties;\n    return this.model;\n  }\n  public propertiesListIncrement(event, i: number) {\n    switch (event.id) {\n      case \"decrease\": {\n        this.model.properties.splice(i, 1);\n        break;\n      }\n      case \"increase\": {\n        if (this.model.properties == null) {\n          this.model.properties = [];\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else if (this.model.properties.length == 0) {\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else {\n          let propertyExist: boolean;\n          for (let i = 0; i < this.model.properties.length; i++) {\n            if (\n              this.model.properties[i].name == this.apName &&\n              this.model.properties[i].value == this.apValue\n            ) {\n              propertyExist = true;\n            } else {\n              propertyExist = false;\n            }\n          }\n          if (propertyExist) {\n            this.toastr.error(\n              this.properties.PROPERTY_EXIST,\n              this.properties.PROPERTIES\n            );\n          } else {\n            this.model.properties.push(<AdditionalPropertiesModel>{\n              name: this.apName,\n              value: this.apValue\n            });\n            this.apName = \"\";\n            this.apValue = \"\";\n          }\n        }\n        break;\n      }\n    }\n  }\n  public actions(value, trashContent, form) {\n    console.log(value);\n    switch (value) {\n      case \"Delete\": {\n        this.open(this.model.id, trashContent);\n        break;\n      }\n      case \"Edit\": {\n        this.enableFormEditable();\n        break;\n      }\n      case \"Close\": {\n        this.cancelForm(form);\n      }\n    }\n  }\n  public enter(event): void {\n    if (event.keyCode === 13) {\n      this.propertiesListIncrement(event.target, 0);\n    }\n  }\n  private enableFormEditable(): void {\n    this.readOnlyForm = \"U\";\n    this.enableButtonType = \"U\";\n  }\n  private formReset() {\n    this.model = <ConsultantCallHistoryModel>{ calledBy: 0, calledDate: \"\" };\n    this.model.properties = [];\n  }\n  public create(consultantCallHistory: NgForm): void {\n    this.isCreate = true;\n    this.spinner(false);\n    const temp = this.http.post(this.model, this.urlConstants.CoCHCreate);\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.CREATE, this.properties.CON_C_H);\n        this.init();\n        consultantCallHistory.resetForm();\n        this.formReset();\n        this.callAfterFormReset();\n        this.spinner(true);\n        this.paginateConfig.currentPage = 1;\n        this.initialGetAll();\n        this.isCreate = false;\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CON_C_H);\n        this.isCreate = false;\n        this.spinner(true);\n      }\n    );\n  }\n  public update(consultantCallHistory: NgForm) {\n    this.spinner(false);\n    const temp = this.http.update(this.model, this.urlConstants.CoCHUpdate);\n    temp.subscribe(\n      resp => {\n        consultantCallHistory.resetForm();\n        this.formReset();\n        this.toastr.success(this.properties.UPDATE, this.properties.CON_C_H);\n        this.init();\n        this.callAfterFormReset();\n        this.initialGetAll();\n        this.spinner(true);\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CON_C_H);\n        this.spinner(true);\n      }\n    );\n  }\n  public cancelForm(consultantCallHistory: NgForm) {\n    consultantCallHistory.resetForm();\n    this.formReset();\n    this.init();\n    this.callAfterFormReset();\n    this.readOnlyForm = \"\";\n    this.enableButtonType = \"\";\n    this.showAction = false;\n  }\n  public trash(): void {\n    this.spinner(false);\n    const temp = this.http.delete(\n      this.urlConstants.CoCHDelete + this.selectedRecrdToDel\n    );\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.DELETE, this.properties.CON_C_H);\n        this.init();\n        this.close();\n        this.formReset();\n        this.callAfterFormReset();\n        this.initialGetAll();\n        this.spinner(true);\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CON_C_H);\n        this.spinner(true);\n      }\n    );\n  }\n  private getRecruiterId() {\n    const temp = sessionStorage.getItem(\"username\");\n    this.recruiterList.forEach(rl => {\n      if (rl.email === temp) {\n        this.model.calledBy = rl.id;\n      }\n    });\n  }\n  private getTodaysDate() {\n    const today = new Date();\n    const dd = String(today.getDate()).padStart(2, \"0\");\n    const mm = String(today.getMonth() + 1).padStart(2, \"0\"); // January is 0!\n    const yyyy = today.getFullYear();\n    const temp = yyyy + \"-\" + mm + \"-\" + dd;\n    this.model.calledDate = temp;\n  }\n  private callAfterFormReset(): void {\n    this.getRecruiterId();\n    this.getTodaysDate();\n  }\n  /**\n   * @param\n   * 1) content consists the modal instance\n   * 2) Selected contains the code of selected row\n   */\n  public open(event: any, content) {\n    if (event) {\n      this.selectedRecrdToDel = event;\n    }\n    this.modalRef = this.modalService.open(content, {\n      size: \"lg\",\n      backdrop: \"static\"\n    });\n    this.modalRef.result.then(\n      result => {\n        this.closeResult = `Closed with: ${result}`;\n      },\n      reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      }\n    );\n  }\n  public close() {\n    this.modalRef.close();\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n  // public pageChange(event) {\n  //   const from = ((event - 1) * this.pageSize);\n  //   const lst = this.consultantCallHistoryList;\n  //   const uplst = lst.slice(from, from + this.pageSize);\n  //   this.pagedConsultantList = uplst;\n  // }\n  pageChanged(event) {\n    this.paginateConfig.currentPage = event;\n    this.initialGetAll();\n  }\n  public sort(key) {\n    this.key = key;\n    this.reverse = !this.reverse;\n  }\n  private spinner(isSpinner: boolean) {\n    this.listReturned = isSpinner;\n  }\n  public popupSearchConsultant() {\n    if (this.searchCon.length > 2) {\n      let request = this.http.get(this.urlConstants.CSearch + this.searchCon);\n      request.subscribe(resp => {\n        this.searchConsultantList = resp as any;\n      });\n    } else if (this.searchCon.length == 0) {\n      this.searchConsultantList = [];\n    }\n  }\n  public openSearchCon(value: any, content: any) {\n    if (value == \"more\") {\n      this.searchConsultantList = [];\n      this.open(this.model.id, content);\n    }\n  }\n  public setSearch(data) {\n    let temp = {\n      name: data.fullname,\n      id: data.id,\n      phone: data.phone,\n      email: data.email\n    };\n    this.consultantList.push(temp);\n    this.model.consultantId = data.id;\n    this.close();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\n\nimport { ConsultantCallHistoryRoutingModule } from \"./consultant-call-history-routing.module\";\nimport {\n  PageHeaderModule,\n  SharedPipesModule,\n  ActionListModule\n} from \"../../shared\";\nimport { ConsultantCallHistoryComponent } from \"./consultant-call-history.component\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\n\n@NgModule({\n  imports: [\n    NgbModule,\n    CommonModule,\n    NgxPaginationModule,\n    ConsultantCallHistoryRoutingModule,\n    FormsModule,\n    PageHeaderModule,\n    SharedPipesModule,\n    ActionListModule,\n    NgbModule\n  ],\n  declarations: [ConsultantCallHistoryComponent]\n})\nexport class ConsultantCallHistoryModule {}\n"],"sourceRoot":""}