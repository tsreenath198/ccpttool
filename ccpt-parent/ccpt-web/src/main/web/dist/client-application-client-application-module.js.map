{"version":3,"sources":["webpack:///./src/app/layout/client-application/client-application-routing.module.ts","webpack:///./src/app/layout/client-application/client-application.component.html","webpack:///./src/app/layout/client-application/client-application.component.scss","webpack:///./src/app/layout/client-application/client-application.component.ts","webpack:///./src/app/layout/client-application/client-application.module.ts"],"names":[],"mappings":"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","file":"client-application-client-application-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ClientApplicationComponent } from \"./client-application.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ClientApplicationComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientApplicationRoutingModule {}\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [icon1]=\\\"'fa-paper-plane'\\\" [heading1]=\\\"'Client Applications'\\\"></app-page-header>\\n  <ng-template #spinner>\\n    <div class=\\\"spinner padding-top justify-content-md-center\\\">\\n      <div class=\\\"bounce1\\\"></div>\\n      <div class=\\\"bounce2\\\"></div>\\n      <div class=\\\"bounce3\\\"></div>\\n    </div>\\n  </ng-template>\\n  <div class=\\\"row\\\" *ngIf=\\\"listReturned == true; else spinner\\\">\\n    <div class=\\\"col-md-7\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"currSearch.client\\\" name=\\\"sel1\\\"\\n                (change)=\\\"filterSearchCp()\\\">\\n                <option [ngValue]=\\\"0\\\" hidden selected> Client</option>\\n                <option [ngValue]=\\\"-1\\\">All</option>\\n                <option *ngFor=\\\"let cl of clientList\\\" [ngValue]=\\\"cl.id\\\">\\n                  {{ cl.name }}\\n                </option>\\n              </select>\\n            </div>\\n            <div class=\\\"col-md-4\\\" *ngIf=\\\"currSearch.client != 0 && currSearch.client != -1\\\">\\n              <select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"currSearch.clientPos\\\" name=\\\"sel2\\\"\\n                (change)=\\\"searchSelect()\\\">\\n                <option [ngValue]=\\\"0\\\" hidden selected> Client Position</option>\\n                <option [ngValue]=\\\"-1\\\">All</option>\\n                <option *ngFor=\\\"let cl of searchCp\\\" [ngValue]=\\\"cl.id\\\">\\n                  {{ cl.name }}\\n                </option>\\n              </select>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"currSearch.status\\\" name=\\\"sel3\\\"\\n                (change)=\\\"searchSelect()\\\">\\n                <option [ngValue]=\\\"null\\\" hidden selected>Status</option>\\n                <option [ngValue]=\\\"-1\\\">All</option>\\n                <option *ngFor=\\\"let st of searchStatusType\\\" [ngValue]=\\\"st\\\">\\n                  {{ st }}\\n                </option>\\n              </select>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <input class=\\\"form-control form-control-sm\\\" placeholder=\\\"Name/Email/Phone\\\" [(ngModel)]=\\\"currSearch.key\\\"\\n                (keyup)=\\\"searchSelect()\\\" name=\\\"sel4\\\" />\\n            </div>\\n          </div>\\n          <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <b class=\\\"pull-left\\\">Filter list count : {{ clientApplicationList?.list?.length }}</b>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <button *ngIf=\\\"isSerach\\\" type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm ml-3\\\"\\n                (click)=\\\"generateSearchParams()\\\">\\n                Search\\n              </button>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <button *ngIf=\\\"isSerach\\\" type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm ml-3\\\" (click)=\\\"cancelSearch()\\\">\\n                Cancel\\n              </button>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <span class=\\\"pull-right mr-3\\\" *ngIf=\\\"appIds.length > 0\\\">\\n                <div class=\\\"dropdown theme-dropdown clearfix\\\" placement=\\\"bottom-right\\\" ngbDropdown>\\n                  <i class=\\\"fa fa-bars\\\" ngbDropdownToggle></i>\\n                  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" ngbDropdownMenu>\\n                    <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"\\n                        mailSelectedApplications(\\n                          appIds,\\n                          sendMailContent,\\n                          'shortlistedCandidates'\\n                        )\\n                      \\\">Email Shortlisted Candidates</a>\\n                    <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"\\n                        mailSelectedApplications(\\n                          appIds,\\n                          sendMailContent,\\n                          'interviewSchedule'\\n                        )\\n                      \\\">Email Interview Schedule</a>\\n                    <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"\\n                        mailSelectedApplications(\\n                          appIds,\\n                          sendMailContent,\\n                          'statusVerification'\\n                        )\\n                      \\\">Status Verification Email</a>\\n                  </div>\\n                </div>\\n              </span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"table-responsive mt-2 table-wrapper-scroll-y my-custom-scrollbar\\\" [style.height.px]=\\\"screenHeight\\\">\\n        <table class=\\\"table table-sm table-hover table-striped\\\">\\n          <thead>\\n            <tr>\\n              <th width=\\\"15px\\\">\\n                <input class=\\\"check\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"selectAllCAFlag\\\"\\n                  *ngIf=\\\"currSearch.client === selectedCPToSearch\\\" (change)=\\\"onSelectApplication($event, 0, 'all')\\\" />\\n              </th>\\n              <th>\\n                Consultant\\n              </th>\\n              <th width=\\\"300\\\">\\n                Client Position\\n              </th>\\n              <th>\\n                Status\\n              </th>\\n              <th>\\n                Creator\\n              </th>\\n              <th>\\n                Sent On\\n              </th>\\n            </tr>\\n          </thead>\\n          <tbody class=\\\"overflow-ele-scroll\\\">\\n            <tr class=\\\"table-data-padding\\\" *ngFor=\\\"\\n                let cal of clientApplicationList.list\\n                  | paginate: paginateConfig;\\n                let i = index\\n              \\\">\\n              <td class=\\\"checkbox\\\" width=\\\"15px\\\">\\n                <label>\\n                  <input class=\\\"check\\\" type=\\\"checkbox\\\" [checked]=\\\"\\n                      currSearch.client === selectedCPToSearch &&\\n                      selectAllCAFlag !== undefined &&\\n                      selectAllCAFlag === true\\n                    \\\" (change)=\\\"onSelectApplication($event, cal.id, 'single')\\\" />\\n                </label>\\n              </td>\\n              <td container=\\\"body\\\" class=\\\"click-data\\\" [autoClose]=\\\"'outside'\\\" [ngbPopover]=\\\"popContent1\\\"\\n                [popoverTitle]=\\\"popTitle1\\\">\\n                {{ cal.consultant.fullname }}\\n              </td>\\n              <td width=\\\"300\\\" container=\\\"body\\\" class=\\\"click-data\\\" [autoClose]=\\\"'outside'\\\" [ngbPopover]=\\\"popContent2\\\"\\n                [popoverTitle]=\\\"popTitle2\\\">\\n                {{ cal.clientPosition.generatedCode }}\\n              </td>\\n\\n              <td (click)=\\\"setModel(cal.id)\\\">{{ cal.status.code }}</td>\\n              <td (click)=\\\"setModel(cal.id)\\\">{{ cal.creator.aliasName }}</td>\\n\\n              <td (click)=\\\"setModel(cal.id)\\\">{{ cal.sentOn }}</td>\\n\\n              <ng-template #popContent1>{{ cal.consultant.phone }}<br />{{\\n                  cal.consultant.email\\n                }}</ng-template>\\n              <ng-template #popTitle1><b>Consultant Details</b></ng-template>\\n              <ng-template #popContent2>{{ cal.clientPosition.client.phone }}<br />{{\\n                  cal.clientPosition.client.email\\n                }}<br />{{ cal.clientPosition.client.address }}\\n              </ng-template>\\n              <ng-template #popTitle2><b>Client Details</b></ng-template>\\n              <!-- <td width=\\\"140\\\">\\n                        <app-action [trashContent]=\\\"trashContent\\\" [uploadContent]=\\\"uploadContent\\\"\\n                        [downloadContent]=\\\"downloadContent\\\" [id]=\\\"cal.id\\\" [isTrash]=\\\"trash\\\" [isUpload]=\\\"upload\\\"\\n                        [isDownload]=\\\"download\\\" (upload)=\\\"open($event)\\\" (download)=\\\"open($event)\\\" (trash)=\\\"open($event)\\\">\\n                      </app-action>\\n                    </td> -->\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div class=\\\"col-12 justify-content-center mb-5\\\"\\n        *ngIf=\\\"clientApplicationList.noOfRecords > properties.ITEMSPERPAGE\\\">\\n        <pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-5\\\">\\n      <form name=\\\"form\\\" id=\\\"clientApplicationForm\\\" (ngSubmit)=\\\"f.form.valid && createAll(f, consultantCall)\\\" #f=\\\"ngForm\\\"\\n        novalidate>\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12 form-group\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">\\n              Add\\n            </button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\" (click)=\\\"update(f)\\\">\\n              Update\\n            </button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\"\\n                (click)=\\\"enableFormEditable()\\\">Edit</button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\"\\n              class=\\\"btn btn-secondary ml-3\\\">\\n              {{ enableButtonType != \\\"\\\" ? \\\"Close\\\" : \\\"Clear\\\" }}\\n            </button>\\n            <span class=\\\"pull-right\\\" *ngIf=\\\"showAction && readOnlyForm == 'U'\\\">\\n              <div class=\\\"dropdown theme-dropdown clearfix\\\" placement=\\\"bottom-right\\\" ngbDropdown>\\n                <!-- <button class=\\\"btn btn-secondary\\\" >\\n                        Dropdown\\n                    </button> -->\\n                <i class=\\\"fa fa-bars\\\" ngbDropdownToggle></i>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" ngbDropdownMenu>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"enableFormEditable()\\\">Edit</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"cancelForm(f)\\\">New</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"open(model.id, uploadContent)\\\">File Upload</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" *ngIf=\\\"model.status.description == 'Interview Scheduled'\\\" (click)=\\\"\\n                      getInterviewDetailsEmail(model.id, sendMailContent)\\n                    \\\">Email Interview Schedule</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" *ngIf=\\\"model.status.description == 'Interview Scheduled'\\\"\\n                    (click)=\\\"getInterviewDetailsSms(model.id, sendSMSContent)\\\">Sms Interview Schedule</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" *ngIf=\\\"model.status.description == 'Job Confirmed'\\\"\\n                    (click)=\\\"setPaymentModel(model, createPayment)\\\">Create Payment</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"open(model.id, createFAQs)\\\">FAQ's</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"open(model.id, trashContent)\\\">Delete</a>\\n                </div>\\n              </div>\\n            </span>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"readOnlyForm == 'U'; else notRead\\\">\\n          <table class=\\\"table table-borderless table-striped\\\">\\n            <tbody>\\n              <tr *ngIf=\\\"model?.clientPosition?.generatedCode\\\">\\n                <th width=\\\"200px\\\">Client Position</th>\\n                <td>{{ model.clientPosition.generatedCode }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model?.consultant?.fullname\\\">\\n                <th>Consultant</th>\\n                <td>{{ model.consultant.fullname }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model?.status?.description\\\">\\n                <th>Application Status</th>\\n                <td>{{ model.status.description }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model?.sentOn\\\">\\n                <th>Sent On</th>\\n                <td>{{ model.sentOn }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.interviewDate\\\">\\n                <th>Interview Date</th>\\n                <td>{{ model.interviewDate | date }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.interviewLocation\\\">\\n                <th>Interview Location</th>\\n                <td>{{ model.interviewLocation }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.interviewTime\\\">\\n                <th>Interview Time</th>\\n                <td>{{ model.interviewTime }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.interviewMode\\\">\\n                <th>Interview Mode</th>\\n                <td>{{ model.interviewMode }}</td>\\n              </tr>\\n              <tr *ngIf=\\\"model.description\\\">\\n                <th>Description</th>\\n                <td>\\n                  <p [innerHTML]=\\\"model.description\\\"></p>\\n                </td>\\n              </tr>\\n              <tr *ngFor=\\\"let ap of model.properties\\\">\\n                <th>{{ ap.name }}</th>\\n                <td>{{ ap.value }}</td>\\n              </tr>\\n              <tr>\\n                <th>CRF</th>\\n                <td>\\n                  <span *ngIf=\\\"isCRF; else noCRF\\\">\\n                    <span class=\\\"crf\\\" (click)=\\\"downloadFile(crfFile.id)\\\">{{ crfFile.fileName }}\\n                    </span>\\n                    <span class=\\\"pull-right\\\">\\n                      <i class=\\\"fa fa-trash\\\" (click)=\\\"deleteCRF(crfFile.id)\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                  </span>\\n                  <ng-template #noCRF>\\n                    <button class=\\\"btn btn-secondary btn-sm ml-2\\\" type=\\\"button\\\" (click)=\\\"uploadCRF(uploadContent)\\\">\\n                      Upload CRF\\n                    </button>\\n                  </ng-template>\\n                </td>\\n              </tr>\\n              <tr *ngFor=\\\"let fl of model.files\\\">\\n                <th>Files</th>\\n                <td class=\\\"crf\\\" (click)=\\\"downloadFile(fl.id)\\\">\\n                  {{ fl.fileName }}\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <ng-template #notRead>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Client Position<span class=\\\"required\\\">*</span></label>\\n                <span *ngIf=\\\"readOnlyForm == 'U' || readOnlyForm == ''\\\">\\n                  <select class=\\\"form-control\\\" name=\\\"cp\\\" [(ngModel)]=\\\"model.cpId\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': f.submitted && cp.invalid }\\\" #cp=\\\"ngModel\\\" required>\\n                    <option *ngFor=\\\"let cpl of clientPositionList\\\" [ngValue]=\\\"cpl.id\\\">{{ cpl.name }}\\n                    </option>\\n                  </select>\\n                  <div class=\\\"invalid-feedback\\\">\\n                    Client Position is mandatory\\n                  </div>\\n                </span>\\n                <span *ngIf=\\\"readOnlyForm == 'R'\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"generatedcode\\\" #generatedcode=\\\"ngModel\\\" readonly\\n                    [(ngModel)]=\\\"cpGeneratedCode\\\" />\\n                </span>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Consultant<span class=\\\"required\\\">*</span></label>\\n                <select class=\\\"form-control\\\" [disabled]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.consultantId\\\"\\n                  name=\\\"con\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && con.invalid }\\\" #con=\\\"ngModel\\\" (change)=\\\"\\n                    openSearchCon($event.target.value, searchConsultant)\\n                  \\\" required>\\n                  <option *ngFor=\\\"let cl of consultantList\\\" [ngValue]=\\\"cl.id\\\">{{\\n                    cl.name\\n                  }}</option>\\n                  <option value=\\\"more\\\">More</option>\\n                </select>\\n                <div class=\\\"invalid-feedback\\\">\\n                  Consultant is mandatory\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Client Application Status<span class=\\\"required\\\">*</span></label>\\n                <select class=\\\"form-control\\\" name=\\\"cas\\\" [disabled]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.caStatus\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': f.submitted && cas.invalid }\\\" #cas=\\\"ngModel\\\" required>\\n                  <option *ngFor=\\\"let casl of clientApplicationStatusList.list\\\" [ngValue]=\\\"casl.code\\\">\\n                    {{ casl.description }}\\n                  </option>\\n                </select>\\n                <div class=\\\"invalid-feedback\\\">\\n                  Client Apllication Status is mandatory\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Creator<span class=\\\"required\\\">*</span></label>\\n                <select class=\\\"form-control\\\" name=\\\"creator\\\" [disabled]=\\\"readOnlyForm == 'R'\\\"\\n                  [(ngModel)]=\\\"model.creatorId\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && cas.invalid }\\\" required>\\n                  <option *ngFor=\\\"let rl of recruiterList\\\" [ngValue]=\\\"rl.id\\\">\\n                    {{ rl.name }}\\n                  </option>\\n                </select>\\n                <div class=\\\"invalid-feedback\\\">\\n                  Client Apllication Status is mandatory\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <label>Sent On</label>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"senton\\\" #senton=\\\"ngModel\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                [(ngModel)]=\\\"model.sentOn\\\" max=\\\"9999-12-31\\\" />\\n              <div class=\\\"input-group-addon\\\">\\n                <span class=\\\"glyphicon glyphicon-th\\\"></span>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-6 mt-4\\\" *ngIf=\\\"readOnlyForm == ''\\\"></div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\" data-provide=\\\"datepicker\\\">\\n                <!-- <input class=\\\"mt-2\\\" type=\\\"checkbox\\\" (change)=\\\"checkInterviewSchedule()\\\"\\n                  [(ngModel)]=\\\"isInterviewScheduled\\\" name=\\\"interviewCheckbox\\\" />&nbsp;<small>Interview Scheduled</small> -->\\n                <div *ngIf=\\\"model.caStatus == 'Interview Scheduled'\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                      <label class=\\\"pt-2\\\">Interview Date<span class=\\\"required\\\">*</span></label>\\n                      <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"intDate\\\" #intDate=\\\"ngModel\\\"\\n                        [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.interviewDate\\\" [ngClass]=\\\"{\\n                          'is-invalid': f.submitted && intDate.invalid\\n                        }\\\" (change)=\\\"dateChange()\\\" required />\\n\\n                      <div class=\\\"invalid-feedback\\\">\\n                        Interview Date is mandatory\\n                      </div>\\n                      <div class=\\\"input-group-addon\\\">\\n                        <span class=\\\"glyphicon glyphicon-th\\\"></span>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                      <label class=\\\"pt-2\\\">Interview Time<span class=\\\"required\\\">*</span></label>\\n                      <input type=\\\"time\\\" class=\\\"form-control\\\" name=\\\"intTime\\\" #intTime=\\\"ngModel\\\"\\n                        [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.interviewTime\\\" [ngClass]=\\\"{\\n                          'is-invalid': f.submitted && intTime.invalid\\n                        }\\\" required />\\n                      <div class=\\\"invalid-feedback\\\">\\n                        Interview Time is mandatory\\n                      </div>\\n                      <div class=\\\"input-group-addon\\\">\\n                        <span class=\\\"glyphicon glyphicon-th\\\"></span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                      <label class=\\\"pt-2\\\">Interview Location<span class=\\\"required\\\">*</span></label>\\n                      <input class=\\\"form-control\\\" name=\\\"loc\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                        [(ngModel)]=\\\"model.interviewLocation\\\" required />\\n                      <div class=\\\"invalid-feedback\\\">\\n                        Interview Location is mandatory\\n                      </div>\\n                      <div class=\\\"input-group-addon\\\">\\n                        <span class=\\\"glyphicon glyphicon-th\\\"></span>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                      <label class=\\\"pt-2\\\">Interview Mode<span class=\\\"required\\\">*</span></label>\\n                      <select class=\\\"form-control\\\" name=\\\"mode\\\" [disabled]=\\\"readOnlyForm == 'R'\\\"\\n                        [(ngModel)]=\\\"model.interviewMode\\\" required>\\n                        <option *ngFor=\\\"let im of interviewMode\\\" [ngValue]=\\\"im.value\\\">{{ im.key }}</option>\\n                      </select>\\n                      <div class=\\\"invalid-feedback\\\">\\n                        Interview Mode is mandatory\\n                      </div>\\n                      <div class=\\\"input-group-addon\\\">\\n                        <span class=\\\"glyphicon glyphicon-th\\\"></span>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-md-6\\\">\\n                      <label class=\\\"pt-2\\\">Online Id</label>\\n                      <input class=\\\"form-control\\\" name=\\\"onlineId\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                        [(ngModel)]=\\\"model.onlineId\\\" />\\n                      <div class=\\\"input-group-addon\\\">\\n                        <span class=\\\"glyphicon glyphicon-th\\\"></span>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"model?.properties?.length > 0\\\">\\n              <div class=\\\"col-md-12 ml-3\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Additional Properties</label>\\n                  <div class=\\\"row\\\" *ngFor=\\\"let ap of model.properties; let i = index\\\">\\n                    <div class=\\\"col-md-5 pt-2\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"ap.name\\\" class=\\\"form-control\\\" name=\\\"addPropName{{ i }}\\\"\\n                        [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                    </div>\\n                    <div class=\\\"col-md-5 pt-2\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"ap.value\\\" class=\\\"form-control\\\" name=\\\"addPropValue{{ i }}\\\"\\n                        [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                    </div>\\n                    <div class=\\\"col-md-2 pt-2\\\">\\n                      <i class=\\\"fa fa-minus\\\" aria-hidden=\\\"true\\\" id=\\\"decrease\\\" *ngIf=\\\"enableButtonType != 'E'\\\"\\n                        (click)=\\\"propertiesListIncrement($event.target, i)\\\"></i>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Description</label>\\n                <angular-editor [(ngModel)]=\\\"model.description\\\" name=\\\"description\\\" [config]=\\\"config\\\"></angular-editor>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Additional Properties</label>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-5\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"apName\\\" class=\\\"form-control\\\" name=\\\"apName\\\"\\n                      [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                  </div>\\n                  <div class=\\\"col-md-5\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"apValue\\\" class=\\\"form-control\\\" name=\\\"apValue\\\"\\n                      [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\" id=\\\"increase\\\" *ngIf=\\\"enableButtonType != 'E'\\\"\\n                      (click)=\\\"propertiesListIncrement($event.target, 0)\\\"></i>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"model?.files?.length > 0\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"modal-body\\\">\\n                <table class=\\\"table\\\">\\n                  <thead>\\n                    <th>File Name</th>\\n                    <th>Description</th>\\n                    <th>Action</th>\\n                  </thead>\\n                  <tbody *ngFor=\\\"let fl of model.files\\\">\\n                    <td>{{ fl.fileName }}</td>\\n                    <td>{{ fl.Description }}</td>\\n                    <td>\\n                      <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"downloadFile(fl.id)\\\">\\n                        Download\\n                      </button>\\n                    </td>\\n                  </tbody>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n        </ng-template>\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12 form-group\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">\\n              Add\\n            </button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\" (click)=\\\"update(f)\\\">\\n              Update\\n            </button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\"\\n                  (click)=\\\"enableFormEditable()\\\">Edit</button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\">\\n              {{ enableButtonType != \\\"\\\" ? \\\"Close\\\" : \\\"Clear\\\" }}\\n            </button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #trashContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Client Application</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>Are you sure you want to delete ? &hellip;</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"trash()\\\">\\n      Ok\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">\\n      Close\\n    </button>\\n  </div>\\n</ng-template>\\n<ng-template #downloadContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Consultant {{ this.properties.DOWNLOAD }}</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\" *ngIf=\\\"model.files.length > 0; else emptyMsg\\\">\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <th>File Name</th>\\n        <th>Description</th>\\n        <th>Action</th>\\n      </thead>\\n      <tbody *ngFor=\\\"let fl of model.files\\\">\\n        <td>{{ fl.fileName }}</td>\\n        <td>{{ fl.Description }}</td>\\n        <td>\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" (click)=\\\"downloadFile(fl.id)\\\">\\n            Download\\n          </button>\\n        </td>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">\\n      Close\\n    </button>\\n  </div>\\n</ng-template>\\n<ng-template #emptyMsg>\\n  <h3 class=\\\"text-center\\\">No Files to download</h3>\\n</ng-template>\\n<ng-template #uploadContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">{{ urlConstants.UploadFilesMsg }}</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <input class=\\\"form-control\\\" type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n    <textarea class=\\\"form-control mt-3\\\" placeholder=\\\"comments\\\" cols=\\\"5\\\" rows=\\\"5\\\" [(ngModel)]=\\\"comments\\\"></textarea>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"uploadFiles()\\\">\\n      Upload\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">\\n      Close\\n    </button>\\n  </div>\\n</ng-template>\\n<ng-template #sendMailContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Send Mail</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <label>E-Mail</label>\\n    <!-- <ng-multiselect-dropdown [placeholder]=\\\"'choose numbers..'\\\" [data]=\\\"mailIdForMails\\\" [(ngModel)]=\\\"sendEmailModel.to\\\"\\n        [settings]=\\\"dropdownSettings\\\" (onSelect)=\\\"onItemSelect($event)\\\">\\n      </ng-multiselect-dropdown>  -->\\n\\n    <!-- \\n      (onSelectAll)=\\\"onSelectAll($event)\\\" -->\\n    <!-- <div class=\\\"form-group\\\">\\n          <select\\n            class=\\\"form-control \\\"\\n            [(ngModel)]=\\\"sendTo\\\"\\n            name=\\\"sel1\\\"\\n            (change)=\\\"onItemSelect(sendTo)\\\"\\n          >\\n            <option [ngValue]=\\\"null\\\" hidden selected>Choose action</option>\\n            <option *ngFor=\\\"let cl of consultantList\\\" [ngValue]=\\\"cl\\\">\\n              {{cl.name}}\\n            </option>\\n          </select>\\n        </div> -->\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"sendEmailModel.toEmails\\\" [readonly]=\\\"loggedInRole != 'Admin'\\\" class=\\\"form-control\\\"\\n      name=\\\"to\\\" />\\n    <div *ngIf=\\\"loggedInRole == 'Admin'\\\">\\n      <label>Cc</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"sendEmailModel.cc\\\" class=\\\"form-control\\\" name=\\\"cc\\\" />\\n    </div>\\n    <label>Bcc</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"sendEmailModel.bcc\\\" class=\\\"form-control\\\" name=\\\"bcc\\\" />\\n    <label>Subject</label>\\n    <input class=\\\"form-control\\\" [(ngModel)]=\\\"sendEmailModel.subject\\\" name=\\\"sub\\\" />\\n    <label>Message Body</label>\\n    <angular-editor [(ngModel)]=\\\"sendEmailModel.body\\\" name=\\\"body\\\" [config]=\\\"config\\\">\\n    </angular-editor>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"sendEmailReq()\\\">\\n      Send\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">\\n      Close\\n    </button>\\n  </div>\\n</ng-template>\\n<ng-template #createPayment let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Create Payment</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form name=\\\"form\\\" id=\\\"paymentsForm\\\" (ngSubmit)=\\\"paymentform.form.valid && createPaymentForm(paymentform)\\\"\\n      #paymentform=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Joining Date<span class=\\\"required\\\">*</span></label>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"joiningDate\\\" [(ngModel)]=\\\"paymentModel.joiningDate\\\"\\n              #joiningDate=\\\"ngModel\\\" required />\\n            <div class=\\\"invalid-feedback\\\">\\n              Joining date is mandatory\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Annual Package<span class=\\\"required\\\">*</span></label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"annualPackage\\\" [(ngModel)]=\\\"paymentModel.annualPackage\\\"\\n              #annualPackage=\\\"ngModel\\\" required />\\n            <div class=\\\"invalid-feedback\\\">\\n              Annual package is mandatory\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Contact Person Designation<span class=\\\"required\\\">*</span></label>\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"paymentModel.contactPersonDesignation\\\"\\n              name=\\\"contactPersonDesignation\\\" #contactPersonDesignation=\\\"ngModel\\\" required />\\n            <div class=\\\"invalid-feedback\\\">\\n              Contact person designation is mandatory\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\" *ngIf=\\\"setPaymentGst\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Company Gst<span class=\\\"required\\\">*</span></label>\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"paymentModel.gst\\\" name=\\\"gst\\\" #gst=\\\"ngModel\\\" required />\\n            <div class=\\\"invalid-feedback\\\">\\n              Gst is mandatory\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\" *ngIf=\\\"setPaymentWebsite\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Company Website<span class=\\\"required\\\">*</span></label>\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"paymentModel.gst\\\" name=\\\"website\\\" #website=\\\"ngModel\\\" required />\\n            <div class=\\\"invalid-feedback\\\">\\n              Website is mandatory\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-12\\\" *ngIf=\\\"setPaymentBA\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Billing Address<span class=\\\"required\\\">*</span></label>\\n            <textarea class=\\\"form-control\\\" rows=\\\"5\\\" [(ngModel)]=\\\"paymentModel.billingAddress\\\" name=\\\"billingAddress\\\"\\n              #billingAddress=\\\"ngModel\\\"></textarea>\\n\\n            <div class=\\\"invalid-feedback\\\">\\n              Biling Address is mandatory\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Description<span class=\\\"required\\\">*</span></label>\\n            <textarea class=\\\"form-control\\\" rows=\\\"5\\\" [(ngModel)]=\\\"paymentModel.description\\\" name=\\\"description\\\"\\n              #description=\\\"ngModel\\\"></textarea>\\n\\n            <div class=\\\"invalid-feedback\\\">\\n              Description is mandatory\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <hr />\\n      <div class=\\\"row pull-right\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-secondary ml-3\\\" [disabled]=\\\"creating\\\">\\n            {{ creating ? \\\"loading...\\\" : (\\\"Create\\\" | translate) }}\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary ml-3\\\" (click)=\\\"c('Close click')\\\">\\n            Close\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n<ng-template #sendSMSContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Send SMS</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <label>Number</label>\\n    <div class=\\\"form-group\\\">\\n      <input class=\\\"form-control\\\" [(ngModel)]=\\\"sendSmsModel.contactNumbers\\\" name=\\\"tonumbers\\\" #tonumbers=\\\"ngModel\\\" />\\n    </div>\\n    <label>Message Body</label>\\n    <textarea class=\\\"form-control\\\" cols=\\\"5\\\" rows=\\\"8\\\" [(ngModel)]=\\\"sendSmsModel.message\\\" name=\\\"body\\\"></textarea>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"sendSmsReq()\\\" [disabled]=\\\"creating\\\">\\n      {{ creating ? \\\"loading...\\\" : (\\\"Send\\\" | translate) }}\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">\\n      Close\\n    </button>\\n  </div>\\n</ng-template>\\n<ng-template #consultantCall let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">\\n      Consultant Call History<span class=\\\"required\\\">*</span>\\n    </h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <label>Description</label>\\n    <textarea class=\\\"form-control\\\" required cols=\\\"5\\\" rows=\\\"8\\\" [(ngModel)]=\\\"conchModel.description\\\"\\n      name=\\\"body\\\"></textarea>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"createConCallHistory()\\\" [disabled]=\\\"creating\\\">\\n      {{ creating ? \\\"loading...\\\" : (\\\"Send\\\" | translate) }}\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">\\n      Close\\n    </button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #createFAQs let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">\\n      Frequently Asked Questions<span class=\\\"required\\\">*</span>\\n    </h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-hover\\\">\\n          <tbody>\\n            <tr *ngFor=\\\"let cc of faqModel.questions; let i = index\\\">\\n              <td>\\n                <input class=\\\"form-control\\\" [(ngModel)]=\\\"faqModel.questions[i]\\\" name=\\\"fq{{ i }}\\\"\\n                  placeholder=\\\"question\\\" />\\n              </td>\\n              <td>\\n                <i class=\\\"fa fa-minus\\\" aria-hidden=\\\"true\\\" id=\\\"decrease\\\"\\n                  (click)=\\\"faqListIncrement($event.target, i)\\\"></i>\\n                <br />\\n                <i class=\\\"fa fa-plus\\\" *ngIf=\\\"i + 1 == faqModel.questions.length\\\" aria-hidden=\\\"true\\\" id=\\\"increase\\\"\\n                  (click)=\\\"faqListIncrement($event.target, i)\\\"></i>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"createFAQ()\\\" [disabled]=\\\"creating\\\">\\n      {{ creating ? \\\"loading...\\\" : (\\\"Create\\\" | translate) }}\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">\\n      Close\\n    </button>\\n  </div>\\n</ng-template>\\n<ng-template #searchConsultant let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Search Consultant</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"search...\\\" (keyup)=\\\"popupSearchConsultant()\\\"\\n          [(ngModel)]=\\\"searchCon\\\" />\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"searchConsultantList.length > 0; else noDataFound\\\" class=\\\"table-responsive tableFixHead mt-2\\\"\\n      id=\\\"viewTable\\\">\\n      <table class=\\\"table table-sm table-hover table-striped\\\">\\n        <thead>\\n          <tr>\\n            <th>\\n              Name\\n            </th>\\n            <th>\\n              Phone\\n            </th>\\n            <th>Email</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let cl of searchConsultantList; let i = index\\\" (click)=\\\"setSearch(cl)\\\">\\n            <td class=\\\"table-data-padding\\\">\\n              {{ cl.fullname }}\\n            </td>\\n            <td>\\n              {{ cl.phone }}\\n            </td>\\n            <td>\\n              {{ cl.email }}\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <ng-template #noDataFound>\\n      <span *ngIf=\\\"searchCon.length > 2\\\" class=\\\"text-center\\\">\\n        <h3>No Data Found</h3>\\n      </span>\\n    </ng-template>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">\\n      Close\\n    </button>\\n  </div>\\n</ng-template>\\n\"","module.exports = \".my-custom-scrollbar {\\n  position: relative;\\n  height: 31.5em;\\n  overflow: auto; }\\n\\n.table-wrapper-scroll-y {\\n  display: block; }\\n\\n.required {\\n  color: red; }\\n\\n.padding-top {\\n  padding-top: 60px; }\\n\\n.crf:hover {\\n  cursor: pointer;\\n  color: blue;\\n  text-decoration: underline; }\\n\\n.checkbox {\\n  padding-top: 15px; }\\n\\n.dropdown-toggle::after {\\n  display: none; }\\n\\n.drop-list:hover {\\n  cursor: pointer; }\\n\\n.table-striped tbody tr:nth-of-type(odd) {\\n  background-color: #c1c1c1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2NsaWVudC1hcHBsaWNhdGlvbi9EOlxcY2NwdHRvb2wuZ2l0XFx0cnVua1xcY2NwdC1wYXJlbnRcXGNjcHQtd2ViXFxzcmNcXG1haW5cXHdlYi9zcmNcXGFwcFxcbGF5b3V0XFxjbGllbnQtYXBwbGljYXRpb25cXGNsaWVudC1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFrQjtFQUNsQixlQUFjO0VBQ2QsZUFBYyxFQUNiOztBQUNEO0VBQ0EsZUFBYyxFQUNiOztBQUNEO0VBQ0csV0FBVSxFQUNaOztBQUNEO0VBQ0Msa0JBQWlCLEVBQ2xCOztBQUNEO0VBQ0MsZ0JBQWU7RUFDZixZQUFVO0VBQ1YsMkJBQTBCLEVBQzFCOztBQUNEO0VBQ0Usa0JBQWlCLEVBQ25COztBQUNEO0VBQ0UsY0FBWSxFQUNiOztBQUNEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBQ0Q7RUFFSSwwQkFBeUIsRUFDMUIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvY2xpZW50LWFwcGxpY2F0aW9uL2NsaWVudC1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5teS1jdXN0b20tc2Nyb2xsYmFyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgaGVpZ2h0OiAzMS41ZW07XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgfVxyXG4gIC50YWJsZS13cmFwcGVyLXNjcm9sbC15IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICB9XHJcbiAgLnJlcXVpcmVkIHtcclxuICAgICBjb2xvcjogcmVkOyBcclxuICB9XHJcbiAgLnBhZGRpbmctdG9we1xyXG4gICBwYWRkaW5nLXRvcDogNjBweDtcclxuIH1cclxuIC5jcmY6aG92ZXJ7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGNvbG9yOmJsdWU7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiB9XHJcbiAuY2hlY2tib3ggIHtcclxuICAgcGFkZGluZy10b3A6IDE1cHg7XHJcbn1cclxuLmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXJ7XHJcbiAgZGlzcGxheTpub25lO1xyXG59XHJcbi5kcm9wLWxpc3Q6aG92ZXJ7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi50YWJsZS1zdHJpcGVkIHtcclxuICB0Ym9keSB0cjpudGgtb2YtdHlwZShvZGQpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjMWMxYzE7XHJcbiAgfVxyXG59Il19 */\"","import { Component, OnInit, HostListener } from \"@angular/core\";\nimport { routerTransition } from \"../../router.animations\";\nimport { forkJoin } from \"rxjs\";\nimport { Properties } from \"../components/constants/properties\";\nimport { URLConstants } from \"../components/constants/url-constants\";\nimport {\n  ClientApplicationModel,\n  SendEmailModel,\n  SendSmsModel,\n  FAQModel\n} from \"./client-application.model\";\nimport { ClientApplicationStatusModel } from \"../client-application-status/client-application-status.model\";\nimport { NgForm } from \"@angular/forms\";\nimport {\n  NgbModalRef,\n  ModalDismissReasons,\n  NgbModal\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { AdditionalPropertiesModel } from \"src/app/additional-properties.model\";\nimport { AngularEditorConfig } from \"@kolkov/angular-editor\";\nimport { FileUploader, FileLikeObject } from \"ng2-file-upload\";\nimport { Router } from \"@angular/router\";\nimport { PaymentsModel } from \"../payments/payments.model\";\nimport {\n  StorageService,\n  HttpClientService,\n  ToastrCustomService\n} from \"../../shared/services\";\nimport { ConsultantCallHistoryModel } from \"../consultant-call-history/consultant-call-history.model\";\n\n@Component({\n  selector: \"app-client-application\",\n  templateUrl: \"./client-application.component.html\",\n  styleUrls: [\"./client-application.component.scss\"],\n  animations: [routerTransition()]\n})\nexport class ClientApplicationComponent implements OnInit {\n  public model: ClientApplicationModel = <ClientApplicationModel>{};\n  public faqModel: FAQModel = <FAQModel>{};\n  public conchModel: ConsultantCallHistoryModel = <\n    ConsultantCallHistoryModel\n    >{};\n  public paymentModel: PaymentsModel = <PaymentsModel>{};\n  public bodyMailModel: any = <any>{};\n  public clientApplicationList: any = [];\n  public pagedCAList: Array<any> = [];\n  public consultantList: Array<any> = [];\n  public clientList: Array<any> = [];\n  public clientApplicationStatusList: Array<any> = [];\n  public clientPositionList: Array<any> = [];\n  public recruiterList: Array<any> = [];\n  public urlConstants = new URLConstants();\n  public properties = new Properties();\n  public creating: boolean = false;\n  public interviewMode = [\n    { key: \"Face to Face\", value: \"F2F\" },\n    { key: \"Telephone\", value: \"TEL\" },\n    { key: \"Video Call\", value: \"VID\" }\n  ];\n  public searchStatusType = [\"Active\", \"Inactive\"];\n  public showAction: boolean = false;\n  public tabCheck: string;\n  public currSearch = { client: 0, clientPos: 0, status: \"Active\", key: null };\n  public searchCon = \"\";\n  public searchConsultantList: any = [];\n  public isSerach: boolean = false;\n  public searchCp: any;\n  public formButtonsToggler = true;\n  public editButtonToggler = true;\n  public showProperties = false;\n  private selectedRecrd = 0;\n  public closeResult = \"\";\n  private modalRef: NgbModalRef;\n  public screenHeight: any;\n  public readOnlyForm: any = \"\";\n  public enableButtonType: any = \"\";\n  public download = \"download\";\n  public upload = \"upload\";\n  public uploader: FileUploader = new FileUploader({});\n  public apName = \"\";\n  public apValue = \"\";\n  public loggedInRole: any = \"\";\n  public comments = \"\";\n  public isCreate: boolean = false;\n  public page: number;\n  public caListLength: number;\n  public pageSize: number = 20;\n  public cpGeneratedCode: string = \"\";\n  public fileList: Array<any> = [];\n  public appIds: Array<any> = [];\n  public listReturned: boolean;\n  public isCRF: boolean;\n  public refType = this.properties.CA;\n  public crfFile: any;\n  public setPaymentGst: boolean = false;\n  public setPaymentWebsite: boolean = false;\n  public setPaymentBA: boolean = false;\n  public caForm: NgForm;\n  public sendEmailModel: SendEmailModel = <SendEmailModel>{};\n  public sendSmsModel: SendSmsModel = <SendSmsModel>{};\n  public clientId: number;\n  public consultantId: number;\n  public keyword = \"name\";\n  public selectedCPToSearch: number = -1;\n  public config: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: \"15rem\",\n    minHeight: \"5rem\",\n    translate: \"no\"\n  };\n  public paginateConfig: any = {\n    itemsPerPage: 0,\n    currentPage: 0,\n    totalItems: 0\n  };\n  private getAllCAS = this.http.get(\n    this.urlConstants.CASGetAll + \"0&pageSize=20&sortBy=id\"\n  );\n  private getAllC = this.http.get(this.urlConstants.CDropdown);\n  private getAllCP = this.http.get(this.urlConstants.CPDropdown);\n  private getAllR = this.http.get(this.urlConstants.RDropdown);\n  private getAllCl = this.http.get(this.urlConstants.ClientDropdown);\n\n  constructor(\n    private http: HttpClientService,\n    private toastr: ToastrCustomService,\n    private modalService: NgbModal,\n    private router: Router,\n    private storageService: StorageService\n  ) {\n    this.getScreenSize();\n  }\n\n  @HostListener(\"window:resize\", [\"$event\"])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n  }\n\n  ngOnInit() {\n    /*Autheticate user with the token */\n    if (!this.http.isAuthenticate()) {\n      this.router.navigate([\"/login\"]);\n    }\n    this.loggedInRole = sessionStorage.getItem(\"role\");\n    this.getAllDropdowns();\n    this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n    this.init();\n    this.checkIsConsultantExist();\n    this.initialGetAll();\n    this.spinner(true);\n  }\n\n  private paginateConfigDeclare(itemsPerPage, currentPage, totalItems) {\n    (this.paginateConfig.itemsPerPage = itemsPerPage),\n      (this.paginateConfig.currentPage = currentPage),\n      (this.paginateConfig.totalItems = totalItems);\n  }\n\n  /**Checks if storage service have any saved consultants */\n  private checkIsConsultantExist() {\n    if (this.storageService.consultantId) {\n      this.model.consultantId = this.storageService.consultantId;\n    }\n  }\n\n  private init() {\n    this.model.properties = [];\n    this.faqModel.questions = [\"\"];\n    this.model.files = [];\n    this.model.caStatus = \"New\";\n    this.page = 1;\n    this.isCRF = false;\n  }\n\n  public initialGetAll() {\n    let pageNumber = this.paginateConfig.currentPage - 1;\n    let temp = this.http.get(\n      this.urlConstants.CAGetAllByStatus +\n      pageNumber +\n      \"&pageSize=50&sortBy=id&status=Active\"\n    );\n    temp.subscribe(resp => {\n      this.clientApplicationList = resp as any;\n      //this.pageChange(this.page);\n      this.paginateConfig.totalItems = this.clientApplicationList.noOfRecords;\n      this.tabCheck = \"Active CA\";\n    });\n  }\n\n  private getAllDropdowns() {\n    forkJoin(\n      this.getAllCAS,\n      this.getAllC,\n      this.getAllCP,\n      this.getAllR,\n      this.getAllCl\n      // forkJoin on works for observables that complete\n    ).subscribe(listofrecords => {\n      this.clientApplicationStatusList = listofrecords[0] as any;\n      this.consultantList = listofrecords[1] as any;\n      this.clientPositionList = listofrecords[2] as any;\n      this.recruiterList = listofrecords[3] as any;\n      this.clientList = listofrecords[4] as any;\n      this.getRecruiterId();\n      this.searchCp = this.clientPositionList;\n    });\n  }\n\n  private getRecruiterId() {\n    const temp = sessionStorage.getItem(\"username\");\n    this.recruiterList.forEach(rl => {\n      if (rl.email === temp) {\n        this.model.creatorId = rl.id;\n      }\n    });\n  }\n\n  private formReset() {\n    this.model = <ClientApplicationModel>{};\n    this.model.properties = [];\n    this.model.caStatus = \"New\";\n  }\n\n  public enableFormEditable(): void {\n    this.readOnlyForm = \"\";\n    this.enableButtonType = \"U\";\n  }\n\n  public setModel(id: number) {\n    this.getCAById(id);\n    this.readOnlyForm = \"U\";\n    this.enableButtonType = \"E\";\n    this.showAction = true;\n  }\n\n  private getCAById(id: number) {\n    this.spinner(false);\n    const temp = this.http.get(this.urlConstants.CAGetById + id);\n    temp.subscribe(resp => {\n      this.model = this.mapToUpdateModel(resp);\n      const crf = this.http.get(this.urlConstants.getCRF + this.model.id);\n      crf.subscribe(\n        resp => {\n          this.crfFile = resp as any;\n          if (this.crfFile != null) {\n            this.isCRF = true;\n          } else {\n            this.isCRF = false;\n          }\n          this.spinner(true);\n        },\n        err => {\n          this.toastr.error(err.error.error, err.message);\n          console.log(err);\n        }\n      );\n    });\n  }\n\n  selectEvent(item) {\n    // do something with selected item\n    this.model.cpId = item.id;\n    console.log(\"1\", item);\n  }\n\n  onChangeSearch(val: string) {\n    console.log(\"2\", val);\n    // fetch remote data from here\n    // And reassign the 'data' which is binded to 'data' property.\n  }\n\n  onFocused(e) {\n    console.log(\"3\", e);\n    // do something when input is focused\n  }\n\n  private mapToUpdateModel(response): ClientApplicationModel {\n    const temp = response;\n    let consultant = {\n      name: temp.consultant.fullname,\n      id: temp.consultant.id,\n      phone: temp.consultant.phone,\n      email: temp.consultant.email\n    };\n    this.consultantList.push(consultant);\n    this.model = temp;\n    this.cpGeneratedCode = temp.clientPosition.generatedCode;\n    this.model[\"cpId\"] = temp.clientPosition.id;\n    this.model[\"consultantId\"] = temp.consultant.id;\n    this.model[\"caStatus\"] = temp.status.code;\n    this.model[\"creatorId\"] = temp.creator.id;\n    return this.model;\n  }\n\n  public faqListIncrement(event, i: number) {\n    switch (event.id) {\n      case \"decrease\": {\n        this.faqModel.questions.splice(i, 1);\n        break;\n      }\n      case \"increase\": {\n        this.faqModel.questions.push(\"\");\n        break;\n      }\n    }\n  }\n\n  public propertiesListIncrement(event, i: number) {\n    switch (event.id) {\n      case \"decrease\": {\n        this.model.properties.splice(i, 1);\n        break;\n      }\n      case \"increase\": {\n        if (this.model.properties == null) {\n          this.model.properties = [];\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else if (this.model.properties.length == 0) {\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else {\n          let propertyExist: boolean;\n          for (let i = 0; i < this.model.properties.length; i++) {\n            if (\n              this.model.properties[i].name == this.apName &&\n              this.model.properties[i].value == this.apValue\n            ) {\n              propertyExist = true;\n            } else {\n              propertyExist = false;\n            }\n          }\n          if (propertyExist) {\n            this.toastr.error(\n              this.properties.PROPERTY_EXIST,\n              this.properties.PROPERTIES\n            );\n          } else {\n            this.model.properties.push(<AdditionalPropertiesModel>{\n              name: this.apName,\n              value: this.apValue\n            });\n            this.apName = \"\";\n            this.apValue = \"\";\n          }\n        }\n        break;\n      }\n    }\n  }\n\n  public onSelectApplication(event, id: number, type: string) {\n    if (event.target.checked) {\n      if (type === \"single\") this.appIds.push(id);\n      else this.appIds = this.clientApplicationList.list.map(r => r.id);\n    } else {\n      if (type === \"single\")\n        for (let i = 0; i < this.appIds.length; i++) {\n          if (id == this.appIds[i]) {\n            this.appIds.splice(i, 1);\n          }\n        }\n      else this.appIds = [];\n    }\n  }\n\n  private checkUser() {\n    if (this.loggedInRole != \"Admin\") {\n      this.http\n        .get(this.urlConstants.RLeadGetById + this.model.creatorId)\n        .subscribe(resp => {\n          let temp = resp as any;\n          this.sendEmailModel.toEmails = temp.toEmails;\n          this.sendEmailModel.bcc = \"\";\n        });\n    }\n  }\n\n  public mailSelectedApplications(Ids: any, sendMailContent: any, type: any) {\n    this.spinner(false);\n    let temp;\n    if (type == \"interviewSchedule\") {\n      temp = this.http.post(Ids, this.urlConstants.EmailGetShortlistCA);\n    } else if (type == \"shortlistedCandidates\") {\n      temp = this.http.post(Ids, this.urlConstants.EmailGetClientApps);\n    } else if (type == \"statusVerification\") {\n      temp = this.http.post(Ids, this.urlConstants.EmailGetReqUpdate);\n    }\n    temp.subscribe(\n      resp => {\n        this.sendEmailModel = resp as any;\n        this.spinner(true);\n        this.appIds = [];\n        this.selectedCPToSearch = -1;\n        this.checkUser();\n        this.open(0, sendMailContent);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CA);\n        this.spinner(true);\n        this.appIds = [];\n      }\n    );\n  }\n  public getInterviewDetailsEmail(id, sendMailContent) {\n    this.spinner(false);\n    const temp = this.http.post(id, this.urlConstants.GetInterviewDetailsEmail);\n    temp.subscribe(\n      resp => {\n        this.sendEmailModel = resp as any;\n        this.spinner(true);\n        this.appIds = [];\n        this.open(0, sendMailContent);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CA);\n        this.spinner(true);\n        this.appIds = [];\n      }\n    );\n  }\n  public getInterviewDetailsSms(id, sendSmsContent) {\n    this.spinner(false);\n    let reqId = { caId: id };\n    const temp = this.http.post(\n      reqId,\n      this.urlConstants.SMSTemplateBuildContent + \"ClientInterviewConfirmation\"\n    );\n    temp.subscribe(\n      resp => {\n        this.sendSmsModel = resp as any;\n        this.spinner(true);\n        this.open(0, sendSmsContent);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CA);\n        this.spinner(true);\n        this.appIds = [];\n      }\n    );\n  }\n  public createFAQ() {\n    this.creating = true;\n    const temp = this.http.post(\n      this.faqModel,\n      this.urlConstants.FAQSaveInCA +\n      this.model.id +\n      \"&userId=\" +\n      this.model.creatorId\n    );\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.CREATE, this.properties.FAQ);\n        this.faqModel = <FAQModel>{};\n        this.creating = false;\n        this.close();\n      },\n      err => {\n        this.creating = false;\n        this.toastr.error(err.error.message, this.properties.FAQ);\n      }\n    );\n  }\n  public sendSmsReq(): void {\n    this.spinner(false);\n    this.creating = true;\n    const temp = this.http.post(\n      this.sendSmsModel,\n      this.urlConstants.SMSTemplateSend\n    );\n    temp.subscribe(\n      resp => {\n        /**Check if any new consultants exists in emails to which send  */\n        this.close();\n        this.creating = false;\n        this.sendSmsModel = <SendSmsModel>{};\n        this.toastr.success(\"Sms sent successfully\", \"Sent!\");\n        this.spinner(true);\n      },\n      err => {\n        this.creating = false;\n        this.toastr.error(err.error.message, this.properties.CP);\n        this.spinner(true);\n      }\n    );\n  }\n  createAll(form, consultantCall) {\n    this.open(this.model.id, consultantCall);\n    this.caForm = form;\n  }\n  public createConCallHistory() {\n    this.creating = true;\n    this.conchModel.calledBy = this.model.creatorId;\n    this.conchModel.consultantId = this.model.consultantId;\n    this.conchModel.cpId = this.model.cpId;\n    this.conchModel.calledDate = this.setTodaysDate();\n    const temp = this.http.post(this.conchModel, this.urlConstants.CoCHCreate);\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.CREATE, this.properties.CON_C_H);\n        this.create(this.caForm);\n        this.conchModel = <ConsultantCallHistoryModel>{};\n        this.creating = false;\n        this.close();\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CON_C_H);\n        this.creating = false;\n      }\n    );\n  }\n  public create(clientApplicationForm: NgForm): void {\n    this.spinner(false);\n    this.isCreate = true;\n    const temp = this.http.post(this.model, this.urlConstants.CACreate);\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.CREATE, this.properties.CA);\n        this.init();\n        this.formReset();\n        clientApplicationForm.resetForm();\n        this.spinner(true);\n        this.isCreate = false;\n        this.paginateConfig.currentPage = 1;\n        this.initialGetAll();\n        this.getRecruiterId();\n        this.emptyStorage();\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CA);\n        this.isCreate = false;\n        this.spinner(true);\n      }\n    );\n  }\n  private emptyStorage() {\n    this.storageService.consultantId = 0;\n    this.model.consultantId = 0;\n  }\n  public dblSetModel(data) {\n    this.model = JSON.parse(JSON.stringify(data));\n    this.readOnlyForm = \"U\";\n    this.enableButtonType = \"U\";\n    this.showAction = true;\n  }\n  public update(clientApplicationForm: NgForm) {\n    this.spinner(false);\n    const temp = this.http.update(this.model, this.urlConstants.CAUpdate);\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.UPDATE, this.properties.CA);\n        this.formReset();\n        this.init();\n        clientApplicationForm.resetForm();\n        this.spinner(true);\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n        if (!this.isSerach) {\n          this.initialGetAll();\n        }\n        this.getRecruiterId();\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CA);\n        this.spinner(true);\n      }\n    );\n    this.formReset();\n  }\n\n  public cancelForm(clientApplicationForm: NgForm) {\n    clientApplicationForm.resetForm();\n    this.init();\n    this.formReset();\n    this.readOnlyForm = \"\";\n    this.enableButtonType = \"\";\n    this.showAction = false;\n    this.getRecruiterId();\n  }\n  public trash(): void {\n    this.spinner(false);\n    const temp = this.http.delete(\n      this.urlConstants.CADelete + this.selectedRecrd\n    );\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.DELETE, this.properties.CA);\n        this.init();\n        this.close();\n        this.formReset();\n        this.initialGetAll();\n        this.spinner(true);\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n        this.getRecruiterId();\n      },\n      err => {\n        if (err.status === 200) {\n          this.init();\n          this.close();\n          this.formReset();\n          return this.toastr.success(\n            this.properties.DELETE,\n            this.properties.CA\n          );\n        }\n        this.spinner(true);\n        this.toastr.error(err.error.message, this.properties.CA);\n      }\n    );\n  }\n  public sendEmailReq(): void {\n    this.spinner(false);\n    this.sendEmailModel.target = \"\";\n    const temp = this.http.post(\n      this.sendEmailModel,\n      this.urlConstants.EmailTemplateSend\n    );\n    temp.subscribe(\n      resp => {\n        this.sendEmailModel = <SendEmailModel>{};\n        this.toastr.success(\n          \"Email/Emails sent successfully\",\n          this.properties.CA\n        );\n        this.close();\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CA);\n        this.spinner(true);\n      }\n    );\n  }\n  /**\n   * @param\n   * 1) content consists the modal instance\n   * 2) Selected contains the code of selected row\n   */\n  public open(event: any, content) {\n    this.selectedRecrd = 0;\n    if (event) {\n      this.selectedRecrd = event;\n    }\n    this.modalRef = this.modalService.open(content, {\n      size: \"lg\",\n      backdrop: \"static\"\n    });\n    this.modalRef.result.then(\n      result => {\n        this.closeResult = `Closed with: ${result}`;\n      },\n      reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      }\n    );\n  }\n  /**Download file */\n  public downloadFile(id: number) {\n    this.http.get(this.urlConstants.FileDownload + id).subscribe(\n      resp => { },\n      err => {\n        if (err.status == 200) window.open(err.url);\n      }\n    );\n  }\n  public close() {\n    this.modalRef.close();\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n  /** Get Uploaded files */\n  private getFiles(): FileLikeObject[] {\n    return this.uploader.queue.map(fileItem => {\n      return fileItem.file;\n    });\n  }\n  public uploadCRF(content) {\n    this.refType = \"crf\";\n    this.open(this.model.id, content);\n  }\n  public deleteCRF(id) {\n    let temp = this.http\n      .delete(this.urlConstants.FileDelete + id)\n      .subscribe(resp => {\n        const crf = this.http.get(this.urlConstants.getCRF + this.model.id);\n        crf.subscribe(\n          resp => {\n            this.crfFile = resp as any;\n            if (this.crfFile != null) {\n              this.isCRF = true;\n            } else {\n              this.isCRF = false;\n            }\n          },\n          err => {\n            this.toastr.error(err.error.error, err.message);\n            console.log(err);\n          }\n        );\n      });\n  }\n  /** Upload documents of respective consultant */\n  public uploadFiles() {\n    const files = this.getFiles();\n    const formData = new FormData();\n    formData.append(\"file\", files[0].rawFile, files[0].name);\n    if ((this.refType = \"crf\")) {\n      const params = this.selectedRecrd + \"&comments=\" + this.comments;\n      this.http.upload(this.urlConstants.saveCRF + params, formData).subscribe(\n        resp => {\n          let temp: any = resp;\n          this.comments = \"\";\n          this.uploader = new FileUploader({});\n          this.toastr.success(temp.message, this.properties.CLIENT);\n          this.getCAById(this.model.id);\n          this.refType = this.properties.CA;\n          this.close();\n        },\n        err => {\n          this.toastr.error(err.error.message, this.properties.CLIENT);\n        }\n      );\n    } else {\n      const params =\n        \"refId=\" +\n        this.selectedRecrd +\n        \"&refType=\" +\n        this.refType +\n        \"&comments=\" +\n        this.comments;\n      this.http\n        .upload(this.urlConstants.FileUpload + params, formData)\n        .subscribe(\n          resp => {\n            let temp: any = resp;\n            this.toastr.success(temp.message, this.properties.CLIENT);\n            this.close();\n          },\n          err => {\n            this.toastr.error(err.error.message, this.properties.CLIENT);\n          }\n        );\n    }\n  }\n  // public pageChange(event) {\n  //   const from = (event - 1) * this.pageSize;\n  //   const lst = this.clientApplicationList;\n  //   const uplst = lst.slice(from, from + this.pageSize);\n  //   this.pagedCAList = uplst;\n  // }\n  private spinner(isSpinner: boolean) {\n    this.listReturned = isSpinner;\n  }\n  public setCP(value) {\n    this.model.cpId = value.id;\n  }\n  public checkInterviewSchedule() {\n    if (this.model.caStatus == \"Interview Scheduled\") {\n      this.model.interviewMode = this.properties.F2F;\n      this.clientPositionList.forEach(cl => {\n        if (cl.id == this.model.cpId) {\n          let location = cl.name.split(\"-\");\n          this.model.interviewLocation = location[2];\n        }\n      });\n    } else {\n      this.model.interviewDate = \"\";\n      this.model.interviewLocation = \"\";\n      this.model.interviewTime = \"\";\n      this.model.interviewMode = \"\";\n    }\n  }\n  public setPaymentModel(model, createPayment) {\n    this.paymentModel.invoiceDate = this.setTodaysDate();\n    this.paymentModel.companyName = model.clientPosition.client.name;\n    if (model.clientPosition.client.website != null) {\n      this.paymentModel.companyWebsite = model.clientPosition.client.website;\n      this.setPaymentWebsite = false;\n    } else {\n      this.setPaymentWebsite = true;\n    }\n    if (model.clientPosition.client.gst != null) {\n      this.paymentModel.companyGstNum = model.clientPosition.client.gst;\n      this.setPaymentGst = false;\n    } else {\n      this.setPaymentGst = true;\n    }\n    if (model.clientPosition.client.billingAddress != null) {\n      this.paymentModel.billingAddress =\n        model.clientPosition.client.billingAddress;\n      this.setPaymentBA = false;\n    } else {\n      this.setPaymentBA = true;\n    }\n    this.paymentModel.companyGstNum = model.clientPosition.client.gst;\n    this.paymentModel.creditPeriod = model.clientPosition.client.creditPeriod;\n    this.paymentModel.gauranteePeriod =\n      model.clientPosition.client.guaranteePeriod;\n    this.paymentModel.contactPerson =\n      model.clientPosition.client.contactPersonName;\n    this.paymentModel.contactPersonNum = model.clientPosition.client.phone;\n    this.paymentModel.contactPersonEmail = model.clientPosition.client.email;\n    this.paymentModel.designation = model.clientPosition.role;\n    this.paymentModel.serviceCharge = model.clientPosition.client.serviceCharge;\n    this.paymentModel.candidateName = model.consultant.fullname;\n    this.paymentModel.phone = this.properties.PHONE;\n    this.paymentModel.branchHeadName = this.properties.HEAD;\n    this.paymentModel.branchLocation = this.properties.LOCATION;\n    this.open(model.id, createPayment);\n  }\n  private setTodaysDate(): string {\n    const today = new Date();\n    const dd = String(today.getDate()).padStart(2, \"0\");\n    const mm = String(today.getMonth() + 1).padStart(2, \"0\"); // January is 0!\n    const yyyy = today.getFullYear();\n    const temp = yyyy + \"-\" + mm + \"-\" + dd;\n    return temp;\n  }\n  public createPaymentForm(form: NgForm) {\n    this.spinner(false);\n    const temp = this.http.post(\n      this.paymentModel,\n      this.urlConstants.PaymentCreate\n    );\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.CREATE, this.properties.PAYMENT);\n        form.resetForm();\n        this.close();\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.PAYMENT);\n        this.spinner(true);\n      }\n    );\n  }\n  public pageChanged(event) {\n    this.paginateConfig.currentPage = event;\n    this.initialGetAll();\n  }\n  public searchSelect() {\n    this.isSerach = true;\n  }\n  public filterSearchCp() {\n    this.isSerach = true;\n    this.searchCp = [];\n    this.currSearch.clientPos = 0;\n    let temp1: any = this.clientList.filter(\n      cl => cl.id == this.currSearch.client\n    );\n    if (this.currSearch.client != -1) {\n      this.clientPositionList.filter(cpl => {\n        let temp = cpl.name.split(/\\-/, 1);\n        if (temp1[0].name == temp) {\n          this.searchCp.push(cpl);\n        }\n      });\n    }\n  }\n\n  /**?clientId=1&clientPosId=2&status=1&searchKey=ff */\n\n  public generateSearchParams() {\n    let url = this.urlConstants.CASearch;\n    if (this.currSearch.client != 0 && this.currSearch.client != -1) {\n      let temp = \"clientId=\" + this.currSearch.client;\n      url = url + temp;\n    }\n    if (this.currSearch.clientPos != 0 && this.currSearch.clientPos != -1) {\n      let temp = \"&clientPosId=\" + this.currSearch.clientPos;\n      url = url + temp;\n    }\n    if (this.currSearch.status != null && this.currSearch.status != \"-1\") {\n      let temp = \"&statusType=\" + this.currSearch.status;\n      url = url + temp;\n    }\n    if (this.currSearch.key != null) {\n      let temp = \"&searchKey=\" + this.currSearch.key;\n      url = url + temp;\n    }\n    this.search(url);\n  }\n  public search(url) {\n    this.paginateConfig.currentPage = 1;\n    let temp = this.http.get(url);\n    temp.subscribe(resp => {\n      this.clientApplicationList.list = resp as any;\n      this.paginateConfigDeclare(\n        this.clientApplicationList.list.length,\n        1,\n        this.clientApplicationList.list.length\n      );\n      this.selectedCPToSearch = this.currSearch.client;\n    });\n  }\n  public cancelSearch() {\n    this.isSerach = false;\n    this.searchCp = this.clientPositionList;\n    this.currSearch = { client: 0, clientPos: 0, status: \"Active\", key: null };\n    this.initialGetAll();\n    this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n  }\n\n  public showActive() {\n    if (this.tabCheck != \"Active CA\") {\n      this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n    }\n    this.initialGetAll();\n  }\n\n  public showInactive() {\n    if (this.tabCheck != \"Inactive CA\") {\n      this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n    }\n    let pageNumber = this.paginateConfig.currentPage - 1;\n    let temp = this.http.get(\n      this.urlConstants.CAGetAllByStatus +\n      pageNumber +\n      \"&pageSize=50&sortBy=id&status=Inactive\"\n    );\n    temp.subscribe(resp => {\n      this.clientApplicationList = resp as any;\n      this.paginateConfig.totalItems = this.clientApplicationList.noOfRecords;\n      this.tabCheck = \"Inactive CA\";\n    });\n  }\n\n  public showAll() {\n    if (this.tabCheck != \"All CA\") {\n      this.paginateConfigDeclare(this.properties.ITEMSPERPAGE, 1, 0);\n    }\n    let pageNumber = this.paginateConfig.currentPage - 1;\n    let temp = this.http.get(\n      this.urlConstants.CAGetAll + pageNumber + \"&pageSize=50&sortBy=id\"\n    );\n    temp.subscribe(resp => {\n      this.clientApplicationList = resp as any;\n      this.paginateConfig.totalItems = this.clientApplicationList.noOfRecords;\n      this.tabCheck = \"All CA\";\n    });\n  }\n  public popupSearchConsultant() {\n    if (this.searchCon.length > 2) {\n      let request = this.http.get(this.urlConstants.CSearch + this.searchCon);\n      request.subscribe(resp => {\n        this.searchConsultantList = resp as any;\n      });\n    } else if (this.searchCon.length == 0) {\n      this.searchConsultantList = [];\n    }\n  }\n  public openSearchCon(value: any, content: any) {\n    if (value == \"more\") {\n      this.searchConsultantList = [];\n      this.open(this.model.id, content);\n    }\n  }\n  public setSearch(data) {\n    let temp = {\n      name: data.fullname,\n      id: data.id,\n      phone: data.phone,\n      email: data.email\n    };\n    this.consultantList.push(temp);\n    this.model.consultantId = data.id;\n    this.close();\n  }\n  public dateChange() {\n    this.model.interviewMode = \" \";\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport {\n  PageHeaderModule,\n  SharedPipesModule,\n  ActionListModule\n} from \"../../shared\";\nimport { ClientApplicationComponent } from \"./client-application.component\";\nimport { ClientApplicationRoutingModule } from \"./client-application-routing.module\";\nimport { NgbModule, NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AngularEditorModule } from \"@kolkov/angular-editor\";\nimport { FileUploadModule } from \"ng2-file-upload\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\nimport { TranslateModule } from \"@ngx-translate/core\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ClientApplicationRoutingModule,\n    NgxPaginationModule,\n    FormsModule,\n    PageHeaderModule,\n    SharedPipesModule,\n    NgbModule,\n    ActionListModule,\n    AngularEditorModule,\n    FileUploadModule,\n    NgbModule\n  ],\n  declarations: [ClientApplicationComponent],\n  providers: [NgbActiveModal]\n})\nexport class ClientApplicationModule {}\n"],"sourceRoot":""}