{"version":3,"sources":["webpack:///./src/app/layout/client-call-history/client-call-history-routing.module.ts","webpack:///./src/app/layout/client-call-history/client-call-history.component.html","webpack:///./src/app/layout/client-call-history/client-call-history.component.scss","webpack:///./src/app/layout/client-call-history/client-call-history.component.ts","webpack:///./src/app/layout/client-call-history/client-call-history.module.ts"],"names":[],"mappings":"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","file":"client-call-history-client-call-history-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ClientCallHistoryComponent } from \"./client-call-history.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ClientCallHistoryComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientCallHistoryRoutingModule {}\n","module.exports = \"<div [@routerTransition]>\\n  <!-- <span class=\\\"fa fa-fw fa-building\\\"></span><span class=\\\"fa fa-fw fa-phone\\\"></span> -->\\n  <app-page-header [icon2]=\\\"'fa-building'\\\" [icon1]=\\\"'fa-phone'\\\" [heading1]=\\\"'Calls'\\\" [heading2]=\\\"'Client Call History'\\\">\\n  </app-page-header>\\n  <ng-template #spinner>\\n    <div class=\\\"spinner padding-top justify-content-md-center\\\">\\n      <div class=\\\"bounce1\\\"></div>\\n      <div class=\\\"bounce2\\\"></div>\\n      <div class=\\\"bounce3\\\"></div>\\n    </div>\\n  </ng-template>\\n  <div class=\\\"row\\\" *ngIf=\\\"listReturned == true; else spinner\\\">\\n    <div class=\\\"col-md-7\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\"> <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"search...\\\"\\n            [(ngModel)]=\\\"currSearchTxt\\\" /></div>\\n      </div>\\n      <div class=\\\"table-responsive mt-2 table-wrapper-scroll-y my-custom-scrollbar\\\" [style.height.px]=\\\"screenHeight\\\">\\n        <div *ngIf=\\\"clientCallHistoryList; else tableElse\\\">\\n          <table class=\\\"table table-hover table-striped\\\">\\n            <thead>\\n              <tr>\\n                <th>\\n                  Caller\\n                </th>\\n                <th>\\n                  Client Pos\\n                </th>\\n                <th width=\\\"150\\\">\\n                  Called Date\\n                </th>\\n                <!-- <th>\\n                        <span class=\\\"pull-right\\\">Action</span>\\n                    </th> -->\\n              </tr>\\n            </thead>\\n            <tbody class=\\\"overflow-ele-scroll\\\">\\n              <tr *ngFor=\\\"let cchl of clientCallHistoryList.list | paginate: paginateConfig ; let i = index\\\"\\n                (click)=\\\"setModel(cchl.id)\\\">\\n                <td>\\n                  {{cchl.calledBy.fullname}}\\n                </td>\\n                <td>\\n                  {{cchl.clientPosition.generatedCode}}\\n                </td>\\n                <td>\\n                  {{cchl.calledDate}}\\n                </td>\\n                <!-- <td width=\\\"100\\\">\\n                  <app-action [trashContent]=\\\"trashContent\\\" [id]=\\\"cchl.id\\\" [isTrash]=\\\"trash\\\" (trash)=\\\"open($event)\\\"></app-action>\\n                </td> -->\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <div class=\\\"col-12 justify-content-center mb-5\\\"\\n          *ngIf=\\\"clientCallHistoryList.noOfRecords > properties.ITEMSPERPAGE\\\">\\n          <pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls>\\n        </div>\\n        <ng-template #tableElse>\\n          <h3>Client History is empty</h3>\\n        </ng-template>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-5\\\">\\n      <form name=\\\"form\\\" id=\\\"clientCallHistoryForm\\\" (ngSubmit)=\\\"f.form.valid&&create(f)\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"row text-center\\\" *ngIf=\\\"loggedInRole != 'User'\\\">\\n          <div class=\\\"form-group col-md-12\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">Add</button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\"\\n              (click)=\\\"update(f)\\\">Update</button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\"\\n                (click)=\\\"enableFormEditable()\\\">Edit</button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" *ngIf=\\\"enableButtonType == ''||enableButtonType == 'U'\\\"\\n              class=\\\"btn btn-secondary ml-3\\\">{{enableButtonType != '' ? 'Close' : 'Clear'}}</button>\\n            <span class=\\\"pull-right\\\" *ngIf=\\\"showAction && readOnlyForm == 'R'\\\">\\n              <div class=\\\"dropdown theme-dropdown clearfix\\\" placement=\\\"bottom-right\\\" ngbDropdown>\\n                <!-- <button class=\\\"btn btn-secondary\\\" >\\n                        Dropdown\\n                    </button> -->\\n                <i class=\\\"fa fa-bars\\\" ngbDropdownToggle></i>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" ngbDropdownMenu>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"enableFormEditable()\\\">Edit</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"cancelForm(f)\\\">New</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"open(model.id, trashContent)\\\">Delete</a>\\n                </div>\\n              </div>\\n            </span>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Called By<span class=\\\"required\\\">*</span></label>\\n              <select class=\\\"form-control\\\" [disabled]=\\\"readOnlyForm == 'R'\\\" name=\\\"cn\\\" [(ngModel)]=\\\"model.calledBy\\\"\\n                [ngClass]=\\\"{'is-invalid': f.submitted && cn.invalid}\\\" #cn=\\\"ngModel\\\" required>\\n                <option *ngFor=\\\"let rl of recruiterList\\\" [ngValue]=\\\"rl.id\\\">\\n                  {{rl.name}}\\n                </option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\">\\n                Called By is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Called Date <span class=\\\"required\\\">*</span></label>\\n              <input class=\\\"form-control\\\" type=\\\"date\\\" name=\\\"calledDate\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                max=\\\"9999-12-31\\\" placeholder=\\\"Called Date\\\" [(ngModel)]=\\\"model.calledDate\\\" required>\\n            </div>\\n            <div class=\\\"invalid-feedback\\\">\\n              Called Date is mandatory\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <hr>\\n          </div>\\n\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Client Position<span class=\\\"required\\\">*</span></label>\\n\\n              <select class=\\\"form-control\\\" [disabled]=\\\"readOnlyForm == 'R'\\\" name=\\\"cp\\\" [(ngModel)]=\\\"model.cpId\\\"\\n                [ngClass]=\\\"{'is-invalid': f.submitted && cp.invalid}\\\" #cp=\\\"ngModel\\\" required>\\n                <option *ngFor=\\\"let cpl of clientPositionList\\\" [ngValue]=\\\"cpl.id\\\">\\n                  {{cpl.name}}\\n                </option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\">\\n                Client Position is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\" *ngIf=\\\"model.properties.length > 0\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Additional Properties</label>\\n              <div class=\\\"row\\\" *ngFor=\\\"let ap of model.properties; let i = index\\\">\\n                <div class=\\\"col-md-5\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"ap.name\\\" class=\\\"form-control\\\" name=\\\"addPropName{{ i }}\\\"\\n                    [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                </div>\\n                <div class=\\\"col-md-5\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"ap.value\\\" class=\\\"form-control\\\" name=\\\"addPropValue{{ i }}\\\"\\n                    [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <i class=\\\"fa fa-minus\\\" aria-hidden=\\\"true\\\" id=\\\"decrease\\\" *ngIf=\\\"enableButtonType != 'E'\\\"\\n                    (click)=\\\"propertiesListIncrement($event.target, i)\\\"></i>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Notes<span class=\\\"required\\\">*</span></label>\\n              <textarea class=\\\"form-control\\\" name=\\\"note\\\" cols=\\\"10\\\" rows=\\\"10\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                [(ngModel)]=\\\"model.description\\\" [ngClass]=\\\"{'is-invalid': f.submitted && note.invalid}\\\" #note=\\\"ngModel\\\"\\n                required></textarea>\\n              <div class=\\\"invalid-feedback\\\">\\n                Notes is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Additional Properties</label>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-5\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"apName\\\" class=\\\"form-control\\\" name=\\\"apName\\\"\\n                    [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                </div>\\n                <div class=\\\"col-md-5\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"apValue\\\" class=\\\"form-control\\\" name=\\\"apValue\\\"\\n                    [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\" id=\\\"increase\\\" *ngIf=\\\"enableButtonType != 'E'\\\"\\n                    (click)=\\\"propertiesListIncrement($event.target, i)\\\"></i>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row text-center\\\" *ngIf=\\\"loggedInRole != 'User'\\\">\\n          <div class=\\\"form-group col-md-12\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">Add</button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\" class=\\\"btn btn-secondary ml-2\\\"\\n              (click)=\\\"update(f)\\\">Update</button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\"\\n                  (click)=\\\"enableFormEditable()\\\">Edit</button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\"\\n              class=\\\"btn btn-secondary ml-3\\\">{{enableButtonType != '' ? 'Close' : 'Clear'}}</button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<ng-template #trashContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Client Call History</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>Are you sure you want to delete ? &hellip;</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"trash()\\\">Ok</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n\"","module.exports = \".my-custom-scrollbar {\\n  position: relative;\\n  height: 31.5em;\\n  overflow: auto; }\\n\\n.table-wrapper-scroll-y {\\n  display: block; }\\n\\n.required {\\n  color: red; }\\n\\n.required {\\n  color: red; }\\n\\n.padding-top {\\n  padding-top: 60px; }\\n\\n.dropdown-toggle::after {\\n  display: none; }\\n\\n.drop-list:hover {\\n  cursor: pointer; }\\n\\n.table-striped tbody tr:nth-of-type(odd) {\\n  background-color: #c1c1c1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2NsaWVudC1jYWxsLWhpc3RvcnkvRDpcXGNjcHR0b29sLmdpdFxcdHJ1bmtcXGNjcHQtcGFyZW50XFxjY3B0LXdlYlxcc3JjXFxtYWluXFx3ZWIvc3JjXFxhcHBcXGxheW91dFxcY2xpZW50LWNhbGwtaGlzdG9yeVxcY2xpZW50LWNhbGwtaGlzdG9yeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFrQjtFQUNsQixlQUFjO0VBQ2QsZUFBYyxFQUNiOztBQUNEO0VBQ0EsZUFBYyxFQUNiOztBQUNIO0VBQ0UsV0FBVSxFQUNYOztBQUNDO0VBQ0UsV0FBVSxFQUNaOztBQUNEO0VBQ0Msa0JBQWlCLEVBQ2xCOztBQUNEO0VBQ0UsY0FBWSxFQUNiOztBQUNEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBQ0Q7RUFFSSwwQkFBeUIsRUFDMUIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvY2xpZW50LWNhbGwtaGlzdG9yeS9jbGllbnQtY2FsbC1oaXN0b3J5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm15LWN1c3RvbS1zY3JvbGxiYXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBoZWlnaHQ6IDMxLjVlbTtcclxuICBvdmVyZmxvdzogYXV0bztcclxuICB9XHJcbiAgLnRhYmxlLXdyYXBwZXItc2Nyb2xsLXkge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxuLnJlcXVpcmVkIHtcclxuICBjb2xvcjogcmVkOyBcclxufVxyXG4gIC5yZXF1aXJlZCB7XHJcbiAgICBjb2xvcjogcmVkOyBcclxuIH0gIFxyXG4gLnBhZGRpbmctdG9we1xyXG4gIHBhZGRpbmctdG9wOiA2MHB4O1xyXG59XHJcbi5kcm9wZG93bi10b2dnbGU6OmFmdGVye1xyXG4gIGRpc3BsYXk6bm9uZTtcclxufVxyXG4uZHJvcC1saXN0OmhvdmVye1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4udGFibGUtc3RyaXBlZCB7XHJcbiAgdGJvZHkgdHI6bnRoLW9mLXR5cGUob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzFjMWMxO1xyXG4gIH1cclxufSJdfQ== */\"","import { Component, OnInit, HostListener } from \"@angular/core\";\nimport { routerTransition } from \"../../router.animations\";\nimport {\n  NgbModal,\n  ModalDismissReasons,\n  NgbModalRef\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { ClientCallHistoryModel } from \"./client-call-history.model\";\nimport { HttpClientService } from \"src/app/shared/services/http.service\";\nimport { ToastrCustomService } from \"src/app/shared/services/toastr.service\";\nimport { URLConstants } from \"../components/constants/url-constants\";\nimport { Properties } from \"../components/constants/properties\";\nimport { NgForm } from \"@angular/forms\";\nimport { AdditionalPropertiesModel } from \"src/app/additional-properties.model\";\nimport { forkJoin } from \"rxjs\";\nimport { ActionsList } from \"../consultant-call-history/consultant-call-history.model\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-client-call-history\",\n  templateUrl: \"./client-call-history.component.html\",\n  styleUrls: [\"./client-call-history.component.scss\"],\n  animations: [routerTransition()]\n})\nexport class ClientCallHistoryComponent implements OnInit {\n  public model: ClientCallHistoryModel = <ClientCallHistoryModel>{};\n  public clientCallHistoryList: any = [];\n  public clientPositionList: Array<any> = [];\n  public clientList: Array<any> = [];\n  public recruiterList: Array<any> = [];\n  public formButtonsToggler = true;\n  public editButtonToggler = true;\n  public urlConstants = new URLConstants();\n  public properties = new Properties();\n  public showAction: boolean = false;\n  public actionsList = new ActionsList();\n  public action: string;\n  private selectedRecrdToDel = 0;\n  public closeResult = \"\";\n  private modalRef: NgbModalRef;\n  public screenHeight: any;\n  public currSearchTxt: string;\n  public readOnlyForm = \"\";\n  public enableButtonType = \"\";\n  public apName = \"\";\n  public apValue = \"\";\n  public loggedInRole = \"\";\n  public isCreate: boolean = false;\n  public page: number;\n  public consultantListLength: number;\n  public pageSize: number = 10;\n  public listReturned: boolean;\n  public getCplPromise = this.http.get(this.urlConstants.CPDropdown);\n  public getClPromise = this.http.get(this.urlConstants.ClientGetAll);\n  public getRlPromise = this.http.get(this.urlConstants.RDropdown);\n  //public cchGetAllPromise = this.http.get(this.urlConstants.CCHGetAll);\n  public paginateConfig: any = {\n    itemsPerPage: this.properties.ITEMSPERPAGE,\n    currentPage: 1,\n    totalItems: 0\n  };\n  constructor(\n    private http: HttpClientService,\n    private toastr: ToastrCustomService,\n    private modalService: NgbModal,\n    private router: Router\n  ) {\n    this.getScreenSize();\n  }\n  @HostListener(\"window:resize\", [\"$event\"])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n  }\n\n  ngOnInit() {\n    /*Autheticate user with the token */\n    if (!this.http.isAuthenticate()) {\n      this.router.navigate([\"/login\"]);\n    }\n    this.joins();\n    this.init();\n    this.loggedInRole = sessionStorage.getItem(\"role\");\n  }\n  private joins() {\n    forkJoin(\n      this.getCplPromise,\n      this.getClPromise,\n      this.getRlPromise\n    ).subscribe(listofrecords => {\n      this.clientPositionList = listofrecords[0] as any;\n      this.clientList = listofrecords[1] as any;\n      this.recruiterList = listofrecords[2] as any;\n      this.getRecruiterId();\n      this.getTodaysDate();\n      this.initialGetAll();\n      this.spinner(true);\n    });\n  }\n  private init() {\n    // this.cchGetAllPromise.subscribe(resp => {\n    //   this.clientCallHistoryList = resp as Array<ClientCallHistoryModel>;\n    //   this.spinner(true);\n    // });\n    this.model.properties = [];\n  }\n  public initialGetAll() {\n    let pageNumber = this.paginateConfig.currentPage - 1;\n    let temp = this.http.get(\n      this.urlConstants.CCHGetAll + pageNumber + \"&pageSize=50&sortBy=id\"\n    );\n    temp.subscribe(resp => {\n      this.clientCallHistoryList = resp as any;\n      //this.pageChange(this.page);\n      this.paginateConfig.totalItems = this.clientCallHistoryList.noOfRecords;\n    });\n  }\n  private getRecruiterId() {\n    const temp = sessionStorage.getItem(\"username\");\n    this.recruiterList.forEach(rl => {\n      if (rl.email === temp) {\n        this.model.calledBy = rl.id;\n      }\n      if (this.model.properties == null) {\n        this.model.properties = [];\n      }\n    });\n  }\n\n  private getTodaysDate() {\n    const today = new Date();\n    const dd = String(today.getDate()).padStart(2, \"0\");\n    const mm = String(today.getMonth() + 1).padStart(2, \"0\"); // January is 0!\n    const yyyy = today.getFullYear();\n    const temp = yyyy + \"-\" + mm + \"-\" + dd;\n    this.model.calledDate = temp;\n  }\n  public dblSetModel() {\n    this.readOnlyForm = \"U\";\n    this.enableButtonType = \"U\";\n    this.showAction = true;\n    this.action = null;\n  }\n  public setModel(id: number) {\n    this.spinner(false);\n    this.getCCHById(id);\n    this.readOnlyForm = \"R\";\n    this.enableButtonType = \"E\";\n    this.showAction = true;\n    this.action = null;\n  }\n  private getCCHById(id: number) {\n    const temp = this.http.get(this.urlConstants.CCHGetById + id);\n    temp.subscribe(resp => {\n      this.model = this.mapToUpdateModel(resp);\n      this.spinner(true);\n    });\n  }\n  private mapToUpdateModel(response): ClientCallHistoryModel {\n    const temp = response;\n    this.model = temp;\n    this.model[\"cpId\"] = temp.clientPosition.id;\n    this.model[\"calledBy\"] = temp.calledBy.id;\n    return this.model;\n  }\n  public propertiesListIncrement(event, i: number) {\n    switch (event.id) {\n      case \"decrease\": {\n        this.model.properties.splice(i, 1);\n        break;\n      }\n      case \"increase\": {\n        if (this.model.properties == null) {\n          this.model.properties = [];\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else if (this.model.properties.length == 0) {\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else {\n          let propertyExist: boolean;\n          for (let i = 0; i < this.model.properties.length; i++) {\n            if (\n              this.model.properties[i].name == this.apName &&\n              this.model.properties[i].value == this.apValue\n            ) {\n              propertyExist = true;\n            } else {\n              propertyExist = false;\n            }\n          }\n          if (propertyExist) {\n            this.toastr.error(\n              this.properties.PROPERTY_EXIST,\n              this.properties.PROPERTIES\n            );\n          } else {\n            this.model.properties.push(<AdditionalPropertiesModel>{\n              name: this.apName,\n              value: this.apValue\n            });\n            this.apName = \"\";\n            this.apValue = \"\";\n          }\n        }\n        break;\n      }\n    }\n  }\n  public actions(value, trashContent, form) {\n    console.log(value);\n    switch (value) {\n      case \"Delete\": {\n        this.open(this.model.id, trashContent);\n        break;\n      }\n      case \"Edit\": {\n        this.enableFormEditable();\n        break;\n      }\n      case \"Close\": {\n        this.cancelForm(form);\n      }\n    }\n  }\n  private enableFormEditable(): void {\n    this.readOnlyForm = \"U\";\n    this.enableButtonType = \"U\";\n  }\n  private formReset() {\n    this.model = <ClientCallHistoryModel>{};\n    this.model.properties = [];\n    this.getRecruiterId();\n    this.getTodaysDate();\n  }\n  public create(clientCallHistoryForm: NgForm): void {\n    this.isCreate = true;\n    this.spinner(false);\n    const temp = this.http.post(this.model, this.urlConstants.CCHCreate);\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.CREATE, this.properties.CLI_C_H);\n        this.init();\n        this.getRecruiterId();\n        this.isCreate = false;\n        this.paginateConfig.currentPage = 1;\n        this.initialGetAll();\n        this.getTodaysDate();\n        this.formReset();\n        this.spinner(true);\n        clientCallHistoryForm.resetForm();\n        this.isCreate = false;\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CLI_C_H);\n        this.spinner(true);\n      }\n    );\n  }\n  public update(clientCallHistoryForm: NgForm) {\n    this.spinner(false);\n    const temp = this.http.update(this.model, this.urlConstants.CCHUpdate);\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.UPDATE, this.properties.CLI_C_H);\n        this.formButtonsToggler = true;\n        this.formReset();\n        this.init();\n        this.getRecruiterId();\n        this.getTodaysDate();\n        this.spinner(true);\n        this.initialGetAll();\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n        clientCallHistoryForm.resetForm();\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CLI_C_H);\n        this.spinner(true);\n      }\n    );\n  }\n\n  public cancelForm(clientCallHistoryForm: NgForm) {\n    clientCallHistoryForm.resetForm();\n    this.formReset();\n    this.init();\n    this.readOnlyForm = \"\";\n    this.enableButtonType = \"\";\n    this.showAction = false;\n  }\n  public trash(): void {\n    this.spinner(false);\n    const temp = this.http.delete(\n      this.urlConstants.CCHDelete + this.selectedRecrdToDel\n    );\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.DELETE, this.properties.CLI_C_H);\n        this.init();\n        this.getRecruiterId();\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.getTodaysDate();\n        this.close();\n        this.initialGetAll();\n        this.formReset();\n        this.spinner(true);\n        this.showAction = false;\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CLI_C_H);\n        this.spinner(true);\n      }\n    );\n  }\n  /**\n   * @param\n   * 1) content consists the modal instance\n   * 2) Selected contains the code of selected row\n   */\n  public open(event: any, content) {\n    if (event) {\n      this.selectedRecrdToDel = event;\n    }\n    this.modalRef = this.modalService.open(content);\n    this.modalRef.result.then(\n      result => {\n        this.closeResult = `Closed with: ${result}`;\n      },\n      reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      }\n    );\n  }\n  public close() {\n    this.modalRef.close();\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n  private spinner(isSpinner: boolean) {\n    this.listReturned = isSpinner;\n  }\n  pageChanged(event) {\n    this.paginateConfig.currentPage = event;\n    this.initialGetAll();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { ClientCallHistoryRoutingModule } from \"./client-call-history-routing.module\";\nimport { ClientCallHistoryComponent } from \"./client-call-history.component\";\nimport {\n  PageHeaderModule,\n  SharedPipesModule,\n  ActionListModule\n} from \"../../shared\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxPaginationModule,\n    ClientCallHistoryRoutingModule,\n    NgbModule,\n    FormsModule,\n    PageHeaderModule,\n    SharedPipesModule,\n    ActionListModule\n  ],\n  declarations: [ClientCallHistoryComponent]\n})\nexport class ClientCallHistoryModule {}\n"],"sourceRoot":""}