{"version":3,"sources":["webpack:///./src/app/layout/payments/payments-routing.module.ts","webpack:///./src/app/layout/payments/payments.component.html","webpack:///./src/app/layout/payments/payments.component.scss","webpack:///./src/app/layout/payments/payments.component.ts","webpack:///./src/app/layout/payments/payments.model.ts","webpack:///./src/app/layout/payments/payments.module.ts"],"names":[],"mappings":"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","file":"payments-payments-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PaymentsComponent } from './payments.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PaymentsComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PaymentsRoutingModule {}\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [icon1]=\\\"'fa-user'\\\" [heading1]=\\\"'Administration'\\\" [icon2]=\\\"'fa-inr'\\\" [heading2]=\\\"'Payments'\\\">\\n  </app-page-header>\\n  <div class=\\\"spinner padding-top justify-content-md-center\\\" *ngIf=\\\"!listReturned\\\">\\n    <div class=\\\"bounce1\\\"></div>\\n    <div class=\\\"bounce2\\\"></div>\\n    <div class=\\\"bounce3\\\"></div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"listReturned\\\">\\n    <div class=\\\"col-md-7\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"search...\\\"\\n            [(ngModel)]=\\\"currSearchTxt\\\" /></div>\\n      </div>\\n      <div class=\\\"table-responsive mt-2 tableFixHead\\\" [style.height.px]=\\\"screenHeight\\\">\\n        <table class=\\\"table table-hover table-striped\\\">\\n          <thead>\\n            <tr>\\n              <th>\\n                Invoice\\n              </th>\\n              <th>\\n                Company\\n              </th>\\n              <th>\\n                Consultant\\n                <!-- </th>\\n              <th>\\n                <span class=\\\"pull-right\\\">Action</span>\\n              </th> -->\\n              </th>\\n              <th>Pending Since</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let pl of paymentsList.list | paginate: paginateConfig; let i = index\\\" (click)=\\\"setModel(pl.id)\\\"\\n              [ngClass]=\\\"{ 'bl-green': pl.paidStatus == 'Paid', 'bl-red':  pl.paidStatus == 'Unpaid'}\\\">\\n              <td>\\n                {{ pl.invoiceDate | date }}\\n              </td>\\n              <td>\\n                {{ pl.companyName }}\\n              </td>\\n              <td>\\n                {{ pl.candidateName }}\\n              </td>\\n              <td>\\n                {{(pl.paidStatus === 'Unpaid' && calculatePendingSince(pl.joiningDate) > 0) ? calculatePendingSince(pl.joiningDate)+' days' : ''}}\\n              </td>\\n              <!-- <td width=\\\"100\\\">\\n                <app-action [trashContent]=\\\"trashContent\\\" [id]=\\\"pl.id\\\" [isTrash]=\\\"trash\\\" (trash)=\\\"open($event)\\\"> </app-action>\\n              </td> -->\\n            </tr>\\n          </tbody>\\n        </table>\\n        <div class=\\\"col-12 justify-content-center mb-5\\\" *ngIf=\\\"paymentsList.noOfRecords > properties.ITEMSPERPAGE\\\">\\n          <pagination-controls (pageChange)=\\\"pageChanged($event)\\\"></pagination-controls>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\" col-md-5\\\">\\n      <form name=\\\"form\\\" id=\\\"paymentsForm\\\" (ngSubmit)=\\\"f.form.valid && create(f)\\\" #f=\\\"ngForm\\\" novalidate\\n        *ngIf=\\\"(clientApplicationList.length > 0 && enableButtonType == '') || (clientApplicationList.length < 0 || enableButtonType != '')\\\">\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12 form-group\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">\\n              Add\\n            </button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\" class=\\\"btn btn-secondary ml-2\\\"\\n              (click)=\\\"update(f)\\\">\\n              Update\\n            </button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\" (click)=\\\"enableFormEditable()\\\">\\n                  Edit\\n                </button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n\\n            <span class=\\\"pull-right\\\" *ngIf=\\\"showAction && readOnlyForm == 'R'\\\">\\n              <div class=\\\"dropdown theme-dropdown clearfix\\\" placement=\\\"bottom-right\\\" ngbDropdown>\\n                <!-- <button class=\\\"btn btn-secondary\\\" >\\n                                Dropdown\\n                            </button> -->\\n                <i class=\\\"fa fa-bars\\\" ngbDropdownToggle></i>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" ngbDropdownMenu>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"enableFormEditable()\\\">Edit</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"cancelForm(f)\\\">New</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"open(model.id, uploadContent)\\\">File Upload</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"downloadBif()\\\">Download BIF</a>\\n                  <a class=\\\"dropdown-item drop-list\\\" (click)=\\\"open(model.id, trashContent)\\\">Delete</a>\\n                </div>\\n              </div>\\n            </span>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group \\\" data-provide=\\\"datepicker\\\">\\n              <label>Invoice Date<span class=\\\"required\\\">*</span></label>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"invoiceDate\\\" [(ngModel)]=\\\"model.invoiceDate\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && invoiceDate.invalid }\\\" #invoiceDate=\\\"ngModel\\\"\\n                [readonly]=\\\"readOnlyForm == 'R'\\\" (change)=\\\"setJoiningDate()\\\" max=\\\"9999-12-31\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Invoice Date is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\" *ngIf=\\\"readOnlyForm == ''\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Client Application<span class=\\\"required\\\">*</span></label>\\n              <select class=\\\"form-control\\\" name=\\\"cp\\\" [disabled]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"caId\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && cp.invalid }\\\" #cp=\\\"ngModel\\\" (change)=\\\"getCPDetails(caId)\\\"\\n                required>\\n                <option *ngFor=\\\"let cal of clientApplicationList\\\" [ngValue]=\\\"cal.id\\\">{{ cal.name }} </option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\">\\n                Client Application is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Company Name<span class=\\\"required\\\">*</span></label>\\n              <input class=\\\"form-control capi\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.companyName\\\"\\n                name=\\\"name\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && name.invalid }\\\" #name=\\\"ngModel\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Company name is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Company Website<span class=\\\"required\\\">*</span></label>\\n              <input class=\\\"form-control\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.companyWebsite\\\" name=\\\"web\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && web.invalid }\\\" #web=\\\"ngModel\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Company website is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Company Gst<span class=\\\"required\\\">*</span></label>\\n              <input class=\\\"form-control capi\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.companyGstNum\\\"\\n                name=\\\"companyGstNum\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && companyGstNum.invalid }\\\"\\n                #companyGstNum=\\\"ngModel\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Company gst is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Credit Period<span class=\\\"required\\\">*</span></label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.creditPeriod\\\"\\n                name=\\\"creditPeriod\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && creditPeriod.invalid }\\\"\\n                #creditPeriod=\\\"ngModel\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Credit period is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Guarentee Period<span class=\\\"required\\\">*</span></label>\\n              <input type=\\\"text\\\" class=\\\"form-control capi\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                [(ngModel)]=\\\"model.gauranteePeriod\\\" name=\\\"gauranteePeriod\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && gauranteePeriod.invalid }\\\" #gauranteePeriod=\\\"ngModel\\\"\\n                required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Guarentee period is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Amount Receivable</label>\\n              <input type=\\\"number\\\" class=\\\"form-control capi\\\" [readonly]=\\\"true\\\" [(ngModel)]=\\\"model.amountReceivable\\\"\\n                name=\\\"amountReceivable\\\" #amountReceivable=\\\"ngModel\\\" />\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Contact person<span class=\\\"required\\\">*</span></label>\\n              <input class=\\\"form-control\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.contactPerson\\\"\\n                name=\\\"contactPerson\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && contactPerson.invalid }\\\"\\n                #contactPerson=\\\"ngModel\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Contact person is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Contact Person Designation<span class=\\\"required\\\">*</span></label>\\n              <input class=\\\"form-control\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.contactPersonDesignation\\\"\\n                name=\\\"contactPersonDesignation\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && contactPersonDesignation.invalid }\\\"\\n                #contactPersonDesignation=\\\"ngModel\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Contact person designation is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Contact person Ph.<span class=\\\"required\\\">*</span></label>\\n              <input class=\\\"form-control capi\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.contactPersonNum\\\"\\n                name=\\\"contactPersonNum\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && contactPersonNum.invalid }\\\"\\n                #contactPersonNum=\\\"ngModel\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Phone is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Contact person email</label>\\n              <input class=\\\"form-control\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.contactPersonEmail\\\"\\n                name=\\\"contactPersonEmail\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && contactPersonEmail.invalid }\\\"\\n                #contactPersonEmail=\\\"ngModel\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Email is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group \\\" data-provide=\\\"datepicker\\\">\\n              <label>Joining Date<span class=\\\"required\\\">*</span></label>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"joiningDate\\\" [(ngModel)]=\\\"model.joiningDate\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && joiningDate.invalid }\\\" #joiningDate=\\\"ngModel\\\"\\n                [readonly]=\\\"readOnlyForm == 'R'\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Joining date is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Candidate Name<span class=\\\"required\\\">*</span></label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"candidateName\\\" [(ngModel)]=\\\"model.candidateName\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && candidateName.invalid }\\\" candidateName\\n                [readonly]=\\\"readOnlyForm == 'R'\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Candidate Name is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Designation<span class=\\\"required\\\">*</span></label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"designation\\\" [(ngModel)]=\\\"model.designation\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && designation.invalid }\\\" #designation=\\\"ngModel\\\"\\n                [readonly]=\\\"readOnlyForm == 'R'\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Designation is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Annual Package<span class=\\\"required\\\">*</span></label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"annualPackage\\\" [(ngModel)]=\\\"model.annualPackage\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && annualPackage.invalid }\\\" #annualPackage=\\\"ngModel\\\"\\n                [readonly]=\\\"readOnlyForm == 'R'\\\" (blur)=\\\"calculateAmountReceivable()\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Annual package is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Phone<span class=\\\"required\\\">*</span></label>\\n              <input class=\\\"form-control\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.phone\\\" name=\\\"phone\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && phone.invalid }\\\" #phone=\\\"ngModel\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Phone is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Branch Head<span class=\\\"required\\\">*</span></label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"branchHeadName\\\" [(ngModel)]=\\\"model.branchHeadName\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && branchHeadName.invalid }\\\" #branchHeadName=\\\"ngModel\\\"\\n                [readonly]=\\\"readOnlyForm == 'R'\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Branch Head Name is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Branch Location <span class=\\\"required\\\">*</span></label>\\n              <input class=\\\"form-control\\\" [readonly]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.branchLocation\\\"\\n                name=\\\"branchLocation\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && branchLocation.invalid }\\\"\\n                #branchLocation=\\\"ngModel\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Branch location is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Service Charge <span class=\\\"required\\\">*</span></label>\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                [(ngModel)]=\\\"model.serviceCharge\\\" name=\\\"serviceCharge\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && serviceCharge.invalid }\\\" #serviceCharge=\\\"ngModel\\\"\\n                (blur)=\\\"calculateAmountReceivable()\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Service charge is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Payment Status <span class=\\\"required\\\">*</span></label>\\n              <select class=\\\"form-control\\\" name=\\\"ps\\\" [disabled]=\\\"readOnlyForm == 'R'\\\" [(ngModel)]=\\\"model.paidStatus\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && ps.invalid }\\\" #ps=\\\"ngModel\\\" required>\\n                <option *ngFor=\\\"let cal of properties.PAYMENT_STATUS\\\">{{ cal }} </option>\\n              </select>\\n              <div class=\\\"invalid-feedback\\\">\\n                Payment Status is mandatory\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\" *ngIf=\\\"model.paidStatus == 'Paid'\\\">\\n            <div class=\\\"form-group\\\" data-provide=\\\"datepicker\\\">\\n              <label>Paid On <span class=\\\"required\\\">*</span></label>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"paidOn\\\" [(ngModel)]=\\\"model.paidOn\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && paidOn.invalid }\\\" #paidOn=\\\"ngModel\\\"\\n                [readonly]=\\\"readOnlyForm == 'R'\\\" required />\\n              <div class=\\\"invalid-feedback\\\">\\n                Paid On is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Billing Address<span class=\\\"required\\\">*</span></label>\\n              <textarea class=\\\"form-control\\\" cols=\\\"5\\\" rows=\\\"5\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                [(ngModel)]=\\\"model.billingAddress\\\" name=\\\"billingAddress\\\"\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && billingAddress.invalid }\\\" #billingAddress=\\\"ngModel\\\"\\n                required></textarea>\\n              <div class=\\\"invalid-feedback\\\">\\n                Billing address is mandatory\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"row\\\" *ngIf=\\\"model.properties.length > 0\\\">\\n            <div class=\\\"col-md-12 ml-3\\\" *ngIf=\\\"model.properties.length > 0\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Additional Properties</label>\\n                <div class=\\\"row\\\" *ngFor=\\\"let ap of model.properties; let i = index\\\">\\n                  <div class=\\\"col-md-5\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"ap.name\\\" class=\\\"form-control\\\" name=\\\"addPropName{{ i }}\\\"\\n                      [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                  </div>\\n                  <div class=\\\"col-md-5\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"ap.value\\\" class=\\\"form-control\\\" name=\\\"addPropValue{{ i }}\\\"\\n                      [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <i class=\\\"fa fa-minus\\\" aria-hidden=\\\"true\\\" id=\\\"decrease\\\" *ngIf=\\\"enableButtonType != 'E'\\\"\\n                      (click)=\\\"propertiesListIncrement($event.target, i)\\\"></i>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Description</label>\\n              <textarea class=\\\"form-control\\\" cols=\\\"5\\\" rows=\\\"5\\\" [readonly]=\\\"readOnlyForm == 'R'\\\"\\n                [(ngModel)]=\\\"model.description\\\" name=\\\"description\\\" #notes=\\\"ngModel\\\"></textarea>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Additional Properties</label>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-5\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"apName\\\" class=\\\"form-control\\\" name=\\\"apName\\\"\\n                    [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                </div>\\n                <div class=\\\"col-md-5\\\">\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"apValue\\\" class=\\\"form-control\\\" name=\\\"apValue\\\"\\n                    [readonly]=\\\"readOnlyForm == 'R'\\\" />\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\" id=\\\"increase\\\" *ngIf=\\\"enableButtonType != 'E'\\\"\\n                    (click)=\\\"propertiesListIncrement($event.target, 0)\\\"></i>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"model?.files?.length > 0\\\">\\n          <div class=\\\"col-md-12 ml-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Files</label>\\n              <div class=\\\"row\\\" *ngFor=\\\"let ap of model.files; let i = index\\\">\\n                <div class=\\\"col-md-5\\\">\\n                  <span class=\\\"file-download\\\" (click)=\\\"downloadFile(ap.id)\\\">\\n                    {{ ap.fileName }}\\n                  </span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row text-center\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <button type=\\\"submit\\\" *ngIf=\\\"enableButtonType == ''\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\">\\n              Add\\n            </button>\\n            <button type=\\\"button\\\" *ngIf=\\\"enableButtonType == 'U'\\\"\\n              [disabled]=\\\"f.form.pristine || f.form.invalid || isCreate\\\" class=\\\"btn btn-secondary ml-2\\\"\\n              (click)=\\\"update(f)\\\">\\n              Update\\n            </button>\\n            <!-- <button *ngIf=\\\"enableButtonType == 'E'\\\" class=\\\"btn btn-secondary ml-2\\\" type=\\\"button\\\" (click)=\\\"enableFormEditable()\\\">\\n              Edit\\n            </button> -->\\n            <button type=\\\"button\\\" (click)=\\\"cancelForm(f)\\\" class=\\\"btn btn-secondary ml-3\\\"\\n              *ngIf=\\\"enableButtonType == '' || enableButtonType == 'U'\\\">\\n              {{ enableButtonType != '' ? 'Close' : 'Clear' }}\\n            </button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #trashContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">Contact</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>Are you sure you want to delete ? &hellip;</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"trash()\\\">Ok</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n<ng-template #uploadContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header modal-popup-header-bg\\\">\\n    <h4 class=\\\"modal-title\\\">{{ properties.UPOAD }}</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <input class=\\\"form-control\\\" type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n    <textarea class=\\\"form-control mt-3\\\" placeholder=\\\"comments\\\" cols=\\\"5\\\" rows=\\\"5\\\" [(ngModel)]=\\\"comments\\\"></textarea>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"uploadFiles()\\\">Upload</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n\"","module.exports = \".required {\\n  color: red; }\\n\\n.my-custom-scrollbar {\\n  position: relative;\\n  height: 31.5em;\\n  overflow: auto; }\\n\\n.table-wrapper-scroll-y {\\n  display: block; }\\n\\n.bl-trans {\\n  border-left: 6px solid transparent; }\\n\\n.padding-top {\\n  padding-top: 60px; }\\n\\n.dropdown-toggle::after {\\n  display: none; }\\n\\n.drop-list:hover {\\n  cursor: pointer; }\\n\\n.table-striped tbody tr:nth-of-type(odd) {\\n  background-color: #c1c1c1; }\\n\\n.file-download:hover {\\n  cursor: pointer;\\n  color: blue;\\n  text-decoration: underline; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3BheW1lbnRzL0Q6XFxDQ1BUIE1BSU5cXHRydW5rXFxjY3B0LXBhcmVudFxcY2NwdC13ZWJcXHNyY1xcbWFpblxcd2ViL3NyY1xcYXBwXFxsYXlvdXRcXHBheW1lbnRzXFxwYXltZW50cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVUsRUFDWDs7QUFDRDtFQUNFLG1CQUFrQjtFQUNsQixlQUFjO0VBQ2QsZUFBYyxFQUNmOztBQUNEO0VBQ0UsZUFBYyxFQUNmOztBQUNEO0VBQ0UsbUNBQWtDLEVBQ25DOztBQUNEO0VBQ0Usa0JBQWlCLEVBQ2xCOztBQUNEO0VBQ0UsY0FBYSxFQUNkOztBQUNEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBQ0Q7RUFFSSwwQkFBeUIsRUFDMUI7O0FBRUg7RUFDRSxnQkFBZTtFQUNmLFlBQVc7RUFDWCwyQkFBMEIsRUFDM0IiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvcGF5bWVudHMvcGF5bWVudHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVxdWlyZWQge1xyXG4gIGNvbG9yOiByZWQ7XHJcbn1cclxuLm15LWN1c3RvbS1zY3JvbGxiYXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBoZWlnaHQ6IDMxLjVlbTtcclxuICBvdmVyZmxvdzogYXV0bztcclxufVxyXG4udGFibGUtd3JhcHBlci1zY3JvbGwteSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuLmJsLXRyYW5zIHtcclxuICBib3JkZXItbGVmdDogNnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG59XHJcbi5wYWRkaW5nLXRvcCB7XHJcbiAgcGFkZGluZy10b3A6IDYwcHg7XHJcbn1cclxuLmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXIge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLmRyb3AtbGlzdDpob3ZlciB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi50YWJsZS1zdHJpcGVkIHtcclxuICB0Ym9keSB0cjpudGgtb2YtdHlwZShvZGQpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjMWMxYzE7XHJcbiAgfVxyXG59XHJcbi5maWxlLWRvd25sb2FkOmhvdmVyIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgY29sb3I6IGJsdWU7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, HostListener } from \"@angular/core\";\nimport { routerTransition } from \"../../router.animations\";\nimport { PaymentsModel, ActionsList } from \"./payments.model\";\nimport { FileUploader, FileLikeObject } from \"ng2-file-upload\";\nimport { HttpClientService } from \"src/app/shared/services/http.service\";\nimport { URLConstants } from \"../components/constants/url-constants\";\nimport { ToastrCustomService } from \"src/app/shared/services/toastr.service\";\nimport {\n  NgbModal,\n  ModalDismissReasons,\n  NgbModalRef\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgForm } from \"@angular/forms\";\nimport { AdditionalPropertiesModel } from \"src/app/additional-properties.model\";\nimport { forkJoin } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { Properties } from \"../components/constants/properties\";\n\n@Component({\n  selector: \"app-payments\",\n  templateUrl: \"./payments.component.html\",\n  styleUrls: [\"./payments.component.scss\"],\n  animations: [routerTransition()]\n})\nexport class PaymentsComponent implements OnInit {\n  public model: PaymentsModel = <PaymentsModel>{};\n  public paymentsList: any = [];\n  public clientApplicationList: Array<any> = [];\n  public consultantList: Array<any> = [];\n  private urlConstants = new URLConstants();\n  public properties = new Properties();\n  public readOnlyForm = \"\";\n  public enableButtonType = \"\";\n  public currSearchTxt = \"\";\n  public caId = 0;\n  public screenHeight: any;\n  private selectedRecrdToDel = 0;\n  public closeResult = \"\";\n  public apName = \"\";\n  public apValue = \"\";\n  public comments = \"\";\n  public showAction: boolean = false;\n  public actionsList = new ActionsList();\n  public uploader: FileUploader = new FileUploader({});\n  public action: string = null;\n  private modalRef: NgbModalRef;\n  public isCreate: boolean = false;\n  private getAllCA = this.http.get(this.urlConstants.CAJobConfirmed);\n  public listReturned: boolean;\n  public paginateConfig: any = {\n    itemsPerPage: this.properties.ITEMSPERPAGE,\n    currentPage: 1,\n    totalItems: 0\n  };\n  constructor(\n    private http: HttpClientService,\n    private router: Router,\n    private toastr: ToastrCustomService,\n    private modalService: NgbModal\n  ) {\n    this.getScreenSize();\n  }\n  @HostListener(\"window:resize\", [\"$event\"])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n  }\n  ngOnInit() {\n    /*Autheticate user with the token */\n    if (!this.http.isAuthenticate()) {\n      this.router.navigate([\"/login\"]);\n    }\n    this.init();\n    this.initialGetAll();\n    this.spinner(true);\n    this.getAllDropdowns();\n  }\n  init() {\n    // this.spinner(false);\n    // this.http.get(this.urlConstants.PaymentGetAll).subscribe(resp => {\n    //     this.paymentsList = resp as any;\n    //     this.spinner(true);\n    // });\n    this.getTodaysDate();\n    this.setDefaultValues();\n    this.model.properties = [];\n    this.model.files = [];\n  }\n  public initialGetAll() {\n    let pageNumber = this.paginateConfig.currentPage - 1;\n    let temp = this.http.get(\n      this.urlConstants.PaymentGetAll + pageNumber + \"&pageSize=50&sortBy=id\"\n    );\n    temp.subscribe(resp => {\n      this.paymentsList = resp as any;\n      //this.pageChange(this.page);\n      this.paginateConfig.totalItems = this.paymentsList.noOfRecords;\n    });\n  }\n  getAllDropdowns() {\n    this.spinner(false);\n    forkJoin(\n      this.getAllCA\n      // forkJoin on works for observables that complete\n    ).subscribe(listofrecords => {\n      this.clientApplicationList = listofrecords[0] as any;\n      this.spinner(true);\n    });\n  }\n  private validate(value: any): boolean {\n    const bool = value == null ? true : false;\n    return bool;\n  }\n  private setDefaultValues() {\n    this.model.branchHeadName = this.properties.HEAD;\n    this.model.phone = this.properties.PHONE;\n    this.model.branchLocation = this.properties.LOCATION;\n    this.model.paidStatus = this.properties.PAYMENT_STATUS[1];\n  }\n  private getTodaysDate() {\n    const today = new Date();\n    const dd = String(today.getDate()).padStart(2, \"0\");\n    const mm = String(today.getMonth() + 1).padStart(2, \"0\"); // January is 0!\n    const yyyy = today.getFullYear();\n    const temp = yyyy + \"-\" + mm + \"-\" + dd;\n    this.model.invoiceDate = temp;\n    this.model.joiningDate = temp;\n  }\n  public setJoiningDate() {\n    this.model.joiningDate = this.model.invoiceDate;\n  }\n  public dblSetModel() {\n    this.readOnlyForm = \"U\";\n    this.enableButtonType = \"U\";\n    this.showAction = true;\n    this.action = null;\n  }\n  enableFormEditable(): void {\n    this.readOnlyForm = \"U\";\n    this.enableButtonType = \"U\";\n  }\n\n  public setModel(id) {\n    this.spinner(false);\n    this.getById(id);\n    this.readOnlyForm = \"R\";\n    this.enableButtonType = \"E\";\n    this.showAction = true;\n    this.action = null;\n  }\n  private getById(id) {\n    const temp = this.http.get(this.urlConstants.PaymentGetById + id);\n    temp.subscribe(resp => {\n      this.model = this.mapToUpdateModel(resp);\n      this.spinner(true);\n      if (this.model.properties == null) {\n        this.model.properties = [];\n      }\n    });\n  }\n  public getCPDetails(caId) {\n    this.spinner(false);\n    this.http.get(this.urlConstants.CAGetById + caId).subscribe(resp => {\n      let temp = resp as any;\n\n      this.model.companyName = temp.clientPosition.client.name;\n      this.model.companyWebsite = temp.clientPosition.client.website;\n      this.model.companyGstNum = temp.clientPosition.client.gst;\n      this.model.creditPeriod = temp.clientPosition.client.creditPeriod;\n      this.model.gauranteePeriod = temp.clientPosition.client.guaranteePeriod;\n      this.model.contactPerson = temp.clientPosition.client.contactPersonName;\n      this.model.contactPersonNum = temp.clientPosition.client.phone;\n      this.model.contactPersonEmail = temp.clientPosition.client.email;\n      this.model.designation = temp.clientPosition.role;\n      this.model.billingAddress = temp.clientPosition.client.billingAddress;\n      this.model.serviceCharge = temp.clientPosition.client.serviceCharge;\n      this.model.candidateName = temp.consultant.fullname;\n      this.model.generatedCode = temp.clientPosition.generatedCode;\n      this.spinner(true);\n    });\n  }\n  private mapToUpdateModel(response) {\n    const temp = response;\n    this.model = temp;\n    return this.model;\n  }\n  public propertiesListIncrement(event, i: number) {\n    switch (event.id) {\n      case \"decrease\": {\n        this.model.properties.splice(i, 1);\n        break;\n      }\n      case \"increase\": {\n        if (this.model.properties == null) {\n          this.model.properties = [];\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else if (this.model.properties.length == 0) {\n          this.model.properties.push(<AdditionalPropertiesModel>{\n            name: this.apName,\n            value: this.apValue\n          });\n          this.apName = \"\";\n          this.apValue = \"\";\n        } else {\n          let propertyExist: boolean;\n          for (let i = 0; i < this.model.properties.length; i++) {\n            if (\n              this.model.properties[i].name == this.apName &&\n              this.model.properties[i].value == this.apValue\n            ) {\n              propertyExist = true;\n            } else {\n              propertyExist = false;\n            }\n          }\n          if (propertyExist) {\n            this.toastr.error(\n              this.properties.PROPERTY_EXIST,\n              this.properties.PROPERTIES\n            );\n          } else {\n            this.model.properties.push(<AdditionalPropertiesModel>{\n              name: this.apName,\n              value: this.apValue\n            });\n            this.apName = \"\";\n            this.apValue = \"\";\n          }\n        }\n        break;\n      }\n    }\n  }\n  public actions(value, trashContent, form) {\n    console.log(value);\n    switch (value) {\n      case \"Delete\": {\n        this.open(this.model.id, trashContent);\n        break;\n      }\n      case \"Edit\": {\n        this.enableFormEditable();\n        break;\n      }\n      case \"Close\": {\n        this.cancelForm(form);\n      }\n    }\n  }\n  private formReset() {\n    this.model = <PaymentsModel>{ properties: [] };\n  }\n  public create(paymentsForm: NgForm): void {\n    this.spinner(false);\n    this.isCreate = true;\n    const temp = this.http.post(this.model, this.urlConstants.PaymentCreate);\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.CREATE, this.properties.CONTACT);\n        this.init();\n        this.formReset();\n        paymentsForm.resetForm();\n        this.isCreate = false;\n        this.paginateConfig.currentPage = 1;\n        this.initialGetAll();\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CONTACT);\n        this.isCreate = false;\n        this.spinner(true);\n      }\n    );\n  }\n  public update(paymentsForm: NgForm) {\n    this.spinner(false);\n    this.isCreate = true;\n    const temp = this.http.update(this.model, this.urlConstants.PaymentUpdate);\n    temp.subscribe(\n      resp => {\n        this.formReset();\n        this.toastr.success(this.properties.UPDATE, this.properties.CONTACT);\n        this.init();\n        paymentsForm.resetForm();\n        this.initialGetAll();\n        this.isCreate = false;\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CONTACT);\n        this.isCreate = false;\n        this.spinner(true);\n      }\n    );\n  }\n  public cancelForm(consultantCallHistory: NgForm) {\n    consultantCallHistory.resetForm();\n    this.formReset();\n    this.readOnlyForm = \"\";\n    this.enableButtonType = \"\";\n    this.showAction = false;\n    this.init();\n  }\n  public trash(): void {\n    this.spinner(false);\n    const temp = this.http.delete(\n      this.urlConstants.PaymentDelete + this.selectedRecrdToDel\n    );\n    temp.subscribe(\n      resp => {\n        this.toastr.success(this.properties.DELETE, this.properties.CONTACT);\n        this.init();\n        this.close();\n        this.formReset();\n        this.initialGetAll();\n        this.readOnlyForm = \"\";\n        this.enableButtonType = \"\";\n        this.showAction = false;\n        this.spinner(true);\n      },\n      err => {\n        this.toastr.error(err.error.message, this.properties.CONTACT);\n        this.spinner(true);\n      }\n    );\n  }\n  /** Get Uploaded files */\n  private getFiles(): FileLikeObject[] {\n    return this.uploader.queue.map(fileItem => {\n      return fileItem.file;\n    });\n  }\n  /**Download file */\n  public downloadFile(id: number) {\n    this.http.get(this.urlConstants.FileDownload + id).subscribe(\n      resp => {},\n      err => {\n        if (err.status == 200) window.open(err.url);\n      }\n    );\n  }\n  /** Upload documents of respective consultant */\n  public uploadFiles() {\n    const files = this.getFiles();\n    const formData = new FormData();\n    formData.append(\"file\", files[0].rawFile, files[0].name);\n    const params =\n      \"refId=\" +\n      this.selectedRecrdToDel +\n      \"&refType=Payment&comments=\" +\n      this.comments;\n    this.http.upload(this.urlConstants.FileUpload + params, formData).subscribe(\n      resp => {\n        let temp: any = resp;\n        this.uploader = new FileUploader({});\n        this.toastr.success(temp.message, \"Client\");\n        this.close();\n      },\n      err => {\n        this.toastr.success(err.error.message, \"Client\");\n      }\n    );\n  }\n  /**\n   * @param\n   * 1) content consists the modal instance\n   * 2) Selected contains the code of selected row\n   */\n  public open(event: any, content: any) {\n    if (event) {\n      this.selectedRecrdToDel = event;\n    }\n    this.modalRef = this.modalService.open(content);\n    this.modalRef.result.then(\n      result => {\n        this.closeResult = `Closed with: ${result}`;\n      },\n      reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      }\n    );\n  }\n  public close() {\n    this.modalRef.close();\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n  private spinner(isSpinner: boolean) {\n    this.listReturned = isSpinner;\n  }\n  /**Download file */\n  public downloadBif() {\n    this.http.get(this.urlConstants.PaymentGetExcel + this.model.id).subscribe(\n      resp => {},\n      err => {\n        if (err.status == 200) window.open(err.url);\n      }\n    );\n  }\n  public calculateAmountReceivable() {\n    if (this.model.annualPackage && this.model.serviceCharge)\n      this.model.amountReceivable =\n        parseFloat(this.model.annualPackage) *\n        1.18 *\n        parseFloat(this.model.serviceCharge) *\n        0.0075;\n  }\n\n  public calculatePendingSince(jd: any): number {\n    let today = new Date().getTime();\n    let joiningDate = new Date(jd).getTime();\n    return Math.round(Math.abs(today - joiningDate) / (1000 * 3600 * 24));\n  }\n}\n","import { AdditionalPropertiesModel } from \"src/app/additional-properties.model\";\r\nexport interface PaymentsModel {\r\n  id: string;\r\n  annualPackage: string;\r\n  billingAddress: string;\r\n  branchHeadName: string;\r\n  branchLocation: string;\r\n  candidateName: string;\r\n  companyGstNum: string;\r\n  companyName: string;\r\n  companyWebsite: string;\r\n  contactPerson: string;\r\n  contactPersonDesignation: string;\r\n  contactPersonEmail: string;\r\n  contactPersonNum: string;\r\n  creditPeriod: string;\r\n  description: string;\r\n  designation: string;\r\n  gauranteePeriod: string;\r\n  invoiceDate: string;\r\n  joiningDate: string;\r\n  phone: string;\r\n  serviceCharge: string;\r\n  properties: Array<AdditionalPropertiesModel>;\r\n  files: any;\r\n  paidOn: string;\r\n  paidStatus: string;\r\n  generatedCode: string;\r\n  amountReceivable: number;\r\n}\r\nexport class ActionsList {\r\n  actions = [\r\n    { key: \"Edit\", value: \"Edit\" },\r\n    { key: \"Delete\", value: \"Delete\" },\r\n    { key: \"Close\", value: \"Close\" }\r\n  ];\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport {\n  PageHeaderModule,\n  SharedPipesModule,\n  ActionListModule\n} from \"../../shared\";\nimport { AngularEditorModule } from \"@kolkov/angular-editor\";\nimport { PaymentsComponent } from \"./payments.component\";\nimport { PaymentsRoutingModule } from \"./payments-routing.module\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\nimport { FileUploadModule } from \"ng2-file-upload\";\n\n@NgModule({\n  imports: [\n    NgbModule,\n    NgxPaginationModule,\n    CommonModule,\n    FileUploadModule,\n    PaymentsRoutingModule,\n    FormsModule,\n    PageHeaderModule,\n    SharedPipesModule,\n    AngularEditorModule,\n    ActionListModule\n  ],\n  declarations: [PaymentsComponent]\n})\nexport class PaymentsModule {}\n"],"sourceRoot":""}